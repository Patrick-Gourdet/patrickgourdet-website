webpackJsonpac__name_([4],{

/***/ "./node_modules/easy-pie-chart/dist/jquery.easypiechart.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * easy-pie-chart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.7\n **/\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(\"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = function (a0) {\n      return (factory(a0));\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    factory(jQuery);\n  }\n}(this, function ($) {\n\n/**\n * Renderer to render the chart on a canvas object\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n * @param {object}     options options object of the plugin\n */\nvar CanvasRenderer = function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) === 'object') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n\n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n};\n\nvar EasyPieChart = function(el, opts) {\n\tvar defaultOptions = {\n\t\tbarColor: '#ef1e25',\n\t\ttrackColor: '#f9f9f9',\n\t\tscaleColor: '#dfe0e0',\n\t\tscaleLength: 5,\n\t\tlineCap: 'round',\n\t\tlineWidth: 3,\n\t\ttrackWidth: undefined,\n\t\tsize: 110,\n\t\trotate: 0,\n\t\tanimate: {\n\t\t\tduration: 1000,\n\t\t\tenabled: true\n\t\t},\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\n\t\t\tt = t / (d/2);\n\t\t\tif (t < 1) {\n\t\t\t\treturn c / 2 * t * t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\tonStart: function(from, to) {\n\t\t\treturn;\n\t\t},\n\t\tonStep: function(from, to, currentValue) {\n\t\t\treturn;\n\t\t},\n\t\tonStop: function(from, to) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\t// detect present renderer\n\tif (typeof(CanvasRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = CanvasRenderer;\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = SVGRenderer;\n\t} else {\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\n\t}\n\n\tvar options = {};\n\tvar currentValue = 0;\n\n\t/**\n\t * Initialize the plugin by creating the options object and initialize rendering\n\t */\n\tvar init = function() {\n\t\tthis.el = el;\n\t\tthis.options = options;\n\n\t\t// merge user options into default options\n\t\tfor (var i in defaultOptions) {\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\n\t\t\t\tif (typeof(options[i]) === 'function') {\n\t\t\t\t\toptions[i] = options[i].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check for jQuery easing\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\n\t\t\toptions.easing = jQuery.easing[options.easing];\n\t\t} else {\n\t\t\toptions.easing = defaultOptions.easing;\n\t\t}\n\n\t\t// process earlier animate option to avoid bc breaks\n\t\tif (typeof(options.animate) === 'number') {\n\t\t\toptions.animate = {\n\t\t\t\tduration: options.animate,\n\t\t\t\tenabled: true\n\t\t\t};\n\t\t}\n\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\n\t\t\toptions.animate = {\n\t\t\t\tduration: 1000,\n\t\t\t\tenabled: options.animate\n\t\t\t};\n\t\t}\n\n\t\t// create renderer\n\t\tthis.renderer = new options.renderer(el, options);\n\n\t\t// initial draw\n\t\tthis.renderer.draw(currentValue);\n\n\t\t// initial update\n\t\tif (el.dataset && el.dataset.percent) {\n\t\t\tthis.update(parseFloat(el.dataset.percent));\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\n\t\t}\n\t}.bind(this);\n\n\t/**\n\t * Update the value of the chart\n\t * @param  {number} newValue Number between 0 and 100\n\t * @return {object}          Instance of the plugin for method chaining\n\t */\n\tthis.update = function(newValue) {\n\t\tnewValue = parseFloat(newValue);\n\t\tif (options.animate.enabled) {\n\t\t\tthis.renderer.animate(currentValue, newValue);\n\t\t} else {\n\t\t\tthis.renderer.draw(newValue);\n\t\t}\n\t\tcurrentValue = newValue;\n\t\treturn this;\n\t}.bind(this);\n\n\t/**\n\t * Disable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.disableAnimation = function() {\n\t\toptions.animate.enabled = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Enable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.enableAnimation = function() {\n\t\toptions.animate.enabled = true;\n\t\treturn this;\n\t};\n\n\tinit();\n};\n\n$.fn.easyPieChart = function(options) {\n\treturn this.each(function() {\n\t\tvar instanceOptions;\n\n\t\tif (!$.data(this, 'easyPieChart')) {\n\t\t\tinstanceOptions = $.extend({}, options, $(this).data());\n\t\t\t$.data(this, 'easyPieChart', new EasyPieChart(this, instanceOptions));\n\t\t}\n\t});\n};\n\n\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/easy-pie-chart/dist/jquery.easypiechart.js\n");

/***/ }),

/***/ "./node_modules/jquery-flot/jquery.flot.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery-flot/jquery.flot.js\n");

/***/ }),

/***/ "./node_modules/jquery-flot/jquery.flot.time.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\t\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"], \n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"], \n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\t$.plot.dateGenerator = dateGenerator;\n\n})(jQuery);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery-flot/jquery.flot.time.js\n");

/***/ }),

/***/ "./node_modules/jquery-ui/ui/disable-selection.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery UI Disable Selection 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: disableSelection\n//>>group: Core\n//>>description: Disable selection of text content within the set of matched elements.\n//>>docs: http://api.jqueryui.com/disableSelection/\n\n// This file is deprecated\n( function( factory ) {\n\tif ( true ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(\"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(\"./node_modules/jquery-ui/ui/version.js\") ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\nreturn $.fn.extend( {\n\tdisableSelection: ( function() {\n\t\tvar eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\n\t\t\t\"selectstart\" :\n\t\t\t\"mousedown\";\n\n\t\treturn function() {\n\t\t\treturn this.on( eventType + \".ui-disableSelection\", function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} );\n\t\t};\n\t} )(),\n\n\tenableSelection: function() {\n\t\treturn this.off( \".ui-disableSelection\" );\n\t}\n} );\n\n} ) );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL2pxdWVyeS11aS91aS9kaXNhYmxlLXNlbGVjdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELENBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXVpL3VpL2Rpc2FibGUtc2VsZWN0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBqUXVlcnkgVUkgRGlzYWJsZSBTZWxlY3Rpb24gMS4xMi4xXG4gKiBodHRwOi8vanF1ZXJ5dWkuY29tXG4gKlxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqL1xuXG4vLz4+bGFiZWw6IGRpc2FibGVTZWxlY3Rpb25cbi8vPj5ncm91cDogQ29yZVxuLy8+PmRlc2NyaXB0aW9uOiBEaXNhYmxlIHNlbGVjdGlvbiBvZiB0ZXh0IGNvbnRlbnQgd2l0aGluIHRoZSBzZXQgb2YgbWF0Y2hlZCBlbGVtZW50cy5cbi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kaXNhYmxlU2VsZWN0aW9uL1xuXG4vLyBUaGlzIGZpbGUgaXMgZGVwcmVjYXRlZFxuKCBmdW5jdGlvbiggZmFjdG9yeSApIHtcblx0aWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblxuXHRcdC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cblx0XHRkZWZpbmUoIFsgXCJqcXVlcnlcIiwgXCIuL3ZlcnNpb25cIiBdLCBmYWN0b3J5ICk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBCcm93c2VyIGdsb2JhbHNcblx0XHRmYWN0b3J5KCBqUXVlcnkgKTtcblx0fVxufSAoIGZ1bmN0aW9uKCAkICkge1xuXG5yZXR1cm4gJC5mbi5leHRlbmQoIHtcblx0ZGlzYWJsZVNlbGVjdGlvbjogKCBmdW5jdGlvbigpIHtcblx0XHR2YXIgZXZlbnRUeXBlID0gXCJvbnNlbGVjdHN0YXJ0XCIgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApID9cblx0XHRcdFwic2VsZWN0c3RhcnRcIiA6XG5cdFx0XHRcIm1vdXNlZG93blwiO1xuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMub24oIGV2ZW50VHlwZSArIFwiLnVpLWRpc2FibGVTZWxlY3Rpb25cIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0fSApO1xuXHRcdH07XG5cdH0gKSgpLFxuXG5cdGVuYWJsZVNlbGVjdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMub2ZmKCBcIi51aS1kaXNhYmxlU2VsZWN0aW9uXCIgKTtcblx0fVxufSApO1xuXG59ICkgKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2pxdWVyeS11aS91aS9kaXNhYmxlLXNlbGVjdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXVpL3VpL2Rpc2FibGUtc2VsZWN0aW9uLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gNCJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./node_modules/jquery-ui/ui/disable-selection.js\n");

/***/ }),

/***/ "./node_modules/jquery-ui/ui/widgets/resizable.js":
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery UI Resizable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Resizable\n//>>group: Interactions\n//>>description: Enables resize functionality for any element.\n//>>docs: http://api.jqueryui.com/resizable/\n//>>demos: http://jqueryui.com/resizable/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/resizable.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( true ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t\t\t__webpack_require__(\"./node_modules/jquery/dist/jquery.js\"),\n\t\t\t__webpack_require__(\"./node_modules/jquery-ui/ui/widgets/mouse.js\"),\n\t\t\t__webpack_require__(\"./node_modules/jquery-ui/ui/disable-selection.js\"),\n\t\t\t__webpack_require__(\"./node_modules/jquery-ui/ui/plugin.js\"),\n\t\t\t__webpack_require__(\"./node_modules/jquery-ui/ui/version.js\"),\n\t\t\t__webpack_require__(\"./node_modules/jquery-ui/ui/widget.js\")\n\t\t], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.resizable\", $.ui.mouse, {\n\tversion: \"1.12.1\",\n\twidgetEventPrefix: \"resize\",\n\toptions: {\n\t\talsoResize: false,\n\t\tanimate: false,\n\t\tanimateDuration: \"slow\",\n\t\tanimateEasing: \"swing\",\n\t\taspectRatio: false,\n\t\tautoHide: false,\n\t\tclasses: {\n\t\t\t\"ui-resizable-se\": \"ui-icon ui-icon-gripsmall-diagonal-se\"\n\t\t},\n\t\tcontainment: false,\n\t\tghost: false,\n\t\tgrid: false,\n\t\thandles: \"e,s,se\",\n\t\thelper: false,\n\t\tmaxHeight: null,\n\t\tmaxWidth: null,\n\t\tminHeight: 10,\n\t\tminWidth: 10,\n\n\t\t// See #7960\n\t\tzIndex: 90,\n\n\t\t// Callbacks\n\t\tresize: null,\n\t\tstart: null,\n\t\tstop: null\n\t},\n\n\t_num: function( value ) {\n\t\treturn parseFloat( value ) || 0;\n\t},\n\n\t_isNumber: function( value ) {\n\t\treturn !isNaN( parseFloat( value ) );\n\t},\n\n\t_hasScroll: function( el, a ) {\n\n\t\tif ( $( el ).css( \"overflow\" ) === \"hidden\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar scroll = ( a && a === \"left\" ) ? \"scrollLeft\" : \"scrollTop\",\n\t\t\thas = false;\n\n\t\tif ( el[ scroll ] > 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: determine which cases actually cause this to happen\n\t\t// if the element doesn't have the scroll set, see if it's possible to\n\t\t// set the scroll\n\t\tel[ scroll ] = 1;\n\t\thas = ( el[ scroll ] > 0 );\n\t\tel[ scroll ] = 0;\n\t\treturn has;\n\t},\n\n\t_create: function() {\n\n\t\tvar margins,\n\t\t\to = this.options,\n\t\t\tthat = this;\n\t\tthis._addClass( \"ui-resizable\" );\n\n\t\t$.extend( this, {\n\t\t\t_aspectRatio: !!( o.aspectRatio ),\n\t\t\taspectRatio: o.aspectRatio,\n\t\t\toriginalElement: this.element,\n\t\t\t_proportionallyResizeElements: [],\n\t\t\t_helper: o.helper || o.ghost || o.animate ? o.helper || \"ui-resizable-helper\" : null\n\t\t} );\n\n\t\t// Wrap the element if it cannot hold child nodes\n\t\tif ( this.element[ 0 ].nodeName.match( /^(canvas|textarea|input|select|button|img)$/i ) ) {\n\n\t\t\tthis.element.wrap(\n\t\t\t\t$( \"<div class='ui-wrapper' style='overflow: hidden;'></div>\" ).css( {\n\t\t\t\t\tposition: this.element.css( \"position\" ),\n\t\t\t\t\twidth: this.element.outerWidth(),\n\t\t\t\t\theight: this.element.outerHeight(),\n\t\t\t\t\ttop: this.element.css( \"top\" ),\n\t\t\t\t\tleft: this.element.css( \"left\" )\n\t\t\t\t} )\n\t\t\t);\n\n\t\t\tthis.element = this.element.parent().data(\n\t\t\t\t\"ui-resizable\", this.element.resizable( \"instance\" )\n\t\t\t);\n\n\t\t\tthis.elementIsWrapper = true;\n\n\t\t\tmargins = {\n\t\t\t\tmarginTop: this.originalElement.css( \"marginTop\" ),\n\t\t\t\tmarginRight: this.originalElement.css( \"marginRight\" ),\n\t\t\t\tmarginBottom: this.originalElement.css( \"marginBottom\" ),\n\t\t\t\tmarginLeft: this.originalElement.css( \"marginLeft\" )\n\t\t\t};\n\n\t\t\tthis.element.css( margins );\n\t\t\tthis.originalElement.css( \"margin\", 0 );\n\n\t\t\t// support: Safari\n\t\t\t// Prevent Safari textarea resize\n\t\t\tthis.originalResizeStyle = this.originalElement.css( \"resize\" );\n\t\t\tthis.originalElement.css( \"resize\", \"none\" );\n\n\t\t\tthis._proportionallyResizeElements.push( this.originalElement.css( {\n\t\t\t\tposition: \"static\",\n\t\t\t\tzoom: 1,\n\t\t\t\tdisplay: \"block\"\n\t\t\t} ) );\n\n\t\t\t// Support: IE9\n\t\t\t// avoid IE jump (hard set the margin)\n\t\t\tthis.originalElement.css( margins );\n\n\t\t\tthis._proportionallyResize();\n\t\t}\n\n\t\tthis._setupHandles();\n\n\t\tif ( o.autoHide ) {\n\t\t\t$( this.element )\n\t\t\t\t.on( \"mouseenter\", function() {\n\t\t\t\t\tif ( o.disabled ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthat._removeClass( \"ui-resizable-autohide\" );\n\t\t\t\t\tthat._handles.show();\n\t\t\t\t} )\n\t\t\t\t.on( \"mouseleave\", function() {\n\t\t\t\t\tif ( o.disabled ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( !that.resizing ) {\n\t\t\t\t\t\tthat._addClass( \"ui-resizable-autohide\" );\n\t\t\t\t\t\tthat._handles.hide();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\n\t\tthis._mouseInit();\n\t},\n\n\t_destroy: function() {\n\n\t\tthis._mouseDestroy();\n\n\t\tvar wrapper,\n\t\t\t_destroy = function( exp ) {\n\t\t\t\t$( exp )\n\t\t\t\t\t.removeData( \"resizable\" )\n\t\t\t\t\t.removeData( \"ui-resizable\" )\n\t\t\t\t\t.off( \".resizable\" )\n\t\t\t\t\t.find( \".ui-resizable-handle\" )\n\t\t\t\t\t\t.remove();\n\t\t\t};\n\n\t\t// TODO: Unwrap at same DOM position\n\t\tif ( this.elementIsWrapper ) {\n\t\t\t_destroy( this.element );\n\t\t\twrapper = this.element;\n\t\t\tthis.originalElement.css( {\n\t\t\t\tposition: wrapper.css( \"position\" ),\n\t\t\t\twidth: wrapper.outerWidth(),\n\t\t\t\theight: wrapper.outerHeight(),\n\t\t\t\ttop: wrapper.css( \"top\" ),\n\t\t\t\tleft: wrapper.css( \"left\" )\n\t\t\t} ).insertAfter( wrapper );\n\t\t\twrapper.remove();\n\t\t}\n\n\t\tthis.originalElement.css( \"resize\", this.originalResizeStyle );\n\t\t_destroy( this.originalElement );\n\n\t\treturn this;\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tthis._super( key, value );\n\n\t\tswitch ( key ) {\n\t\tcase \"handles\":\n\t\t\tthis._removeHandles();\n\t\t\tthis._setupHandles();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t},\n\n\t_setupHandles: function() {\n\t\tvar o = this.options, handle, i, n, hname, axis, that = this;\n\t\tthis.handles = o.handles ||\n\t\t\t( !$( \".ui-resizable-handle\", this.element ).length ?\n\t\t\t\t\"e,s,se\" : {\n\t\t\t\t\tn: \".ui-resizable-n\",\n\t\t\t\t\te: \".ui-resizable-e\",\n\t\t\t\t\ts: \".ui-resizable-s\",\n\t\t\t\t\tw: \".ui-resizable-w\",\n\t\t\t\t\tse: \".ui-resizable-se\",\n\t\t\t\t\tsw: \".ui-resizable-sw\",\n\t\t\t\t\tne: \".ui-resizable-ne\",\n\t\t\t\t\tnw: \".ui-resizable-nw\"\n\t\t\t\t} );\n\n\t\tthis._handles = $();\n\t\tif ( this.handles.constructor === String ) {\n\n\t\t\tif ( this.handles === \"all\" ) {\n\t\t\t\tthis.handles = \"n,e,s,w,se,sw,ne,nw\";\n\t\t\t}\n\n\t\t\tn = this.handles.split( \",\" );\n\t\t\tthis.handles = {};\n\n\t\t\tfor ( i = 0; i < n.length; i++ ) {\n\n\t\t\t\thandle = $.trim( n[ i ] );\n\t\t\t\thname = \"ui-resizable-\" + handle;\n\t\t\t\taxis = $( \"<div>\" );\n\t\t\t\tthis._addClass( axis, \"ui-resizable-handle \" + hname );\n\n\t\t\t\taxis.css( { zIndex: o.zIndex } );\n\n\t\t\t\tthis.handles[ handle ] = \".ui-resizable-\" + handle;\n\t\t\t\tthis.element.append( axis );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._renderAxis = function( target ) {\n\n\t\t\tvar i, axis, padPos, padWrapper;\n\n\t\t\ttarget = target || this.element;\n\n\t\t\tfor ( i in this.handles ) {\n\n\t\t\t\tif ( this.handles[ i ].constructor === String ) {\n\t\t\t\t\tthis.handles[ i ] = this.element.children( this.handles[ i ] ).first().show();\n\t\t\t\t} else if ( this.handles[ i ].jquery || this.handles[ i ].nodeType ) {\n\t\t\t\t\tthis.handles[ i ] = $( this.handles[ i ] );\n\t\t\t\t\tthis._on( this.handles[ i ], { \"mousedown\": that._mouseDown } );\n\t\t\t\t}\n\n\t\t\t\tif ( this.elementIsWrapper &&\n\t\t\t\t\t\tthis.originalElement[ 0 ]\n\t\t\t\t\t\t\t.nodeName\n\t\t\t\t\t\t\t.match( /^(textarea|input|select|button)$/i ) ) {\n\t\t\t\t\taxis = $( this.handles[ i ], this.element );\n\n\t\t\t\t\tpadWrapper = /sw|ne|nw|se|n|s/.test( i ) ?\n\t\t\t\t\t\taxis.outerHeight() :\n\t\t\t\t\t\taxis.outerWidth();\n\n\t\t\t\t\tpadPos = [ \"padding\",\n\t\t\t\t\t\t/ne|nw|n/.test( i ) ? \"Top\" :\n\t\t\t\t\t\t/se|sw|s/.test( i ) ? \"Bottom\" :\n\t\t\t\t\t\t/^e$/.test( i ) ? \"Right\" : \"Left\" ].join( \"\" );\n\n\t\t\t\t\ttarget.css( padPos, padWrapper );\n\n\t\t\t\t\tthis._proportionallyResize();\n\t\t\t\t}\n\n\t\t\t\tthis._handles = this._handles.add( this.handles[ i ] );\n\t\t\t}\n\t\t};\n\n\t\t// TODO: make renderAxis a prototype function\n\t\tthis._renderAxis( this.element );\n\n\t\tthis._handles = this._handles.add( this.element.find( \".ui-resizable-handle\" ) );\n\t\tthis._handles.disableSelection();\n\n\t\tthis._handles.on( \"mouseover\", function() {\n\t\t\tif ( !that.resizing ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\taxis = this.className.match( /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i );\n\t\t\t\t}\n\t\t\t\tthat.axis = axis && axis[ 1 ] ? axis[ 1 ] : \"se\";\n\t\t\t}\n\t\t} );\n\n\t\tif ( o.autoHide ) {\n\t\t\tthis._handles.hide();\n\t\t\tthis._addClass( \"ui-resizable-autohide\" );\n\t\t}\n\t},\n\n\t_removeHandles: function() {\n\t\tthis._handles.remove();\n\t},\n\n\t_mouseCapture: function( event ) {\n\t\tvar i, handle,\n\t\t\tcapture = false;\n\n\t\tfor ( i in this.handles ) {\n\t\t\thandle = $( this.handles[ i ] )[ 0 ];\n\t\t\tif ( handle === event.target || $.contains( handle, event.target ) ) {\n\t\t\t\tcapture = true;\n\t\t\t}\n\t\t}\n\n\t\treturn !this.options.disabled && capture;\n\t},\n\n\t_mouseStart: function( event ) {\n\n\t\tvar curleft, curtop, cursor,\n\t\t\to = this.options,\n\t\t\tel = this.element;\n\n\t\tthis.resizing = true;\n\n\t\tthis._renderProxy();\n\n\t\tcurleft = this._num( this.helper.css( \"left\" ) );\n\t\tcurtop = this._num( this.helper.css( \"top\" ) );\n\n\t\tif ( o.containment ) {\n\t\t\tcurleft += $( o.containment ).scrollLeft() || 0;\n\t\t\tcurtop += $( o.containment ).scrollTop() || 0;\n\t\t}\n\n\t\tthis.offset = this.helper.offset();\n\t\tthis.position = { left: curleft, top: curtop };\n\n\t\tthis.size = this._helper ? {\n\t\t\t\twidth: this.helper.width(),\n\t\t\t\theight: this.helper.height()\n\t\t\t} : {\n\t\t\t\twidth: el.width(),\n\t\t\t\theight: el.height()\n\t\t\t};\n\n\t\tthis.originalSize = this._helper ? {\n\t\t\t\twidth: el.outerWidth(),\n\t\t\t\theight: el.outerHeight()\n\t\t\t} : {\n\t\t\t\twidth: el.width(),\n\t\t\t\theight: el.height()\n\t\t\t};\n\n\t\tthis.sizeDiff = {\n\t\t\twidth: el.outerWidth() - el.width(),\n\t\t\theight: el.outerHeight() - el.height()\n\t\t};\n\n\t\tthis.originalPosition = { left: curleft, top: curtop };\n\t\tthis.originalMousePosition = { left: event.pageX, top: event.pageY };\n\n\t\tthis.aspectRatio = ( typeof o.aspectRatio === \"number\" ) ?\n\t\t\to.aspectRatio :\n\t\t\t( ( this.originalSize.width / this.originalSize.height ) || 1 );\n\n\t\tcursor = $( \".ui-resizable-\" + this.axis ).css( \"cursor\" );\n\t\t$( \"body\" ).css( \"cursor\", cursor === \"auto\" ? this.axis + \"-resize\" : cursor );\n\n\t\tthis._addClass( \"ui-resizable-resizing\" );\n\t\tthis._propagate( \"start\", event );\n\t\treturn true;\n\t},\n\n\t_mouseDrag: function( event ) {\n\n\t\tvar data, props,\n\t\t\tsmp = this.originalMousePosition,\n\t\t\ta = this.axis,\n\t\t\tdx = ( event.pageX - smp.left ) || 0,\n\t\t\tdy = ( event.pageY - smp.top ) || 0,\n\t\t\ttrigger = this._change[ a ];\n\n\t\tthis._updatePrevProperties();\n\n\t\tif ( !trigger ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdata = trigger.apply( this, [ event, dx, dy ] );\n\n\t\tthis._updateVirtualBoundaries( event.shiftKey );\n\t\tif ( this._aspectRatio || event.shiftKey ) {\n\t\t\tdata = this._updateRatio( data, event );\n\t\t}\n\n\t\tdata = this._respectSize( data, event );\n\n\t\tthis._updateCache( data );\n\n\t\tthis._propagate( \"resize\", event );\n\n\t\tprops = this._applyChanges();\n\n\t\tif ( !this._helper && this._proportionallyResizeElements.length ) {\n\t\t\tthis._proportionallyResize();\n\t\t}\n\n\t\tif ( !$.isEmptyObject( props ) ) {\n\t\t\tthis._updatePrevProperties();\n\t\t\tthis._trigger( \"resize\", event, this.ui() );\n\t\t\tthis._applyChanges();\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseStop: function( event ) {\n\n\t\tthis.resizing = false;\n\t\tvar pr, ista, soffseth, soffsetw, s, left, top,\n\t\t\to = this.options, that = this;\n\n\t\tif ( this._helper ) {\n\n\t\t\tpr = this._proportionallyResizeElements;\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName );\n\t\t\tsoffseth = ista && this._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height;\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width;\n\n\t\t\ts = {\n\t\t\t\twidth: ( that.helper.width()  - soffsetw ),\n\t\t\t\theight: ( that.helper.height() - soffseth )\n\t\t\t};\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null;\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\n\n\t\t\tif ( !o.animate ) {\n\t\t\t\tthis.element.css( $.extend( s, { top: top, left: left } ) );\n\t\t\t}\n\n\t\t\tthat.helper.height( that.size.height );\n\t\t\tthat.helper.width( that.size.width );\n\n\t\t\tif ( this._helper && !o.animate ) {\n\t\t\t\tthis._proportionallyResize();\n\t\t\t}\n\t\t}\n\n\t\t$( \"body\" ).css( \"cursor\", \"auto\" );\n\n\t\tthis._removeClass( \"ui-resizable-resizing\" );\n\n\t\tthis._propagate( \"stop\", event );\n\n\t\tif ( this._helper ) {\n\t\t\tthis.helper.remove();\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\t_updatePrevProperties: function() {\n\t\tthis.prevPosition = {\n\t\t\ttop: this.position.top,\n\t\t\tleft: this.position.left\n\t\t};\n\t\tthis.prevSize = {\n\t\t\twidth: this.size.width,\n\t\t\theight: this.size.height\n\t\t};\n\t},\n\n\t_applyChanges: function() {\n\t\tvar props = {};\n\n\t\tif ( this.position.top !== this.prevPosition.top ) {\n\t\t\tprops.top = this.position.top + \"px\";\n\t\t}\n\t\tif ( this.position.left !== this.prevPosition.left ) {\n\t\t\tprops.left = this.position.left + \"px\";\n\t\t}\n\t\tif ( this.size.width !== this.prevSize.width ) {\n\t\t\tprops.width = this.size.width + \"px\";\n\t\t}\n\t\tif ( this.size.height !== this.prevSize.height ) {\n\t\t\tprops.height = this.size.height + \"px\";\n\t\t}\n\n\t\tthis.helper.css( props );\n\n\t\treturn props;\n\t},\n\n\t_updateVirtualBoundaries: function( forceAspectRatio ) {\n\t\tvar pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\n\t\t\to = this.options;\n\n\t\tb = {\n\t\t\tminWidth: this._isNumber( o.minWidth ) ? o.minWidth : 0,\n\t\t\tmaxWidth: this._isNumber( o.maxWidth ) ? o.maxWidth : Infinity,\n\t\t\tminHeight: this._isNumber( o.minHeight ) ? o.minHeight : 0,\n\t\t\tmaxHeight: this._isNumber( o.maxHeight ) ? o.maxHeight : Infinity\n\t\t};\n\n\t\tif ( this._aspectRatio || forceAspectRatio ) {\n\t\t\tpMinWidth = b.minHeight * this.aspectRatio;\n\t\t\tpMinHeight = b.minWidth / this.aspectRatio;\n\t\t\tpMaxWidth = b.maxHeight * this.aspectRatio;\n\t\t\tpMaxHeight = b.maxWidth / this.aspectRatio;\n\n\t\t\tif ( pMinWidth > b.minWidth ) {\n\t\t\t\tb.minWidth = pMinWidth;\n\t\t\t}\n\t\t\tif ( pMinHeight > b.minHeight ) {\n\t\t\t\tb.minHeight = pMinHeight;\n\t\t\t}\n\t\t\tif ( pMaxWidth < b.maxWidth ) {\n\t\t\t\tb.maxWidth = pMaxWidth;\n\t\t\t}\n\t\t\tif ( pMaxHeight < b.maxHeight ) {\n\t\t\t\tb.maxHeight = pMaxHeight;\n\t\t\t}\n\t\t}\n\t\tthis._vBoundaries = b;\n\t},\n\n\t_updateCache: function( data ) {\n\t\tthis.offset = this.helper.offset();\n\t\tif ( this._isNumber( data.left ) ) {\n\t\t\tthis.position.left = data.left;\n\t\t}\n\t\tif ( this._isNumber( data.top ) ) {\n\t\t\tthis.position.top = data.top;\n\t\t}\n\t\tif ( this._isNumber( data.height ) ) {\n\t\t\tthis.size.height = data.height;\n\t\t}\n\t\tif ( this._isNumber( data.width ) ) {\n\t\t\tthis.size.width = data.width;\n\t\t}\n\t},\n\n\t_updateRatio: function( data ) {\n\n\t\tvar cpos = this.position,\n\t\t\tcsize = this.size,\n\t\t\ta = this.axis;\n\n\t\tif ( this._isNumber( data.height ) ) {\n\t\t\tdata.width = ( data.height * this.aspectRatio );\n\t\t} else if ( this._isNumber( data.width ) ) {\n\t\t\tdata.height = ( data.width / this.aspectRatio );\n\t\t}\n\n\t\tif ( a === \"sw\" ) {\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\n\t\t\tdata.top = null;\n\t\t}\n\t\tif ( a === \"nw\" ) {\n\t\t\tdata.top = cpos.top + ( csize.height - data.height );\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t_respectSize: function( data ) {\n\n\t\tvar o = this._vBoundaries,\n\t\t\ta = this.axis,\n\t\t\tismaxw = this._isNumber( data.width ) && o.maxWidth && ( o.maxWidth < data.width ),\n\t\t\tismaxh = this._isNumber( data.height ) && o.maxHeight && ( o.maxHeight < data.height ),\n\t\t\tisminw = this._isNumber( data.width ) && o.minWidth && ( o.minWidth > data.width ),\n\t\t\tisminh = this._isNumber( data.height ) && o.minHeight && ( o.minHeight > data.height ),\n\t\t\tdw = this.originalPosition.left + this.originalSize.width,\n\t\t\tdh = this.originalPosition.top + this.originalSize.height,\n\t\t\tcw = /sw|nw|w/.test( a ), ch = /nw|ne|n/.test( a );\n\t\tif ( isminw ) {\n\t\t\tdata.width = o.minWidth;\n\t\t}\n\t\tif ( isminh ) {\n\t\t\tdata.height = o.minHeight;\n\t\t}\n\t\tif ( ismaxw ) {\n\t\t\tdata.width = o.maxWidth;\n\t\t}\n\t\tif ( ismaxh ) {\n\t\t\tdata.height = o.maxHeight;\n\t\t}\n\n\t\tif ( isminw && cw ) {\n\t\t\tdata.left = dw - o.minWidth;\n\t\t}\n\t\tif ( ismaxw && cw ) {\n\t\t\tdata.left = dw - o.maxWidth;\n\t\t}\n\t\tif ( isminh && ch ) {\n\t\t\tdata.top = dh - o.minHeight;\n\t\t}\n\t\tif ( ismaxh && ch ) {\n\t\t\tdata.top = dh - o.maxHeight;\n\t\t}\n\n\t\t// Fixing jump error on top/left - bug #2330\n\t\tif ( !data.width && !data.height && !data.left && data.top ) {\n\t\t\tdata.top = null;\n\t\t} else if ( !data.width && !data.height && !data.top && data.left ) {\n\t\t\tdata.left = null;\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t_getPaddingPlusBorderDimensions: function( element ) {\n\t\tvar i = 0,\n\t\t\twidths = [],\n\t\t\tborders = [\n\t\t\t\telement.css( \"borderTopWidth\" ),\n\t\t\t\telement.css( \"borderRightWidth\" ),\n\t\t\t\telement.css( \"borderBottomWidth\" ),\n\t\t\t\telement.css( \"borderLeftWidth\" )\n\t\t\t],\n\t\t\tpaddings = [\n\t\t\t\telement.css( \"paddingTop\" ),\n\t\t\t\telement.css( \"paddingRight\" ),\n\t\t\t\telement.css( \"paddingBottom\" ),\n\t\t\t\telement.css( \"paddingLeft\" )\n\t\t\t];\n\n\t\tfor ( ; i < 4; i++ ) {\n\t\t\twidths[ i ] = ( parseFloat( borders[ i ] ) || 0 );\n\t\t\twidths[ i ] += ( parseFloat( paddings[ i ] ) || 0 );\n\t\t}\n\n\t\treturn {\n\t\t\theight: widths[ 0 ] + widths[ 2 ],\n\t\t\twidth: widths[ 1 ] + widths[ 3 ]\n\t\t};\n\t},\n\n\t_proportionallyResize: function() {\n\n\t\tif ( !this._proportionallyResizeElements.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar prel,\n\t\t\ti = 0,\n\t\t\telement = this.helper || this.element;\n\n\t\tfor ( ; i < this._proportionallyResizeElements.length; i++ ) {\n\n\t\t\tprel = this._proportionallyResizeElements[ i ];\n\n\t\t\t// TODO: Seems like a bug to cache this.outerDimensions\n\t\t\t// considering that we are in a loop.\n\t\t\tif ( !this.outerDimensions ) {\n\t\t\t\tthis.outerDimensions = this._getPaddingPlusBorderDimensions( prel );\n\t\t\t}\n\n\t\t\tprel.css( {\n\t\t\t\theight: ( element.height() - this.outerDimensions.height ) || 0,\n\t\t\t\twidth: ( element.width() - this.outerDimensions.width ) || 0\n\t\t\t} );\n\n\t\t}\n\n\t},\n\n\t_renderProxy: function() {\n\n\t\tvar el = this.element, o = this.options;\n\t\tthis.elementOffset = el.offset();\n\n\t\tif ( this._helper ) {\n\n\t\t\tthis.helper = this.helper || $( \"<div style='overflow:hidden;'></div>\" );\n\n\t\t\tthis._addClass( this.helper, this._helper );\n\t\t\tthis.helper.css( {\n\t\t\t\twidth: this.element.outerWidth(),\n\t\t\t\theight: this.element.outerHeight(),\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: this.elementOffset.left + \"px\",\n\t\t\t\ttop: this.elementOffset.top + \"px\",\n\t\t\t\tzIndex: ++o.zIndex //TODO: Don't modify option\n\t\t\t} );\n\n\t\t\tthis.helper\n\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t.disableSelection();\n\n\t\t} else {\n\t\t\tthis.helper = this.element;\n\t\t}\n\n\t},\n\n\t_change: {\n\t\te: function( event, dx ) {\n\t\t\treturn { width: this.originalSize.width + dx };\n\t\t},\n\t\tw: function( event, dx ) {\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\n\t\t\treturn { left: sp.left + dx, width: cs.width - dx };\n\t\t},\n\t\tn: function( event, dx, dy ) {\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\n\t\t\treturn { top: sp.top + dy, height: cs.height - dy };\n\t\t},\n\t\ts: function( event, dx, dy ) {\n\t\t\treturn { height: this.originalSize.height + dy };\n\t\t},\n\t\tse: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tsw: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tne: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tnw: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\n\t\t}\n\t},\n\n\t_propagate: function( n, event ) {\n\t\t$.ui.plugin.call( this, n, [ event, this.ui() ] );\n\t\t( n !== \"resize\" && this._trigger( n, event, this.ui() ) );\n\t},\n\n\tplugins: {},\n\n\tui: function() {\n\t\treturn {\n\t\t\toriginalElement: this.originalElement,\n\t\t\telement: this.element,\n\t\t\thelper: this.helper,\n\t\t\tposition: this.position,\n\t\t\tsize: this.size,\n\t\t\toriginalSize: this.originalSize,\n\t\t\toriginalPosition: this.originalPosition\n\t\t};\n\t}\n\n} );\n\n/*\n * Resizable Extensions\n */\n\n$.ui.plugin.add( \"resizable\", \"animate\", {\n\n\tstop: function( event ) {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tpr = that._proportionallyResizeElements,\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName ),\n\t\t\tsoffseth = ista && that._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height,\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width,\n\t\t\tstyle = {\n\t\t\t\twidth: ( that.size.width - soffsetw ),\n\t\t\t\theight: ( that.size.height - soffseth )\n\t\t\t},\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null,\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\n\n\t\tthat.element.animate(\n\t\t\t$.extend( style, top && left ? { top: top, left: left } : {} ), {\n\t\t\t\tduration: o.animateDuration,\n\t\t\t\teasing: o.animateEasing,\n\t\t\t\tstep: function() {\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\twidth: parseFloat( that.element.css( \"width\" ) ),\n\t\t\t\t\t\theight: parseFloat( that.element.css( \"height\" ) ),\n\t\t\t\t\t\ttop: parseFloat( that.element.css( \"top\" ) ),\n\t\t\t\t\t\tleft: parseFloat( that.element.css( \"left\" ) )\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( pr && pr.length ) {\n\t\t\t\t\t\t$( pr[ 0 ] ).css( { width: data.width, height: data.height } );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Propagating resize, and updating values for each animation step\n\t\t\t\t\tthat._updateCache( data );\n\t\t\t\t\tthat._propagate( \"resize\", event );\n\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n} );\n\n$.ui.plugin.add( \"resizable\", \"containment\", {\n\n\tstart: function() {\n\t\tvar element, p, co, ch, cw, width, height,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tel = that.element,\n\t\t\toc = o.containment,\n\t\t\tce = ( oc instanceof $ ) ?\n\t\t\t\toc.get( 0 ) :\n\t\t\t\t( /parent/.test( oc ) ) ? el.parent().get( 0 ) : oc;\n\n\t\tif ( !ce ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthat.containerElement = $( ce );\n\n\t\tif ( /document/.test( oc ) || oc === document ) {\n\t\t\tthat.containerOffset = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t};\n\t\t\tthat.containerPosition = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t};\n\n\t\t\tthat.parentData = {\n\t\t\t\telement: $( document ),\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: $( document ).width(),\n\t\t\t\theight: $( document ).height() || document.body.parentNode.scrollHeight\n\t\t\t};\n\t\t} else {\n\t\t\telement = $( ce );\n\t\t\tp = [];\n\t\t\t$( [ \"Top\", \"Right\", \"Left\", \"Bottom\" ] ).each( function( i, name ) {\n\t\t\t\tp[ i ] = that._num( element.css( \"padding\" + name ) );\n\t\t\t} );\n\n\t\t\tthat.containerOffset = element.offset();\n\t\t\tthat.containerPosition = element.position();\n\t\t\tthat.containerSize = {\n\t\t\t\theight: ( element.innerHeight() - p[ 3 ] ),\n\t\t\t\twidth: ( element.innerWidth() - p[ 1 ] )\n\t\t\t};\n\n\t\t\tco = that.containerOffset;\n\t\t\tch = that.containerSize.height;\n\t\t\tcw = that.containerSize.width;\n\t\t\twidth = ( that._hasScroll ( ce, \"left\" ) ? ce.scrollWidth : cw );\n\t\t\theight = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;\n\n\t\t\tthat.parentData = {\n\t\t\t\telement: ce,\n\t\t\t\tleft: co.left,\n\t\t\t\ttop: co.top,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t}\n\t},\n\n\tresize: function( event ) {\n\t\tvar woset, hoset, isParent, isOffsetRelative,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tco = that.containerOffset,\n\t\t\tcp = that.position,\n\t\t\tpRatio = that._aspectRatio || event.shiftKey,\n\t\t\tcop = {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t},\n\t\t\tce = that.containerElement,\n\t\t\tcontinueResize = true;\n\n\t\tif ( ce[ 0 ] !== document && ( /static/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\tcop = co;\n\t\t}\n\n\t\tif ( cp.left < ( that._helper ? co.left : 0 ) ) {\n\t\t\tthat.size.width = that.size.width +\n\t\t\t\t( that._helper ?\n\t\t\t\t\t( that.position.left - co.left ) :\n\t\t\t\t\t( that.position.left - cop.left ) );\n\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t\tthat.position.left = o.helper ? co.left : 0;\n\t\t}\n\n\t\tif ( cp.top < ( that._helper ? co.top : 0 ) ) {\n\t\t\tthat.size.height = that.size.height +\n\t\t\t\t( that._helper ?\n\t\t\t\t\t( that.position.top - co.top ) :\n\t\t\t\t\tthat.position.top );\n\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t\tthat.position.top = that._helper ? co.top : 0;\n\t\t}\n\n\t\tisParent = that.containerElement.get( 0 ) === that.element.parent().get( 0 );\n\t\tisOffsetRelative = /relative|absolute/.test( that.containerElement.css( \"position\" ) );\n\n\t\tif ( isParent && isOffsetRelative ) {\n\t\t\tthat.offset.left = that.parentData.left + that.position.left;\n\t\t\tthat.offset.top = that.parentData.top + that.position.top;\n\t\t} else {\n\t\t\tthat.offset.left = that.element.offset().left;\n\t\t\tthat.offset.top = that.element.offset().top;\n\t\t}\n\n\t\twoset = Math.abs( that.sizeDiff.width +\n\t\t\t( that._helper ?\n\t\t\t\tthat.offset.left - cop.left :\n\t\t\t\t( that.offset.left - co.left ) ) );\n\n\t\thoset = Math.abs( that.sizeDiff.height +\n\t\t\t( that._helper ?\n\t\t\t\tthat.offset.top - cop.top :\n\t\t\t\t( that.offset.top - co.top ) ) );\n\n\t\tif ( woset + that.size.width >= that.parentData.width ) {\n\t\t\tthat.size.width = that.parentData.width - woset;\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t}\n\n\t\tif ( hoset + that.size.height >= that.parentData.height ) {\n\t\t\tthat.size.height = that.parentData.height - hoset;\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t}\n\n\t\tif ( !continueResize ) {\n\t\t\tthat.position.left = that.prevPosition.left;\n\t\t\tthat.position.top = that.prevPosition.top;\n\t\t\tthat.size.width = that.prevSize.width;\n\t\t\tthat.size.height = that.prevSize.height;\n\t\t}\n\t},\n\n\tstop: function() {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tco = that.containerOffset,\n\t\t\tcop = that.containerPosition,\n\t\t\tce = that.containerElement,\n\t\t\thelper = $( that.helper ),\n\t\t\tho = helper.offset(),\n\t\t\tw = helper.outerWidth() - that.sizeDiff.width,\n\t\t\th = helper.outerHeight() - that.sizeDiff.height;\n\n\t\tif ( that._helper && !o.animate && ( /relative/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\t$( this ).css( {\n\t\t\t\tleft: ho.left - cop.left - co.left,\n\t\t\t\twidth: w,\n\t\t\t\theight: h\n\t\t\t} );\n\t\t}\n\n\t\tif ( that._helper && !o.animate && ( /static/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\t$( this ).css( {\n\t\t\t\tleft: ho.left - cop.left - co.left,\n\t\t\t\twidth: w,\n\t\t\t\theight: h\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"resizable\", \"alsoResize\", {\n\n\tstart: function() {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options;\n\n\t\t$( o.alsoResize ).each( function() {\n\t\t\tvar el = $( this );\n\t\t\tel.data( \"ui-resizable-alsoresize\", {\n\t\t\t\twidth: parseFloat( el.width() ), height: parseFloat( el.height() ),\n\t\t\t\tleft: parseFloat( el.css( \"left\" ) ), top: parseFloat( el.css( \"top\" ) )\n\t\t\t} );\n\t\t} );\n\t},\n\n\tresize: function( event, ui ) {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tos = that.originalSize,\n\t\t\top = that.originalPosition,\n\t\t\tdelta = {\n\t\t\t\theight: ( that.size.height - os.height ) || 0,\n\t\t\t\twidth: ( that.size.width - os.width ) || 0,\n\t\t\t\ttop: ( that.position.top - op.top ) || 0,\n\t\t\t\tleft: ( that.position.left - op.left ) || 0\n\t\t\t};\n\n\t\t\t$( o.alsoResize ).each( function() {\n\t\t\t\tvar el = $( this ), start = $( this ).data( \"ui-resizable-alsoresize\" ), style = {},\n\t\t\t\t\tcss = el.parents( ui.originalElement[ 0 ] ).length ?\n\t\t\t\t\t\t\t[ \"width\", \"height\" ] :\n\t\t\t\t\t\t\t[ \"width\", \"height\", \"top\", \"left\" ];\n\n\t\t\t\t$.each( css, function( i, prop ) {\n\t\t\t\t\tvar sum = ( start[ prop ] || 0 ) + ( delta[ prop ] || 0 );\n\t\t\t\t\tif ( sum && sum >= 0 ) {\n\t\t\t\t\t\tstyle[ prop ] = sum || null;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tel.css( style );\n\t\t\t} );\n\t},\n\n\tstop: function() {\n\t\t$( this ).removeData( \"ui-resizable-alsoresize\" );\n\t}\n} );\n\n$.ui.plugin.add( \"resizable\", \"ghost\", {\n\n\tstart: function() {\n\n\t\tvar that = $( this ).resizable( \"instance\" ), cs = that.size;\n\n\t\tthat.ghost = that.originalElement.clone();\n\t\tthat.ghost.css( {\n\t\t\topacity: 0.25,\n\t\t\tdisplay: \"block\",\n\t\t\tposition: \"relative\",\n\t\t\theight: cs.height,\n\t\t\twidth: cs.width,\n\t\t\tmargin: 0,\n\t\t\tleft: 0,\n\t\t\ttop: 0\n\t\t} );\n\n\t\tthat._addClass( that.ghost, \"ui-resizable-ghost\" );\n\n\t\t// DEPRECATED\n\t\t// TODO: remove after 1.12\n\t\tif ( $.uiBackCompat !== false && typeof that.options.ghost === \"string\" ) {\n\n\t\t\t// Ghost option\n\t\t\tthat.ghost.addClass( this.options.ghost );\n\t\t}\n\n\t\tthat.ghost.appendTo( that.helper );\n\n\t},\n\n\tresize: function() {\n\t\tvar that = $( this ).resizable( \"instance\" );\n\t\tif ( that.ghost ) {\n\t\t\tthat.ghost.css( {\n\t\t\t\tposition: \"relative\",\n\t\t\t\theight: that.size.height,\n\t\t\t\twidth: that.size.width\n\t\t\t} );\n\t\t}\n\t},\n\n\tstop: function() {\n\t\tvar that = $( this ).resizable( \"instance\" );\n\t\tif ( that.ghost && that.helper ) {\n\t\t\tthat.helper.get( 0 ).removeChild( that.ghost.get( 0 ) );\n\t\t}\n\t}\n\n} );\n\n$.ui.plugin.add( \"resizable\", \"grid\", {\n\n\tresize: function() {\n\t\tvar outerDimensions,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tcs = that.size,\n\t\t\tos = that.originalSize,\n\t\t\top = that.originalPosition,\n\t\t\ta = that.axis,\n\t\t\tgrid = typeof o.grid === \"number\" ? [ o.grid, o.grid ] : o.grid,\n\t\t\tgridX = ( grid[ 0 ] || 1 ),\n\t\t\tgridY = ( grid[ 1 ] || 1 ),\n\t\t\tox = Math.round( ( cs.width - os.width ) / gridX ) * gridX,\n\t\t\toy = Math.round( ( cs.height - os.height ) / gridY ) * gridY,\n\t\t\tnewWidth = os.width + ox,\n\t\t\tnewHeight = os.height + oy,\n\t\t\tisMaxWidth = o.maxWidth && ( o.maxWidth < newWidth ),\n\t\t\tisMaxHeight = o.maxHeight && ( o.maxHeight < newHeight ),\n\t\t\tisMinWidth = o.minWidth && ( o.minWidth > newWidth ),\n\t\t\tisMinHeight = o.minHeight && ( o.minHeight > newHeight );\n\n\t\to.grid = grid;\n\n\t\tif ( isMinWidth ) {\n\t\t\tnewWidth += gridX;\n\t\t}\n\t\tif ( isMinHeight ) {\n\t\t\tnewHeight += gridY;\n\t\t}\n\t\tif ( isMaxWidth ) {\n\t\t\tnewWidth -= gridX;\n\t\t}\n\t\tif ( isMaxHeight ) {\n\t\t\tnewHeight -= gridY;\n\t\t}\n\n\t\tif ( /^(se|s|e)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t} else if ( /^(ne)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t\tthat.position.top = op.top - oy;\n\t\t} else if ( /^(sw)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t\tthat.position.left = op.left - ox;\n\t\t} else {\n\t\t\tif ( newHeight - gridY <= 0 || newWidth - gridX <= 0 ) {\n\t\t\t\touterDimensions = that._getPaddingPlusBorderDimensions( this );\n\t\t\t}\n\n\t\t\tif ( newHeight - gridY > 0 ) {\n\t\t\t\tthat.size.height = newHeight;\n\t\t\t\tthat.position.top = op.top - oy;\n\t\t\t} else {\n\t\t\t\tnewHeight = gridY - outerDimensions.height;\n\t\t\t\tthat.size.height = newHeight;\n\t\t\t\tthat.position.top = op.top + os.height - newHeight;\n\t\t\t}\n\t\t\tif ( newWidth - gridX > 0 ) {\n\t\t\t\tthat.size.width = newWidth;\n\t\t\t\tthat.position.left = op.left - ox;\n\t\t\t} else {\n\t\t\t\tnewWidth = gridX - outerDimensions.width;\n\t\t\t\tthat.size.width = newWidth;\n\t\t\t\tthat.position.left = op.left + os.width - newWidth;\n\t\t\t}\n\t\t}\n\t}\n\n} );\n\nreturn $.ui.resizable;\n\n} ) );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jquery-ui/ui/widgets/resizable.js\n");

/***/ }),

/***/ "./node_modules/jquery.flot.animator/jquery.flot.animator.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {/* jQuery Flot Animator version 1.0.\r\n\r\nFlot Animator is a free jQuery Plugin that will add fluid animations to Flot charts.\r\n\r\nCopyright (c) 2012-2013 Chtiwi Malek\r\nhttp://www.codicode.com/art/jquery_flot_animator.aspx\r\n\r\nLicensed under Creative Commons Attribution 3.0 Unported License.\r\n*/\r\n\r\n$.extend({\r\n  plotAnimator: function (chart, data,g){\r\n    \r\n    var serie = 0;\r\n    for (var i = 0; i < data.length; i++)\r\n    {\r\n      if (data[i].animator)\r\n      {\r\n        serie = i;\r\n      }\r\n    }\r\n    \r\n    function pInit(arr){\r\n\t  var x = [];\r\n      x.push([arr[0][0], Math.max.apply(Math, arr.map(function(i) { return i[1];}))]);\r\n      x.push([arr[0][0], null]);\r\n      x.push([arr[0][0], Math.min.apply(Math, arr.map(function(i) { return i[1];}))]);\r\n      for(var i = 0; i < arr.length; i++) {\r\n          x.push([arr[i][0], null]);\r\n      }\r\n      data[serie].data = x;\r\n      return $.plot(chart, data, g);\r\n    }\r\n    \r\n    var d0 = data[serie];\r\n    var oData = d0.data;\r\n    \r\n    var plot = pInit(oData);\r\n    \r\n    var isLines = (data[serie].lines)?true:false;\r\n    var steps = (data[serie].animator && data[serie].animator.steps) || 135;\r\n    var duration = (data[serie].animator && data[serie].animator.duration) || 1000;\r\n    var start = (data[serie].animator && data[serie].animator.start) || 0;\r\n    var dir = (data[serie].animator && data[serie].animator.direction) || \"right\";\r\n    function stepData()\r\n    {\r\n      var Si = oData[0][0];\r\n      var Fi = oData[oData.length-1][0];\r\n      var Pas = (Fi-Si)/steps;\r\n      \r\n      var d2 = [];      \r\n      d2.push(oData[0]);\r\n      var nPointPos = 1;\r\n      lPoint = oData[0];\r\n      nPoint = oData[nPointPos];\r\n      for (var i = Si+Pas; i < Fi+Pas; i += Pas)\r\n      {\r\n        if (i>Fi) {i=Fi;}\r\n        $(\"#m2\").html(i);\r\n        while (i > nPoint[0])\r\n        {\r\n          lPoint = nPoint;\r\n          nPoint = oData[nPointPos++];\r\n        }\r\n        if (i == nPoint[0])\r\n        {\r\n          d2.push([i,nPoint[1]]);\r\n          lPoint = nPoint;\r\n          nPoint = oData[nPointPos++];\r\n        }\r\n        else\r\n        {\r\n          var a = ((nPoint[1]-lPoint[1]) / ((nPoint[0]-lPoint[0])));\r\n          curV = (a * i) + (lPoint[1] - (a * lPoint[0]));\r\n          d2.push([i,curV]);\r\n        }\r\n      }\r\n      return d2;\r\n    }\r\n    \r\n    var step=0;\r\n    var sData = stepData();\r\n    function plotData()\r\n    {\r\n      var d3=[];\r\n      step++;\r\n      \r\n      switch(dir)\r\n      {\r\n        case 'right':\r\n          d3 = sData.slice(0, step);\r\n          break;\r\n        case 'left':\r\n          d3 = sData.slice(-1*step);\r\n          break\r\n          case 'center':\r\n          d3 = sData.slice((sData.length/2)-(step/2),(sData.length/2)+(step/2));\r\n          break;\r\n      }\r\n      \r\n      if (!isLines)\r\n      {\r\n        inV = d3[0][0];\r\n      \tlaV = d3[d3.length-1][0];\r\n        d3=[];\r\n        for (var i = 0; i < oData.length; i++)\r\n      \t{\r\n          if (oData[i][0]>=inV && oData[i][0]<=laV)\r\n          {\r\n            d3.push(oData[i]);\r\n          }\r\n      \t}\r\n      }\r\n      \r\n      data[serie].data = (step<steps)?d3:oData;\r\n      plot.setData(data);\r\n      plot.draw();\r\n      if (step<steps)\r\n      {\r\n        setTimeout(plotData, duration/steps);\r\n      }\r\n      else\r\n      {\r\n        chart.trigger( \"animatorComplete\" );\r\n      }\r\n    }\r\n    \r\n    setTimeout(plotData,start);\r\n    return plot;\r\n  }\r\n});\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL2pxdWVyeS5mbG90LmFuaW1hdG9yL2pxdWVyeS5mbG90LmFuaW1hdG9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1FQUFtRSxjQUFjO0FBQ2pGO0FBQ0EsbUVBQW1FLGNBQWM7QUFDakYsb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixZQUFZO0FBQ3RDO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0JBQWtCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2pxdWVyeS5mbG90LmFuaW1hdG9yL2pxdWVyeS5mbG90LmFuaW1hdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogalF1ZXJ5IEZsb3QgQW5pbWF0b3IgdmVyc2lvbiAxLjAuXHJcblxyXG5GbG90IEFuaW1hdG9yIGlzIGEgZnJlZSBqUXVlcnkgUGx1Z2luIHRoYXQgd2lsbCBhZGQgZmx1aWQgYW5pbWF0aW9ucyB0byBGbG90IGNoYXJ0cy5cclxuXHJcbkNvcHlyaWdodCAoYykgMjAxMi0yMDEzIENodGl3aSBNYWxla1xyXG5odHRwOi8vd3d3LmNvZGljb2RlLmNvbS9hcnQvanF1ZXJ5X2Zsb3RfYW5pbWF0b3IuYXNweFxyXG5cclxuTGljZW5zZWQgdW5kZXIgQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiAzLjAgVW5wb3J0ZWQgTGljZW5zZS5cclxuKi9cclxuXHJcbiQuZXh0ZW5kKHtcclxuICBwbG90QW5pbWF0b3I6IGZ1bmN0aW9uIChjaGFydCwgZGF0YSxnKXtcclxuICAgIFxyXG4gICAgdmFyIHNlcmllID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKylcclxuICAgIHtcclxuICAgICAgaWYgKGRhdGFbaV0uYW5pbWF0b3IpXHJcbiAgICAgIHtcclxuICAgICAgICBzZXJpZSA9IGk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgZnVuY3Rpb24gcEluaXQoYXJyKXtcclxuXHQgIHZhciB4ID0gW107XHJcbiAgICAgIHgucHVzaChbYXJyWzBdWzBdLCBNYXRoLm1heC5hcHBseShNYXRoLCBhcnIubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIGlbMV07fSkpXSk7XHJcbiAgICAgIHgucHVzaChbYXJyWzBdWzBdLCBudWxsXSk7XHJcbiAgICAgIHgucHVzaChbYXJyWzBdWzBdLCBNYXRoLm1pbi5hcHBseShNYXRoLCBhcnIubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIGlbMV07fSkpXSk7XHJcbiAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIHgucHVzaChbYXJyW2ldWzBdLCBudWxsXSk7XHJcbiAgICAgIH1cclxuICAgICAgZGF0YVtzZXJpZV0uZGF0YSA9IHg7XHJcbiAgICAgIHJldHVybiAkLnBsb3QoY2hhcnQsIGRhdGEsIGcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB2YXIgZDAgPSBkYXRhW3NlcmllXTtcclxuICAgIHZhciBvRGF0YSA9IGQwLmRhdGE7XHJcbiAgICBcclxuICAgIHZhciBwbG90ID0gcEluaXQob0RhdGEpO1xyXG4gICAgXHJcbiAgICB2YXIgaXNMaW5lcyA9IChkYXRhW3NlcmllXS5saW5lcyk/dHJ1ZTpmYWxzZTtcclxuICAgIHZhciBzdGVwcyA9IChkYXRhW3NlcmllXS5hbmltYXRvciAmJiBkYXRhW3NlcmllXS5hbmltYXRvci5zdGVwcykgfHwgMTM1O1xyXG4gICAgdmFyIGR1cmF0aW9uID0gKGRhdGFbc2VyaWVdLmFuaW1hdG9yICYmIGRhdGFbc2VyaWVdLmFuaW1hdG9yLmR1cmF0aW9uKSB8fCAxMDAwO1xyXG4gICAgdmFyIHN0YXJ0ID0gKGRhdGFbc2VyaWVdLmFuaW1hdG9yICYmIGRhdGFbc2VyaWVdLmFuaW1hdG9yLnN0YXJ0KSB8fCAwO1xyXG4gICAgdmFyIGRpciA9IChkYXRhW3NlcmllXS5hbmltYXRvciAmJiBkYXRhW3NlcmllXS5hbmltYXRvci5kaXJlY3Rpb24pIHx8IFwicmlnaHRcIjtcclxuICAgIGZ1bmN0aW9uIHN0ZXBEYXRhKClcclxuICAgIHtcclxuICAgICAgdmFyIFNpID0gb0RhdGFbMF1bMF07XHJcbiAgICAgIHZhciBGaSA9IG9EYXRhW29EYXRhLmxlbmd0aC0xXVswXTtcclxuICAgICAgdmFyIFBhcyA9IChGaS1TaSkvc3RlcHM7XHJcbiAgICAgIFxyXG4gICAgICB2YXIgZDIgPSBbXTsgICAgICBcclxuICAgICAgZDIucHVzaChvRGF0YVswXSk7XHJcbiAgICAgIHZhciBuUG9pbnRQb3MgPSAxO1xyXG4gICAgICBsUG9pbnQgPSBvRGF0YVswXTtcclxuICAgICAgblBvaW50ID0gb0RhdGFbblBvaW50UG9zXTtcclxuICAgICAgZm9yICh2YXIgaSA9IFNpK1BhczsgaSA8IEZpK1BhczsgaSArPSBQYXMpXHJcbiAgICAgIHtcclxuICAgICAgICBpZiAoaT5GaSkge2k9Rmk7fVxyXG4gICAgICAgICQoXCIjbTJcIikuaHRtbChpKTtcclxuICAgICAgICB3aGlsZSAoaSA+IG5Qb2ludFswXSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICBsUG9pbnQgPSBuUG9pbnQ7XHJcbiAgICAgICAgICBuUG9pbnQgPSBvRGF0YVtuUG9pbnRQb3MrK107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpID09IG5Qb2ludFswXSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICBkMi5wdXNoKFtpLG5Qb2ludFsxXV0pO1xyXG4gICAgICAgICAgbFBvaW50ID0gblBvaW50O1xyXG4gICAgICAgICAgblBvaW50ID0gb0RhdGFbblBvaW50UG9zKytdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdmFyIGEgPSAoKG5Qb2ludFsxXS1sUG9pbnRbMV0pIC8gKChuUG9pbnRbMF0tbFBvaW50WzBdKSkpO1xyXG4gICAgICAgICAgY3VyViA9IChhICogaSkgKyAobFBvaW50WzFdIC0gKGEgKiBsUG9pbnRbMF0pKTtcclxuICAgICAgICAgIGQyLnB1c2goW2ksY3VyVl0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZDI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHZhciBzdGVwPTA7XHJcbiAgICB2YXIgc0RhdGEgPSBzdGVwRGF0YSgpO1xyXG4gICAgZnVuY3Rpb24gcGxvdERhdGEoKVxyXG4gICAge1xyXG4gICAgICB2YXIgZDM9W107XHJcbiAgICAgIHN0ZXArKztcclxuICAgICAgXHJcbiAgICAgIHN3aXRjaChkaXIpXHJcbiAgICAgIHtcclxuICAgICAgICBjYXNlICdyaWdodCc6XHJcbiAgICAgICAgICBkMyA9IHNEYXRhLnNsaWNlKDAsIHN0ZXApO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnbGVmdCc6XHJcbiAgICAgICAgICBkMyA9IHNEYXRhLnNsaWNlKC0xKnN0ZXApO1xyXG4gICAgICAgICAgYnJlYWtcclxuICAgICAgICAgIGNhc2UgJ2NlbnRlcic6XHJcbiAgICAgICAgICBkMyA9IHNEYXRhLnNsaWNlKChzRGF0YS5sZW5ndGgvMiktKHN0ZXAvMiksKHNEYXRhLmxlbmd0aC8yKSsoc3RlcC8yKSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKCFpc0xpbmVzKVxyXG4gICAgICB7XHJcbiAgICAgICAgaW5WID0gZDNbMF1bMF07XHJcbiAgICAgIFx0bGFWID0gZDNbZDMubGVuZ3RoLTFdWzBdO1xyXG4gICAgICAgIGQzPVtdO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb0RhdGEubGVuZ3RoOyBpKyspXHJcbiAgICAgIFx0e1xyXG4gICAgICAgICAgaWYgKG9EYXRhW2ldWzBdPj1pblYgJiYgb0RhdGFbaV1bMF08PWxhVilcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgZDMucHVzaChvRGF0YVtpXSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIFx0fVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBkYXRhW3NlcmllXS5kYXRhID0gKHN0ZXA8c3RlcHMpP2QzOm9EYXRhO1xyXG4gICAgICBwbG90LnNldERhdGEoZGF0YSk7XHJcbiAgICAgIHBsb3QuZHJhdygpO1xyXG4gICAgICBpZiAoc3RlcDxzdGVwcylcclxuICAgICAge1xyXG4gICAgICAgIHNldFRpbWVvdXQocGxvdERhdGEsIGR1cmF0aW9uL3N0ZXBzKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgIHtcclxuICAgICAgICBjaGFydC50cmlnZ2VyKCBcImFuaW1hdG9yQ29tcGxldGVcIiApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHNldFRpbWVvdXQocGxvdERhdGEsc3RhcnQpO1xyXG4gICAgcmV0dXJuIHBsb3Q7XHJcbiAgfVxyXG59KTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvanF1ZXJ5LmZsb3QuYW5pbWF0b3IvanF1ZXJ5LmZsb3QuYW5pbWF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2pxdWVyeS5mbG90LmFuaW1hdG9yL2pxdWVyeS5mbG90LmFuaW1hdG9yLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gNCJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./node_modules/jquery.flot.animator/jquery.flot.animator.js\n");

/***/ }),

/***/ "./node_modules/morris.js/morris.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery, Raphael) {/* @license\nmorris.js v0.5.0\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var $, Morris, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  $ = jQuery;\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      var _this = this;\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if ((this.el == null) || this.el.length === 0) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (this.el.css('position') === 'static') {\n        this.el.css('position', 'relative');\n      }\n      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      this.el.bind('mousemove', function(evt) {\n        var left, offset, right, width, x;\n        offset = _this.el.offset();\n        x = evt.pageX - offset.left;\n        if (_this.selectFrom) {\n          left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\n          right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\n          width = right - left;\n          return _this.selectionRect.attr({\n            x: left,\n            width: width\n          });\n        } else {\n          return _this.fire('hovermove', x, evt.pageY - offset.top);\n        }\n      });\n      this.el.bind('mouseleave', function(evt) {\n        if (_this.selectFrom) {\n          _this.selectionRect.hide();\n          _this.selectFrom = null;\n        }\n        return _this.fire('hoverout');\n      });\n      this.el.bind('touchstart touchmove touchend', function(evt) {\n        var offset, touch;\n        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n        offset = _this.el.offset();\n        return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n      });\n      this.el.bind('click', function(evt) {\n        var offset;\n        offset = _this.el.offset();\n        return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n      });\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        this.el.bind('mousedown', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          return _this.startRange(evt.pageX - offset.left);\n        });\n        this.el.bind('mouseup', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          _this.endRange(evt.pageX - offset.left);\n          return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n        });\n      }\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: false,\n      yLabelFormat: null,\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      preUnits: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      goals: [],\n      goalStrokeWidth: 1.0,\n      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: false\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, idx, index, maxGoal, minGoal, ret, row, step, total, y, ykey, ymax, ymin, yval, _ref;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if (yval != null) {\n                if (this.cumulative) {\n                  total += yval;\n                } else {\n                  if (ymax != null) {\n                    ymax = Math.max(yval, ymax);\n                    ymin = Math.min(yval, ymin);\n                  } else {\n                    ymax = ymin = yval;\n                  }\n                }\n              }\n              if (this.cumulative && (total != null)) {\n                ymax = Math.max(total, ymax);\n                ymin = Math.min(total, ymin);\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          this.events = (function() {\n            var _i, _len, _ref, _results;\n            _ref = this.options.events;\n            _results = [];\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              e = _ref[_i];\n              _results.push(Morris.parseDate(e));\n            }\n            return _results;\n          }).call(this);\n        } else {\n          this.events = this.options.events;\n        }\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, this.events));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, this.events));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _i, _ref1, _ref2, _results;\n            _results = [];\n            for (y = _i = _ref1 = this.ymin, _ref2 = this.ymax; step > 0 ? _i <= _ref2 : _i >= _ref2; y = _i += step) {\n              _results.push(y);\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\n      w = this.el.width();\n      h = this.el.height();\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\n          yLabelWidths = (function() {\n            var _i, _len, _ref1, _results;\n            _ref1 = this.grid;\n            _results = [];\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              gridLine = _ref1[_i];\n              _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n            }\n            return _results;\n          }).call(this);\n          this.left += Math.max.apply(Math, yLabelWidths);\n        }\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\n          bottomOffsets = (function() {\n            var _i, _ref2, _results;\n            _results = [];\n            for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].text, -this.options.xLabelAngle).height);\n            }\n            return _results;\n          }).call(this);\n          this.bottom -= Math.max.apply(Math, bottomOffsets);\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        this.dx = this.width / (this.xmax - this.xmin);\n        this.dy = this.height / (this.ymax - this.ymin);\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      return this.bottom - (y - this.ymin) * this.dy;\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.left + this.right) / 2;\n      } else {\n        return this.left + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawGoals();\n      this.drawEvents();\n      if (this.draw) {\n        return this.draw();\n      }\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label);\n    };\n\n    Grid.prototype.yLabelFormat = function(label) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label);\n      } else {\n        return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n      }\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var lineY, y, _i, _len, _ref, _ref1, _ref2, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      _ref1 = this.grid;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        lineY = _ref1[_i];\n        y = this.transY(lineY);\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n          this.drawYAxisLabel(this.left - this.options.padding / 2, y, this.yAxisFormat(lineY));\n        }\n        if (this.options.grid) {\n          _results.push(this.drawGridLine(\"M\" + this.left + \",\" + y + \"H\" + (this.left + this.width)));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _len, _ref, _results;\n      _ref = this.options.goals;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        _results.push(this.drawGoal(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      _ref = this.events;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        event = _ref[i];\n        color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n        _results.push(this.drawEvent(event, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      return this.raphael.path(\"M\" + this.left + \",\" + (this.transY(goal)) + \"H\" + this.right).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      return this.raphael.path(\"M\" + (this.transX(event)) + \",\" + this.bottom + \"V\" + this.top).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = $.extend({}, Morris.Hover.defaults, options);\n      this.el = $(\"<div class='\" + this.options[\"class\"] + \"'></div>\");\n      this.el.hide();\n      this.options.parent.append(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.html(content);\n    };\n\n    Hover.prototype.moveTo = function(x, y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\n      parentWidth = this.options.parent.innerWidth();\n      parentHeight = this.options.parent.innerHeight();\n      hoverWidth = this.el.outerWidth();\n      hoverHeight = this.el.outerHeight();\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        top = y - hoverHeight - 10;\n        if (top < 0) {\n          top = y + 10;\n          if (top + hoverHeight > parentHeight) {\n            top = parentHeight / 2 - hoverHeight / 2;\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      return this.el.css({\n        left: left + \"px\",\n        top: parseInt(top) + \"px\"\n      });\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.show();\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.hide();\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      smooth: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 24,\n      hideHover: false\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row._y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        })())));\n      }\n      return _results;\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var content, j, row, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      return [content, row._x, row._ymax];\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          coords = (function() {\n            var _j, _len, _ref2, _results1;\n            _ref2 = this.data;\n            _results1 = [];\n            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n              r = _ref2[_j];\n              if (r._y[i] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y[i]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      _results = [];\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        _results.push(drawLabel(l[0], l[1]));\n      }\n      return _results;\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        this._drawLineFor(i);\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        _results.push(this._drawPointFor(i));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.createPath = function(coords, smooth, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (smooth) {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (smooth) {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (!smooth || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      }\n    };\n\n    Line.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + 3\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = $.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = $.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var row, total, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              _results1.push(this.transY(y));\n            } else {\n              total += y || 0;\n              _results1.push(this.transY(total));\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.max.apply(Math, row._y));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      _results2 = [];\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        return this.drawFilledPath(path, this.fillForSeries(index));\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill) {\n      return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, $.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      barOpacity: 1.0,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 50\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.left + this.width * (idx + 0.5) / this.data.length;\n        _results.push(row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(null);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      return this.drawSeries();\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var i, label, labelBox, margin, offset, prevAngleMargin, prevLabelMargin, row, textBox, ypos, _i, _ref, _results;\n      ypos = this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        label = this.drawXAxisLabel(row._x, ypos, row.label);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < this.el.width()) {\n          if (this.options.xLabelAngle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          _results.push(prevLabelMargin = labelBox.x - this.options.xLabelMargin);\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barWidth, bottom, groupWidth, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos;\n      groupWidth = this.width / this.options.data.length;\n      numBars = this.options.stacked ? 1 : this.options.ykeys.length;\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n          row = _ref[idx];\n          lastTop = 0;\n          _results.push((function() {\n            var _j, _len1, _ref1, _results1;\n            _ref1 = row._y;\n            _results1 = [];\n            for (sidx = _j = 0, _len1 = _ref1.length; _j < _len1; sidx = ++_j) {\n              ypos = _ref1[sidx];\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.left + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  this.drawBar(this.left + idx * groupWidth, this.top, groupWidth, Math.abs(this.top - this.bottom), this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                _results1.push(lastTop += size);\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x) {\n      if (this.data.length === 0) {\n        return null;\n      }\n      x = Math.max(Math.min(x, this.right), this.left);\n      return Math.min(this.data.length - 1, Math.floor((x - this.left) / (this.width / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x);\n      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, j, row, x, y, _i, _len, _ref;\n      row = this.data[index];\n      content = \"<div class='morris-hover-row-label'>\" + row.label + \"</div>\";\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      x = this.left + (index + 0.5) * this.width / this.data.length;\n      return [content, x];\n    };\n\n    Bar.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (maxRadius === 0 || maxRadius > height) {\n        path = this.raphael.rect(xPos, yPos, width, height);\n      } else {\n        path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      formatter: Morris.commas,\n      resize: false\n    };\n\n    function Donut(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var _this = this;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = $.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if (this.el === null || this.el.length === 0) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      if (options.data === void 0 || options.data.length === 0) {\n        return;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.redraw = function() {\n      var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n      this.raphael.clear();\n      cx = this.el.width() / 2;\n      cy = this.el.height() / 2;\n      w = (Math.min(cx, cy) - 10) / 3;\n      total = 0;\n      _ref = this.values;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        value = _ref[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref1 = this.values;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        value = _ref1[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      _ref2 = this.values;\n      _results = [];\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        value = _ref2[_k];\n        if (value === max_value) {\n          this.select(idx);\n          break;\n        }\n        _results.push(idx += 1);\n      }\n      return _results;\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      return this.setLabels(row.label, this.options.formatter(row.value, row));\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\n      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      this.arc = this.drawDonutArc(this.hilight, this.color);\n      return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n        return _this.fire('hover', _this.index);\n      }, function() {\n        return _this.fire('click', _this.index);\n      });\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      return this.raphael.path(path).attr({\n        stroke: color,\n        'stroke-width': 2,\n        opacity: 0\n      });\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction) {\n      return this.raphael.path(path).attr({\n        fill: fillColor,\n        stroke: strokeColor,\n        'stroke-width': 3\n      }).hover(hoverFunction).click(clickFunction);\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        this.seg.animate({\n          path: this.selectedPath\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 1\n        }, 150, '<>');\n        return this.selected = true;\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(\"./node_modules/webpack-raphael/raphael-min.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/morris.js/morris.js\n");

/***/ }),

/***/ "./node_modules/rickshaw/rickshaw.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery, __webpack_provided_window_dot_jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(\"./node_modules/d3/d3.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = function (d3) {\n            return (root.Rickshaw = factory(d3));\n        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('d3'));\n    } else {\n        root.Rickshaw = factory(d3);\n    }\n}(this, function (d3) {\n/* jshint -W079 */ \n\nvar Rickshaw = {\n\n\tnamespace: function(namespace, obj) {\n\n\t\tvar parts = namespace.split('.');\n\n\t\tvar parent = Rickshaw;\n\n\t\tfor(var i = 1, length = parts.length; i < length; i++) {\n\t\t\tvar currentPart = parts[i];\n\t\t\tparent[currentPart] = parent[currentPart] || {};\n\t\t\tparent = parent[currentPart];\n\t\t}\n\t\treturn parent;\n\t},\n\n\tkeys: function(obj) {\n\t\tvar keys = [];\n\t\tfor (var key in obj) keys.push(key);\n\t\treturn keys;\n\t},\n\n\textend: function(destination, source) {\n\n\t\tfor (var property in source) {\n\t\t\tdestination[property] = source[property];\n\t\t}\n\t\treturn destination;\n\t},\n\n\tclone: function(obj) {\n\t\treturn JSON.parse(JSON.stringify(obj));\n\t}\n};\n/* Adapted from https://github.com/Jakobo/PTClass */\n\n/*\nCopyright (c) 2005-2010 Sam Stephenson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n/* Based on Alex Arnell's inheritance implementation. */\n/** section: Language\n * class Class\n *\n *  Manages Prototype's class-based OOP system.\n *\n *  Refer to Prototype's web site for a [tutorial on classes and\n *  inheritance](http://prototypejs.org/learn/class-inheritance).\n**/\n(function(globalContext) {\n/* ------------------------------------ */\n/* Import from object.js                */\n/* ------------------------------------ */\nvar _toString = Object.prototype.toString,\n    NULL_TYPE = 'Null',\n    UNDEFINED_TYPE = 'Undefined',\n    BOOLEAN_TYPE = 'Boolean',\n    NUMBER_TYPE = 'Number',\n    STRING_TYPE = 'String',\n    OBJECT_TYPE = 'Object',\n    FUNCTION_CLASS = '[object Function]';\nfunction isFunction(object) {\n  return _toString.call(object) === FUNCTION_CLASS;\n}\nfunction extend(destination, source) {\n  for (var property in source) if (source.hasOwnProperty(property)) // modify protect primitive slaughter\n    destination[property] = source[property];\n  return destination;\n}\nfunction keys(object) {\n  if (Type(object) !== OBJECT_TYPE) { throw new TypeError(); }\n  var results = [];\n  for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n      results.push(property);\n    }\n  }\n  return results;\n}\nfunction Type(o) {\n  switch(o) {\n    case null: return NULL_TYPE;\n    case (void 0): return UNDEFINED_TYPE;\n  }\n  var type = typeof o;\n  switch(type) {\n    case 'boolean': return BOOLEAN_TYPE;\n    case 'number':  return NUMBER_TYPE;\n    case 'string':  return STRING_TYPE;\n  }\n  return OBJECT_TYPE;\n}\nfunction isUndefined(object) {\n  return typeof object === \"undefined\";\n}\n/* ------------------------------------ */\n/* Import from Function.js              */\n/* ------------------------------------ */\nvar slice = Array.prototype.slice;\nfunction argumentNames(fn) {\n  var names = fn.toString().match(/^[\\s\\(]*function[^(]*\\(([^)]*)\\)/)[1]\n    .replace(/\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\//g, '')\n    .replace(/\\s+/g, '').split(',');\n  return names.length == 1 && !names[0] ? [] : names;\n}\nfunction wrap(fn, wrapper) {\n  var __method = fn;\n  return function() {\n    var a = update([bind(__method, this)], arguments);\n    return wrapper.apply(this, a);\n  }\n}\nfunction update(array, args) {\n  var arrayLength = array.length, length = args.length;\n  while (length--) array[arrayLength + length] = args[length];\n  return array;\n}\nfunction merge(array, args) {\n  array = slice.call(array, 0);\n  return update(array, args);\n}\nfunction bind(fn, context) {\n  if (arguments.length < 2 && isUndefined(arguments[0])) return this;\n  var __method = fn, args = slice.call(arguments, 2);\n  return function() {\n    var a = merge(args, arguments);\n    return __method.apply(context, a);\n  }\n}\n\n/* ------------------------------------ */\n/* Import from Prototype.js             */\n/* ------------------------------------ */\nvar emptyFunction = function(){};\n\nvar Class = (function() {\n  \n  // Some versions of JScript fail to enumerate over properties, names of which \n  // correspond to non-enumerable properties in the prototype chain\n  var IS_DONTENUM_BUGGY = (function(){\n    for (var p in { toString: 1 }) {\n      // check actual property name, so that it works with augmented Object.prototype\n      if (p === 'toString') return false;\n    }\n    return true;\n  })();\n  \n  function subclass() {};\n  function create() {\n    var parent = null, properties = [].slice.apply(arguments);\n    if (isFunction(properties[0]))\n      parent = properties.shift();\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    extend(klass, Class.Methods);\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      subclass.prototype = parent.prototype;\n      klass.prototype = new subclass;\n      try { parent.subclasses.push(klass) } catch(e) {}\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++)\n      klass.addMethods(properties[i]);\n\n    if (!klass.prototype.initialize)\n      klass.prototype.initialize = emptyFunction;\n\n    klass.prototype.constructor = klass;\n    return klass;\n  }\n\n  function addMethods(source) {\n    var ancestor   = this.superclass && this.superclass.prototype,\n        properties = keys(source);\n\n    // IE6 doesn't enumerate `toString` and `valueOf` (among other built-in `Object.prototype`) properties,\n    // Force copy if they're not Object.prototype ones.\n    // Do not copy other Object.prototype.* for performance reasons\n    if (IS_DONTENUM_BUGGY) {\n      if (source.toString != Object.prototype.toString)\n        properties.push(\"toString\");\n      if (source.valueOf != Object.prototype.valueOf)\n        properties.push(\"valueOf\");\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      var property = properties[i], value = source[property];\n      if (ancestor && isFunction(value) &&\n          argumentNames(value)[0] == \"$super\") {\n        var method = value;\n        value = wrap((function(m) {\n          return function() { return ancestor[m].apply(this, arguments); };\n        })(property), method);\n\n        value.valueOf = bind(method.valueOf, method);\n        value.toString = bind(method.toString, method);\n      }\n      this.prototype[property] = value;\n    }\n\n    return this;\n  }\n\n  return {\n    create: create,\n    Methods: {\n      addMethods: addMethods\n    }\n  };\n})();\n\nif (globalContext.exports) {\n  globalContext.exports.Class = Class;\n}\nelse {\n  globalContext.Class = Class;\n}\n})(Rickshaw);\nRickshaw.namespace('Rickshaw.Compat.ClassList');\n\nRickshaw.Compat.ClassList = function() {\n\n\t/* adapted from http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\n\tif (typeof document !== \"undefined\" && !(\"classList\" in document.createElement(\"a\"))) {\n\n\t(function (view) {\n\n\t\"use strict\";\n\n\tvar\n\t\t  classListProp = \"classList\"\n\t\t, protoProp = \"prototype\"\n\t\t, elemCtrProto = (view.HTMLElement || view.Element)[protoProp]\n\t\t, objCtr = Object\n\t\t, strTrim = String[protoProp].trim || function () {\n\t\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t\t}\n\t\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\t\tvar\n\t\t\t\t  i = 0\n\t\t\t\t, len = this.length\n\t\t\t;\n\t\t\tfor (; i < len; i++) {\n\t\t\t\tif (i in this && this[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\t// Vendors: please allow content code to instantiate DOMExceptions\n\t\t, DOMEx = function (type, message) {\n\t\t\tthis.name = type;\n\t\t\tthis.code = DOMException[type];\n\t\t\tthis.message = message;\n\t\t}\n\t\t, checkTokenAndGetIndex = function (classList, token) {\n\t\t\tif (token === \"\") {\n\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (/\\s/.test(token)) {\n\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t\t, \"String contains an invalid character\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn arrIndexOf.call(classList, token);\n\t\t}\n\t\t, ClassList = function (elem) {\n\t\t\tvar\n\t\t\t\t  trimmedClasses = strTrim.call(elem.className)\n\t\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t\t, i = 0\n\t\t\t\t, len = classes.length\n\t\t\t;\n\t\t\tfor (; i < len; i++) {\n\t\t\t\tthis.push(classes[i]);\n\t\t\t}\n\t\t\tthis._updateClassName = function () {\n\t\t\t\telem.className = this.toString();\n\t\t\t};\n\t\t}\n\t\t, classListProto = ClassList[protoProp] = []\n\t\t, classListGetter = function () {\n\t\t\treturn new ClassList(this);\n\t\t}\n\t;\n\t// Most DOMException implementations don't allow calling DOMException's toString()\n\t// on non-DOMExceptions. Error's toString() is sufficient here.\n\tDOMEx[protoProp] = Error[protoProp];\n\tclassListProto.item = function (i) {\n\t\treturn this[i] || null;\n\t};\n\tclassListProto.contains = function (token) {\n\t\ttoken += \"\";\n\t\treturn checkTokenAndGetIndex(this, token) !== -1;\n\t};\n\tclassListProto.add = function (token) {\n\t\ttoken += \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tthis._updateClassName();\n\t\t}\n\t};\n\tclassListProto.remove = function (token) {\n\t\ttoken += \"\";\n\t\tvar index = checkTokenAndGetIndex(this, token);\n\t\tif (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis._updateClassName();\n\t\t}\n\t};\n\tclassListProto.toggle = function (token) {\n\t\ttoken += \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.add(token);\n\t\t} else {\n\t\t\tthis.remove(token);\n\t\t}\n\t};\n\tclassListProto.toString = function () {\n\t\treturn this.join(\" \");\n\t};\n\n\tif (objCtr.defineProperty) {\n\t\tvar classListPropDesc = {\n\t\t\t  get: classListGetter\n\t\t\t, enumerable: true\n\t\t\t, configurable: true\n\t\t};\n\t\ttry {\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t\tif (ex.number === -0x7FF5EC54) {\n\t\t\t\tclassListPropDesc.enumerable = false;\n\t\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t\t}\n\t\t}\n\t} else if (objCtr[protoProp].__defineGetter__) {\n\t\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n\t}\n\n\t}(window));\n\n\t}\n};\n\nif ( (typeof RICKSHAW_NO_COMPAT !== \"undefined\" && !RICKSHAW_NO_COMPAT) || typeof RICKSHAW_NO_COMPAT === \"undefined\") {\n\tnew Rickshaw.Compat.ClassList();\n}\nRickshaw.namespace('Rickshaw.Graph');\n\nRickshaw.Graph = function(args) {\n\n\tvar self = this;\n\n\tthis.initialize = function(args) {\n\n\t\tif (!args.element) throw \"Rickshaw.Graph needs a reference to an element\";\n\t\tif (args.element.nodeType !== 1) throw \"Rickshaw.Graph element was defined but not an HTML element\";\n\n\t\tthis.element = args.element;\n\t\tthis.series = args.series;\n\t\tthis.window = {};\n\n\t\tthis.updateCallbacks = [];\n\t\tthis.configureCallbacks = [];\n\n\t\tthis.defaults = {\n\t\t\tinterpolation: 'cardinal',\n\t\t\toffset: 'zero',\n\t\t\tmin: undefined,\n\t\t\tmax: undefined,\n\t\t\tpreserve: false,\n\t\t\txScale: undefined,\n\t\t\tyScale: undefined,\n\t\t\tstack: true\n\t\t};\n\n\t\tthis._loadRenderers();\n\t\tthis.configure(args);\n\t\tthis.validateSeries(args.series);\n\n\t\tthis.series.active = function() { return self.series.filter( function(s) { return !s.disabled } ) };\n\t\tthis.setSize({ width: args.width, height: args.height });\n\t\tthis.element.classList.add('rickshaw_graph');\n\n\t\tthis.vis = d3.select(this.element)\n\t\t\t.append(\"svg:svg\")\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height);\n\n\t\tthis.discoverRange();\n\t};\n\n\tthis._loadRenderers = function() {\n\n\t\tfor (var name in Rickshaw.Graph.Renderer) {\n\t\t\tif (!name || !Rickshaw.Graph.Renderer.hasOwnProperty(name)) continue;\n\t\t\tvar r = Rickshaw.Graph.Renderer[name];\n\t\t\tif (!r || !r.prototype || !r.prototype.render) continue;\n\t\t\tself.registerRenderer(new r( { graph: self } ));\n\t\t}\n\t};\n\n\tthis.validateSeries = function(series) {\n\n\t\tif (!Array.isArray(series) && !(series instanceof Rickshaw.Series)) {\n\t\t\tvar seriesSignature = Object.prototype.toString.apply(series);\n\t\t\tthrow \"series is not an array: \" + seriesSignature;\n\t\t}\n\n\t\tvar pointsCount;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tif (!(s instanceof Object)) {\n\t\t\t\tthrow \"series element is not an object: \" + s;\n\t\t\t}\n\t\t\tif (!(s.data)) {\n\t\t\t\tthrow \"series has no data: \" + JSON.stringify(s);\n\t\t\t}\n\t\t\tif (!Array.isArray(s.data)) {\n\t\t\t\tthrow \"series data is not an array: \" + JSON.stringify(s.data);\n\t\t\t}\n\t\t\t\n\t\t\tif (s.data.length > 0) {\n\t\t\t\tvar x = s.data[0].x;\n\t\t\t\tvar y = s.data[0].y;\n\n\t\t\t\tif (typeof x != 'number' || ( typeof y != 'number' && y !== null ) ) {\n\t\t\t\t\tthrow \"x and y properties of points should be numbers instead of \" +\n\t\t\t\t\t\t(typeof x) + \" and \" + (typeof y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (s.data.length >= 3) {\n\t\t\t\t// probe to sanity check sort order\n\t\t\t\tif (s.data[2].x < s.data[1].x || s.data[1].x < s.data[0].x || s.data[s.data.length - 1].x < s.data[0].x) {\n\t\t\t\t\tthrow \"series data needs to be sorted on x values for series name: \" + s.name;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}, this );\n\t};\n\n\tthis.dataDomain = function() {\n\n\t\tvar data = this.series.map( function(s) { return s.data } );\n\n\t\tvar min = d3.min( data.map( function(d) { return d[0].x } ) );\n\t\tvar max = d3.max( data.map( function(d) { return d[d.length - 1].x } ) );\n\n\t\treturn [min, max];\n\t};\n\n\tthis.discoverRange = function() {\n\n\t\tvar domain = this.renderer.domain();\n\n\t\t// this.*Scale is coming from the configuration dictionary\n\t\t// which may be referenced by the Graph creator, or shared\n\t\t// with other Graphs. We need to ensure we copy the scale\n\t\t// so that our mutations do not change the object given to us.\n\t\t// Hence the .copy()\n\t\tthis.x = (this.xScale || d3.scale.linear()).copy().domain(domain.x).range([0, this.width]);\n\t\tthis.y = (this.yScale || d3.scale.linear()).copy().domain(domain.y).range([this.height, 0]);\n\n\t\tthis.x.magnitude = d3.scale.linear()\n\t\t\t.domain([domain.x[0] - domain.x[0], domain.x[1] - domain.x[0]])\n\t\t\t.range([0, this.width]);\n\n\t\tthis.y.magnitude = d3.scale.linear()\n\t\t\t.domain([domain.y[0] - domain.y[0], domain.y[1] - domain.y[0]])\n\t\t\t.range([0, this.height]);\n\t};\n\n\tthis.render = function() {\n\n\t\tvar stackedData = this.stackData();\n\t\tthis.discoverRange();\n\n\t\tthis.renderer.render();\n\n\t\tthis.updateCallbacks.forEach( function(callback) {\n\t\t\tcallback();\n\t\t} );\n\n\t};\n\n\tthis.update = this.render;\n\n\tthis.stackData = function() {\n\n\t\tvar data = this.series.active()\n\t\t\t.map( function(d) { return d.data } )\n\t\t\t.map( function(d) { return d.filter( function(d) { return this._slice(d) }, this ) }, this);\n\n\t\tvar preserve = this.preserve;\n\t\tif (!preserve) {\n\t\t\tthis.series.forEach( function(series) {\n\t\t\t\tif (series.scale) {\n\t\t\t\t\t// data must be preserved when a scale is used\n\t\t\t\t\tpreserve = true;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tdata = preserve ? Rickshaw.clone(data) : data;\n\n\t\tthis.series.active().forEach( function(series, index) {\n\t\t\tif (series.scale) {\n\t\t\t\t// apply scale to each series\n\t\t\t\tvar seriesData = data[index];\n\t\t\t\tif(seriesData) {\n\t\t\t\t\tseriesData.forEach( function(d) {\n\t\t\t\t\t\td.y = series.scale(d.y);\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.stackData.hooks.data.forEach( function(entry) {\n\t\t\tdata = entry.f.apply(self, [data]);\n\t\t} );\n\n\t\tvar stackedData;\n\n\t\tif (!this.renderer.unstack) {\n\n\t\t\tthis._validateStackable();\n\n\t\t\tvar layout = d3.layout.stack();\n\t\t\tlayout.offset( self.offset );\n\t\t\tstackedData = layout(data);\n\t\t}\n\n\t\tstackedData = stackedData || data;\n\n\t\tif (this.renderer.unstack) {\n\t\t\tstackedData.forEach( function(seriesData) {\n\t\t\t\tseriesData.forEach( function(d) {\n\t\t\t\t\td.y0 = d.y0 === undefined ? 0 : d.y0;\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tthis.stackData.hooks.after.forEach( function(entry) {\n\t\t\tstackedData = entry.f.apply(self, [data]);\n\t\t} );\n\n\t\tvar i = 0;\n\t\tthis.series.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.stack = stackedData[i++];\n\t\t} );\n\n\t\tthis.stackedData = stackedData;\n\t\treturn stackedData;\n\t};\n\n\tthis._validateStackable = function() {\n\n\t\tvar series = this.series;\n\t\tvar pointsCount;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tpointsCount = pointsCount || s.data.length;\n\n\t\t\tif (pointsCount && s.data.length != pointsCount) {\n\t\t\t\tthrow \"stacked series cannot have differing numbers of points: \" +\n\t\t\t\t\tpointsCount + \" vs \" + s.data.length + \"; see Rickshaw.Series.fill()\";\n\t\t\t}\n\n\t\t}, this );\n\t};\n\n\tthis.stackData.hooks = { data: [], after: [] };\n\n\tthis._slice = function(d) {\n\n\t\tif (this.window.xMin || this.window.xMax) {\n\n\t\t\tvar isInRange = true;\n\n\t\t\tif (this.window.xMin && d.x < this.window.xMin) isInRange = false;\n\t\t\tif (this.window.xMax && d.x > this.window.xMax) isInRange = false;\n\n\t\t\treturn isInRange;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tthis.onUpdate = function(callback) {\n\t\tthis.updateCallbacks.push(callback);\n\t};\n\n\tthis.onConfigure = function(callback) {\n\t\tthis.configureCallbacks.push(callback);\n\t};\n\n\tthis.registerRenderer = function(renderer) {\n\t\tthis._renderers = this._renderers || {};\n\t\tthis._renderers[renderer.name] = renderer;\n\t};\n\n\tthis.configure = function(args) {\n\n\t\tthis.config = this.config || {};\n\n\t\tif (args.width || args.height) {\n\t\t\tthis.setSize(args);\n\t\t}\n\n\t\tRickshaw.keys(this.defaults).forEach( function(k) {\n\t\t\tthis.config[k] = k in args ? args[k]\n\t\t\t\t: k in this ? this[k]\n\t\t\t\t: this.defaults[k];\n\t\t}, this );\n\n\t\tRickshaw.keys(this.config).forEach( function(k) {\n\t\t\tthis[k] = this.config[k];\n\t\t}, this );\n\n\t\tif ('stack' in args) args.unstack = !args.stack;\n\n\t\tvar renderer = args.renderer || (this.renderer && this.renderer.name) || 'stack';\n\t\tthis.setRenderer(renderer, args);\n\n\t\tthis.configureCallbacks.forEach( function(callback) {\n\t\t\tcallback(args);\n\t\t} );\n\t};\n\n\tthis.setRenderer = function(r, args) {\n\t\tif (typeof r == 'function') {\n\t\t\tthis.renderer = new r( { graph: self } );\n\t\t\tthis.registerRenderer(this.renderer);\n\t\t} else {\n\t\t\tif (!this._renderers[r]) {\n\t\t\t\tthrow \"couldn't find renderer \" + r;\n\t\t\t}\n\t\t\tthis.renderer = this._renderers[r];\n\t\t}\n\n\t\tif (typeof args == 'object') {\n\t\t\tthis.renderer.configure(args);\n\t\t}\n\t};\n\n\tthis.setSize = function(args) {\n\n\t\targs = args || {};\n\n\t\tif (typeof window !== undefined) {\n\t\t\tvar style = window.getComputedStyle(this.element, null);\n\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\t\t}\n\n\t\tthis.width = args.width || elementWidth || 400;\n\t\tthis.height = args.height || elementHeight || 250;\n\n\t\tthis.vis && this.vis\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height);\n\t};\n\n\tthis.initialize(args);\n};\nRickshaw.namespace('Rickshaw.Fixtures.Color');\n\nRickshaw.Fixtures.Color = function() {\n\n\tthis.schemes = {};\n\n\tthis.schemes.spectrum14 = [\n\t\t'#ecb796',\n\t\t'#dc8f70',\n\t\t'#b2a470',\n\t\t'#92875a',\n\t\t'#716c49',\n\t\t'#d2ed82',\n\t\t'#bbe468',\n\t\t'#a1d05d',\n\t\t'#e7cbe6',\n\t\t'#d8aad6',\n\t\t'#a888c2',\n\t\t'#9dc2d3',\n\t\t'#649eb9',\n\t\t'#387aa3'\n\t].reverse();\n\n\tthis.schemes.spectrum2000 = [\n\t\t'#57306f',\n\t\t'#514c76',\n\t\t'#646583',\n\t\t'#738394',\n\t\t'#6b9c7d',\n\t\t'#84b665',\n\t\t'#a7ca50',\n\t\t'#bfe746',\n\t\t'#e2f528',\n\t\t'#fff726',\n\t\t'#ecdd00',\n\t\t'#d4b11d',\n\t\t'#de8800',\n\t\t'#de4800',\n\t\t'#c91515',\n\t\t'#9a0000',\n\t\t'#7b0429',\n\t\t'#580839',\n\t\t'#31082b'\n\t];\n\n\tthis.schemes.spectrum2001 = [\n\t\t'#2f243f',\n\t\t'#3c2c55',\n\t\t'#4a3768',\n\t\t'#565270',\n\t\t'#6b6b7c',\n\t\t'#72957f',\n\t\t'#86ad6e',\n\t\t'#a1bc5e',\n\t\t'#b8d954',\n\t\t'#d3e04e',\n\t\t'#ccad2a',\n\t\t'#cc8412',\n\t\t'#c1521d',\n\t\t'#ad3821',\n\t\t'#8a1010',\n\t\t'#681717',\n\t\t'#531e1e',\n\t\t'#3d1818',\n\t\t'#320a1b'\n\t];\n\n\tthis.schemes.classic9 = [\n\t\t'#423d4f',\n\t\t'#4a6860',\n\t\t'#848f39',\n\t\t'#a2b73c',\n\t\t'#ddcb53',\n\t\t'#c5a32f',\n\t\t'#7d5836',\n\t\t'#963b20',\n\t\t'#7c2626',\n\t\t'#491d37',\n\t\t'#2f254a'\n\t].reverse();\n\n\tthis.schemes.httpStatus = {\n\t\t503: '#ea5029',\n\t\t502: '#d23f14',\n\t\t500: '#bf3613',\n\t\t410: '#efacea',\n\t\t409: '#e291dc',\n\t\t403: '#f457e8',\n\t\t408: '#e121d2',\n\t\t401: '#b92dae',\n\t\t405: '#f47ceb',\n\t\t404: '#a82a9f',\n\t\t400: '#b263c6',\n\t\t301: '#6fa024',\n\t\t302: '#87c32b',\n\t\t307: '#a0d84c',\n\t\t304: '#28b55c',\n\t\t200: '#1a4f74',\n\t\t206: '#27839f',\n\t\t201: '#52adc9',\n\t\t202: '#7c979f',\n\t\t203: '#a5b8bd',\n\t\t204: '#c1cdd1'\n\t};\n\n\tthis.schemes.colorwheel = [\n\t\t'#b5b6a9',\n\t\t'#858772',\n\t\t'#785f43',\n\t\t'#96557e',\n\t\t'#4682b4',\n\t\t'#65b9ac',\n\t\t'#73c03a',\n\t\t'#cb513a'\n\t].reverse();\n\n\tthis.schemes.cool = [\n\t\t'#5e9d2f',\n\t\t'#73c03a',\n\t\t'#4682b4',\n\t\t'#7bc3b8',\n\t\t'#a9884e',\n\t\t'#c1b266',\n\t\t'#a47493',\n\t\t'#c09fb5'\n\t];\n\n\tthis.schemes.munin = [\n\t\t'#00cc00',\n\t\t'#0066b3',\n\t\t'#ff8000',\n\t\t'#ffcc00',\n\t\t'#330099',\n\t\t'#990099',\n\t\t'#ccff00',\n\t\t'#ff0000',\n\t\t'#808080',\n\t\t'#008f00',\n\t\t'#00487d',\n\t\t'#b35a00',\n\t\t'#b38f00',\n\t\t'#6b006b',\n\t\t'#8fb300',\n\t\t'#b30000',\n\t\t'#bebebe',\n\t\t'#80ff80',\n\t\t'#80c9ff',\n\t\t'#ffc080',\n\t\t'#ffe680',\n\t\t'#aa80ff',\n\t\t'#ee00cc',\n\t\t'#ff8080',\n\t\t'#666600',\n\t\t'#ffbfff',\n\t\t'#00ffcc',\n\t\t'#cc6699',\n\t\t'#999900'\n\t];\n};\nRickshaw.namespace('Rickshaw.Fixtures.RandomData');\n\nRickshaw.Fixtures.RandomData = function(timeInterval) {\n\n\tvar addData;\n\ttimeInterval = timeInterval || 1;\n\n\tvar lastRandomValue = 200;\n\n\tvar timeBase = Math.floor(new Date().getTime() / 1000);\n\n\tthis.addData = function(data) {\n\n\t\tvar randomValue = Math.random() * 100 + 15 + lastRandomValue;\n\t\tvar index = data[0].length;\n\n\t\tvar counter = 1;\n\n\t\tdata.forEach( function(series) {\n\t\t\tvar randomVariance = Math.random() * 20;\n\t\t\tvar v = randomValue / 25  + counter++ +\n\t\t\t\t(Math.cos((index * counter * 11) / 960) + 2) * 15 +\n\t\t\t\t(Math.cos(index / 7) + 2) * 7 +\n\t\t\t\t(Math.cos(index / 17) + 2) * 1;\n\n\t\t\tseries.push( { x: (index * timeInterval) + timeBase, y: v + randomVariance } );\n\t\t} );\n\n\t\tlastRandomValue = randomValue * 0.85;\n\t};\n\n\tthis.removeData = function(data) {\n\t\tdata.forEach( function(series) {\n\t\t\tseries.shift();\n\t\t} );\n\t\ttimeBase += timeInterval;\n\t};\n};\n\nRickshaw.namespace('Rickshaw.Fixtures.Time');\n\nRickshaw.Fixtures.Time = function() {\n\n\tvar self = this;\n\n\tthis.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n\tthis.units = [\n\t\t{\n\t\t\tname: 'decade',\n\t\t\tseconds: 86400 * 365.25 * 10,\n\t\t\tformatter: function(d) { return (parseInt(d.getUTCFullYear() / 10, 10) * 10) }\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tseconds: 86400 * 365.25,\n\t\t\tformatter: function(d) { return d.getUTCFullYear() }\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tseconds: 86400 * 30.5,\n\t\t\tformatter: function(d) { return self.months[d.getUTCMonth()] }\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tseconds: 86400 * 7,\n\t\t\tformatter: function(d) { return self.formatDate(d) }\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tseconds: 86400,\n\t\t\tformatter: function(d) { return d.getUTCDate() }\n\t\t}, {\n\t\t\tname: '6 hour',\n\t\t\tseconds: 3600 * 6,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tseconds: 3600,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: '15 minute',\n\t\t\tseconds: 60 * 15,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tseconds: 60,\n\t\t\tformatter: function(d) { return d.getUTCMinutes() }\n\t\t}, {\n\t\t\tname: '15 second',\n\t\t\tseconds: 15,\n\t\t\tformatter: function(d) { return d.getUTCSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tseconds: 1,\n\t\t\tformatter: function(d) { return d.getUTCSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'decisecond',\n\t\t\tseconds: 1/10,\n\t\t\tformatter: function(d) { return d.getUTCMilliseconds() + 'ms' }\n\t\t}, {\n\t\t\tname: 'centisecond',\n\t\t\tseconds: 1/100,\n\t\t\tformatter: function(d) { return d.getUTCMilliseconds() + 'ms' }\n\t\t}\n\t];\n\n\tthis.unit = function(unitName) {\n\t\treturn this.units.filter( function(unit) { return unitName == unit.name } ).shift();\n\t};\n\n\tthis.formatDate = function(d) {\n\t\treturn d3.time.format('%b %e')(d);\n\t};\n\n\tthis.formatTime = function(d) {\n\t\treturn d.toUTCString().match(/(\\d+:\\d+):/)[1];\n\t};\n\n\tthis.ceil = function(time, unit) {\n\n\t\tvar date, floor, year;\n\n\t\tif (unit.name == 'month') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = Date.UTC(date.getUTCFullYear(), date.getUTCMonth()) / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getUTCFullYear();\n\t\t\tvar month = date.getUTCMonth();\n\n\t\t\tif (month == 11) {\n\t\t\t\tmonth = 0;\n\t\t\t\tyear = year + 1;\n\t\t\t} else {\n\t\t\t\tmonth += 1;\n\t\t\t}\n\n\t\t\treturn Date.UTC(year, month) / 1000;\n\t\t}\n\n\t\tif (unit.name == 'year') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = Date.UTC(date.getUTCFullYear(), 0) / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getUTCFullYear() + 1;\n\n\t\t\treturn Date.UTC(year, 0) / 1000;\n\t\t}\n\n\t\treturn Math.ceil(time / unit.seconds) * unit.seconds;\n\t};\n};\nRickshaw.namespace('Rickshaw.Fixtures.Time.Local');\n\nRickshaw.Fixtures.Time.Local = function() {\n\n\tvar self = this;\n\n\tthis.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n\tthis.units = [\n\t\t{\n\t\t\tname: 'decade',\n\t\t\tseconds: 86400 * 365.25 * 10,\n\t\t\tformatter: function(d) { return (parseInt(d.getFullYear() / 10, 10) * 10) }\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tseconds: 86400 * 365.25,\n\t\t\tformatter: function(d) { return d.getFullYear() }\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tseconds: 86400 * 30.5,\n\t\t\tformatter: function(d) { return self.months[d.getMonth()] }\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tseconds: 86400 * 7,\n\t\t\tformatter: function(d) { return self.formatDate(d) }\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tseconds: 86400,\n\t\t\tformatter: function(d) { return d.getDate() }\n\t\t}, {\n\t\t\tname: '6 hour',\n\t\t\tseconds: 3600 * 6,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tseconds: 3600,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: '15 minute',\n\t\t\tseconds: 60 * 15,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tseconds: 60,\n\t\t\tformatter: function(d) { return d.getMinutes() }\n\t\t}, {\n\t\t\tname: '15 second',\n\t\t\tseconds: 15,\n\t\t\tformatter: function(d) { return d.getSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tseconds: 1,\n\t\t\tformatter: function(d) { return d.getSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'decisecond',\n\t\t\tseconds: 1/10,\n\t\t\tformatter: function(d) { return d.getMilliseconds() + 'ms' }\n\t\t}, {\n\t\t\tname: 'centisecond',\n\t\t\tseconds: 1/100,\n\t\t\tformatter: function(d) { return d.getMilliseconds() + 'ms' }\n\t\t}\n\t];\n\n\tthis.unit = function(unitName) {\n\t\treturn this.units.filter( function(unit) { return unitName == unit.name } ).shift();\n\t};\n\n\tthis.formatDate = function(d) {\n\t\treturn d3.time.format('%b %e')(d);\n\t};\n\n\tthis.formatTime = function(d) {\n\t\treturn d.toString().match(/(\\d+:\\d+):/)[1];\n\t};\n\n\tthis.ceil = function(time, unit) {\n\n\t\tvar date, floor, year;\n\n\t\tif (unit.name == 'day') {\n\n\t\t\tvar nearFuture = new Date((time + unit.seconds - 1) * 1000);\n\n\t\t\tvar rounded = new Date(0);\n\t\t\trounded.setFullYear(nearFuture.getFullYear());\n\t\t\trounded.setMonth(nearFuture.getMonth());\n\t\t\trounded.setDate(nearFuture.getDate());\n\t\t\trounded.setMilliseconds(0);\n\t\t\trounded.setSeconds(0);\n\t\t\trounded.setMinutes(0);\n\t\t\trounded.setHours(0);\n\n\t\t\treturn rounded.getTime() / 1000;\n\t\t}\n\n\t\tif (unit.name == 'month') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = new Date(date.getFullYear(), date.getMonth()).getTime() / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getFullYear();\n\t\t\tvar month = date.getMonth();\n\n\t\t\tif (month == 11) {\n\t\t\t\tmonth = 0;\n\t\t\t\tyear = year + 1;\n\t\t\t} else {\n\t\t\t\tmonth += 1;\n\t\t\t}\n\n\t\t\treturn new Date(year, month).getTime() / 1000;\n\t\t}\n\n\t\tif (unit.name == 'year') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = new Date(date.getUTCFullYear(), 0).getTime() / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getFullYear() + 1;\n\n\t\t\treturn new Date(year, 0).getTime() / 1000;\n\t\t}\n\n\t\treturn Math.ceil(time / unit.seconds) * unit.seconds;\n\t};\n};\nRickshaw.namespace('Rickshaw.Fixtures.Number');\n\nRickshaw.Fixtures.Number.formatKMBT = function(y) {\n\tvar abs_y = Math.abs(y);\n\tif (abs_y >= 1000000000000)   { return y / 1000000000000 + \"T\" }\n\telse if (abs_y >= 1000000000) { return y / 1000000000 + \"B\" }\n\telse if (abs_y >= 1000000)    { return y / 1000000 + \"M\" }\n\telse if (abs_y >= 1000)       { return y / 1000 + \"K\" }\n\telse if (abs_y < 1 && y > 0)  { return y.toFixed(2) }\n\telse if (abs_y === 0)         { return '' }\n\telse                      { return y }\n};\n\nRickshaw.Fixtures.Number.formatBase1024KMGTP = function(y) {\n    var abs_y = Math.abs(y);\n    if (abs_y >= 1125899906842624)  { return y / 1125899906842624 + \"P\" }\n    else if (abs_y >= 1099511627776){ return y / 1099511627776 + \"T\" }\n    else if (abs_y >= 1073741824)   { return y / 1073741824 + \"G\" }\n    else if (abs_y >= 1048576)      { return y / 1048576 + \"M\" }\n    else if (abs_y >= 1024)         { return y / 1024 + \"K\" }\n    else if (abs_y < 1 && y > 0)    { return y.toFixed(2) }\n    else if (abs_y === 0)           { return '' }\n    else                        { return y }\n};\nRickshaw.namespace(\"Rickshaw.Color.Palette\");\n\nRickshaw.Color.Palette = function(args) {\n\n\tvar color = new Rickshaw.Fixtures.Color();\n\n\targs = args || {};\n\tthis.schemes = {};\n\n\tthis.scheme = color.schemes[args.scheme] || args.scheme || color.schemes.colorwheel;\n\tthis.runningIndex = 0;\n\tthis.generatorIndex = 0;\n\n\tif (args.interpolatedStopCount) {\n\t\tvar schemeCount = this.scheme.length - 1;\n\t\tvar i, j, scheme = [];\n\t\tfor (i = 0; i < schemeCount; i++) {\n\t\t\tscheme.push(this.scheme[i]);\n\t\t\tvar generator = d3.interpolateHsl(this.scheme[i], this.scheme[i + 1]);\n\t\t\tfor (j = 1; j < args.interpolatedStopCount; j++) {\n\t\t\t\tscheme.push(generator((1 / args.interpolatedStopCount) * j));\n\t\t\t}\n\t\t}\n\t\tscheme.push(this.scheme[this.scheme.length - 1]);\n\t\tthis.scheme = scheme;\n\t}\n\tthis.rotateCount = this.scheme.length;\n\n\tthis.color = function(key) {\n\t\treturn this.scheme[key] || this.scheme[this.runningIndex++] || this.interpolateColor() || '#808080';\n\t};\n\n\tthis.interpolateColor = function() {\n\t\tif (!Array.isArray(this.scheme)) return;\n\t\tvar color;\n\t\tif (this.generatorIndex == this.rotateCount * 2 - 1) {\n\t\t\tcolor = d3.interpolateHsl(this.scheme[this.generatorIndex], this.scheme[0])(0.5);\n\t\t\tthis.generatorIndex = 0;\n\t\t\tthis.rotateCount *= 2;\n\t\t} else {\n\t\t\tcolor = d3.interpolateHsl(this.scheme[this.generatorIndex], this.scheme[this.generatorIndex + 1])(0.5);\n\t\t\tthis.generatorIndex++;\n\t\t}\n\t\tthis.scheme.push(color);\n\t\treturn color;\n\t};\n\n};\nRickshaw.namespace('Rickshaw.Graph.Ajax');\n\nRickshaw.Graph.Ajax = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\n\t\tthis.dataURL = args.dataURL;\n\n\t\tthis.onData = args.onData || function(d) { return d };\n\t\tthis.onComplete = args.onComplete || function() {};\n\t\tthis.onError = args.onError || function() {};\n\n\t\tthis.args = args; // pass through to Rickshaw.Graph\n\n\t\tthis.request();\n\t},\n\n\trequest: function() {\n\n\t\tjQuery.ajax( {\n\t\t\turl: this.dataURL,\n\t\t\tdataType: 'json',\n\t\t\tsuccess: this.success.bind(this),\n\t\t\terror: this.error.bind(this)\n\t\t} );\n\t},\n\n\terror: function() {\n\n\t\tconsole.log(\"error loading dataURL: \" + this.dataURL);\n\t\tthis.onError(this);\n\t},\n\n\tsuccess: function(data, status) {\n\n\t\tdata = this.onData(data);\n\t\tthis.args.series = this._splice({ data: data, series: this.args.series });\n\n\t\tthis.graph = this.graph || new Rickshaw.Graph(this.args);\n\t\tthis.graph.render();\n\n\t\tthis.onComplete(this);\n\t},\n\n\t_splice: function(args) {\n\n\t\tvar data = args.data;\n\t\tvar series = args.series;\n\n\t\tif (!args.series) return data;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tvar seriesKey = s.key || s.name;\n\t\t\tif (!seriesKey) throw \"series needs a key or a name\";\n\n\t\t\tdata.forEach( function(d) {\n\n\t\t\t\tvar dataKey = d.key || d.name;\n\t\t\t\tif (!dataKey) throw \"data needs a key or a name\";\n\n\t\t\t\tif (seriesKey == dataKey) {\n\t\t\t\t\tvar properties = ['color', 'name', 'data'];\n\t\t\t\t\tproperties.forEach( function(p) {\n\t\t\t\t\t\tif (d[p]) s[p] = d[p];\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn series;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Annotate');\n\nRickshaw.Graph.Annotate = function(args) {\n\n\tvar graph = this.graph = args.graph;\n\tthis.elements = { timeline: args.element };\n\t\n\tvar self = this;\n\n\tthis.data = {};\n\n\tthis.elements.timeline.classList.add('rickshaw_annotation_timeline');\n\n\tthis.add = function(time, content, end_time) {\n\t\tself.data[time] = self.data[time] || {'boxes': []};\n\t\tself.data[time].boxes.push({content: content, end: end_time});\n\t};\n\n\tthis.update = function() {\n\n\t\tRickshaw.keys(self.data).forEach( function(time) {\n\n\t\t\tvar annotation = self.data[time];\n\t\t\tvar left = self.graph.x(time);\n\n\t\t\tif (left < 0 || left > self.graph.x.range()[1]) {\n\t\t\t\tif (annotation.element) {\n\t\t\t\t\tannotation.line.classList.add('offscreen');\n\t\t\t\t\tannotation.element.style.display = 'none';\n\t\t\t\t}\n\n\t\t\t\tannotation.boxes.forEach( function(box) {\n\t\t\t\t\tif ( box.rangeElement ) box.rangeElement.classList.add('offscreen');\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!annotation.element) {\n\t\t\t\tvar element = annotation.element = document.createElement('div');\n\t\t\t\telement.classList.add('annotation');\n\t\t\t\tthis.elements.timeline.appendChild(element);\n\t\t\t\telement.addEventListener('click', function(e) {\n\t\t\t\t\telement.classList.toggle('active');\n\t\t\t\t\tannotation.line.classList.toggle('active');\n\t\t\t\t\tannotation.boxes.forEach( function(box) {\n\t\t\t\t\t\tif ( box.rangeElement ) box.rangeElement.classList.toggle('active');\n\t\t\t\t\t});\n\t\t\t\t}, false);\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tannotation.element.style.left = left + 'px';\n\t\t\tannotation.element.style.display = 'block';\n\n\t\t\tannotation.boxes.forEach( function(box) {\n\n\n\t\t\t\tvar element = box.element;\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = box.element = document.createElement('div');\n\t\t\t\t\telement.classList.add('content');\n\t\t\t\t\telement.innerHTML = box.content;\n\t\t\t\t\tannotation.element.appendChild(element);\n\n\t\t\t\t\tannotation.line = document.createElement('div');\n\t\t\t\t\tannotation.line.classList.add('annotation_line');\n\t\t\t\t\tself.graph.element.appendChild(annotation.line);\n\n\t\t\t\t\tif ( box.end ) {\n\t\t\t\t\t\tbox.rangeElement = document.createElement('div');\n\t\t\t\t\t\tbox.rangeElement.classList.add('annotation_range');\n\t\t\t\t\t\tself.graph.element.appendChild(box.rangeElement);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( box.end ) {\n\n\t\t\t\t\tvar annotationRangeStart = left;\n\t\t\t\t\tvar annotationRangeEnd   = Math.min( self.graph.x(box.end), self.graph.x.range()[1] );\n\n\t\t\t\t\t// annotation makes more sense at end\n\t\t\t\t\tif ( annotationRangeStart > annotationRangeEnd ) {\n\t\t\t\t\t\tannotationRangeEnd   = left;\n\t\t\t\t\t\tannotationRangeStart = Math.max( self.graph.x(box.end), self.graph.x.range()[0] );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar annotationRangeWidth = annotationRangeEnd - annotationRangeStart;\n\n\t\t\t\t\tbox.rangeElement.style.left  = annotationRangeStart + 'px';\n\t\t\t\t\tbox.rangeElement.style.width = annotationRangeWidth + 'px';\n\n\t\t\t\t\tbox.rangeElement.classList.remove('offscreen');\n\t\t\t\t}\n\n\t\t\t\tannotation.line.classList.remove('offscreen');\n\t\t\t\tannotation.line.style.left = left + 'px';\n\t\t\t} );\n\t\t}, this );\n\t};\n\n\tthis.graph.onUpdate( function() { self.update() } );\n};\nRickshaw.namespace('Rickshaw.Graph.Axis.Time');\n\nRickshaw.Graph.Axis.Time = function(args) {\n\n\tvar self = this;\n\n\tthis.graph = args.graph;\n\tthis.elements = [];\n\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\tthis.fixedTimeUnit = args.timeUnit;\n\n\tvar time = args.timeFixture || new Rickshaw.Fixtures.Time();\n\n\tthis.appropriateTimeUnit = function() {\n\n\t\tvar unit;\n\t\tvar units = time.units;\n\n\t\tvar domain = this.graph.x.domain();\n\t\tvar rangeSeconds = domain[1] - domain[0];\n\n\t\tunits.forEach( function(u) {\n\t\t\tif (Math.floor(rangeSeconds / u.seconds) >= 2) {\n\t\t\t\tunit = unit || u;\n\t\t\t}\n\t\t} );\n\n\t\treturn (unit || time.units[time.units.length - 1]);\n\t};\n\n\tthis.tickOffsets = function() {\n\n\t\tvar domain = this.graph.x.domain();\n\n\t\tvar unit = this.fixedTimeUnit || this.appropriateTimeUnit();\n\t\tvar count = Math.ceil((domain[1] - domain[0]) / unit.seconds);\n\n\t\tvar runningTick = domain[0];\n\n\t\tvar offsets = [];\n\n\t\tfor (var i = 0; i < count; i++) {\n\n\t\t\tvar tickValue = time.ceil(runningTick, unit);\n\t\t\trunningTick = tickValue + unit.seconds / 2;\n\n\t\t\toffsets.push( { value: tickValue, unit: unit } );\n\t\t}\n\n\t\treturn offsets;\n\t};\n\n\tthis.render = function() {\n\n\t\tthis.elements.forEach( function(e) {\n\t\t\te.parentNode.removeChild(e);\n\t\t} );\n\n\t\tthis.elements = [];\n\n\t\tvar offsets = this.tickOffsets();\n\n\t\toffsets.forEach( function(o) {\n\t\t\t\n\t\t\tif (self.graph.x(o.value) > self.graph.x.range()[1]) return;\n\t\n\t\t\tvar element = document.createElement('div');\n\t\t\telement.style.left = self.graph.x(o.value) + 'px';\n\t\t\telement.classList.add('x_tick');\n\t\t\telement.classList.add(self.ticksTreatment);\n\n\t\t\tvar title = document.createElement('div');\n\t\t\ttitle.classList.add('title');\n\t\t\ttitle.innerHTML = o.unit.formatter(new Date(o.value * 1000));\n\t\t\telement.appendChild(title);\n\n\t\t\tself.graph.element.appendChild(element);\n\t\t\tself.elements.push(element);\n\n\t\t} );\n\t};\n\n\tthis.graph.onUpdate( function() { self.render() } );\n};\n\nRickshaw.namespace('Rickshaw.Graph.Axis.X');\n\nRickshaw.Graph.Axis.X = function(args) {\n\n\tvar self = this;\n\tvar berthRate = 0.10;\n\n\tthis.initialize = function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.orientation = args.orientation || 'top';\n\n\t\tthis.pixelsPerTick = args.pixelsPerTick || 75;\n\t\tif (args.ticks) this.staticTicks = args.ticks;\n\t\tif (args.tickValues) this.tickValues = args.tickValues;\n\n\t\tthis.tickSize = args.tickSize || 4;\n\t\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\n\t\tif (args.element) {\n\n\t\t\tthis.element = args.element;\n\t\t\tthis._discoverSize(args.element, args);\n\n\t\t\tthis.vis = d3.select(args.element)\n\t\t\t\t.append(\"svg:svg\")\n\t\t\t\t.attr('height', this.height)\n\t\t\t\t.attr('width', this.width)\n\t\t\t\t.attr('class', 'rickshaw_graph x_axis_d3');\n\n\t\t\tthis.element = this.vis[0][0];\n\t\t\tthis.element.style.position = 'relative';\n\n\t\t\tthis.setSize({ width: args.width, height: args.height });\n\n\t\t} else {\n\t\t\tthis.vis = this.graph.vis;\n\t\t}\n\n\t\tthis.graph.onUpdate( function() { self.render() } );\n\t};\n\n\tthis.setSize = function(args) {\n\n\t\targs = args || {};\n\t\tif (!this.element) return;\n\n\t\tthis._discoverSize(this.element.parentNode, args);\n\n\t\tthis.vis\n\t\t\t.attr('height', this.height)\n\t\t\t.attr('width', this.width * (1 + berthRate));\n\n\t\tvar berth = Math.floor(this.width * berthRate / 2);\n\t\tthis.element.style.left = -1 * berth + 'px';\n\t};\n\n\tthis.render = function() {\n\n\t\tif (this._renderWidth !== undefined && this.graph.width !== this._renderWidth) this.setSize({ auto: true });\n\n\t\tvar axis = d3.svg.axis().scale(this.graph.x).orient(this.orientation);\n\t\taxis.tickFormat( args.tickFormat || function(x) { return x } );\n\t\tif (this.tickValues) axis.tickValues(this.tickValues);\n\n\t\tthis.ticks = this.staticTicks || Math.floor(this.graph.width / this.pixelsPerTick);\n\n\t\tvar berth = Math.floor(this.width * berthRate / 2) || 0;\n\t\tvar transform;\n\n\t\tif (this.orientation == 'top') {\n\t\t\tvar yOffset = this.height || this.graph.height;\n\t\t\ttransform = 'translate(' + berth + ',' + yOffset + ')';\n\t\t} else {\n\t\t\ttransform = 'translate(' + berth + ', 0)';\n\t\t}\n\n\t\tif (this.element) {\n\t\t\tthis.vis.selectAll('*').remove();\n\t\t}\n\n\t\tthis.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", [\"x_ticks_d3\", this.ticksTreatment].join(\" \"))\n\t\t\t.attr(\"transform\", transform)\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n\t\tvar gridSize = (this.orientation == 'bottom' ? 1 : -1) * this.graph.height;\n\n\t\tthis.graph.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", \"x_grid_d3\")\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))\n\t\t\t.selectAll('text')\n\t\t\t.each(function() { this.parentNode.setAttribute('data-x-value', this.textContent) });\n\n\t\tthis._renderHeight = this.graph.height;\n\t};\n\n\tthis._discoverSize = function(element, args) {\n\n\t\tif (typeof window !== 'undefined') {\n\n\t\t\tvar style = window.getComputedStyle(element, null);\n\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\n\t\t\tif (!args.auto) {\n\t\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\t\t\t}\n\t\t}\n\n\t\tthis.width = (args.width || elementWidth || this.graph.width) * (1 + berthRate);\n\t\tthis.height = args.height || elementHeight || 40;\n\t};\n\n\tthis.initialize(args);\n};\n\nRickshaw.namespace('Rickshaw.Graph.Axis.Y');\n\nRickshaw.Graph.Axis.Y = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.orientation = args.orientation || 'right';\n\n\t\tthis.pixelsPerTick = args.pixelsPerTick || 75;\n\t\tif (args.ticks) this.staticTicks = args.ticks;\n\t\tif (args.tickValues) this.tickValues = args.tickValues;\n\n\t\tthis.tickSize = args.tickSize || 4;\n\t\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\n\t\tthis.tickFormat = args.tickFormat || function(y) { return y };\n\n\t\tthis.berthRate = 0.10;\n\n\t\tif (args.element) {\n\n\t\t\tthis.element = args.element;\n\t\t\tthis.vis = d3.select(args.element)\n\t\t\t\t.append(\"svg:svg\")\n\t\t\t\t.attr('class', 'rickshaw_graph y_axis');\n\n\t\t\tthis.element = this.vis[0][0];\n\t\t\tthis.element.style.position = 'relative';\n\n\t\t\tthis.setSize({ width: args.width, height: args.height });\n\n\t\t} else {\n\t\t\tthis.vis = this.graph.vis;\n\t\t}\n\n\t\tvar self = this;\n\t\tthis.graph.onUpdate( function() { self.render() } );\n\t},\n\n\tsetSize: function(args) {\n\n\t\targs = args || {};\n\n\t\tif (!this.element) return;\n\n\t\tif (typeof window !== 'undefined') {\n\n\t\t\tvar style = window.getComputedStyle(this.element.parentNode, null);\n\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\n\t\t\tif (!args.auto) {\n\t\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\t\t\t}\n\t\t}\n\n\t\tthis.width = args.width || elementWidth || this.graph.width * this.berthRate;\n\t\tthis.height = args.height || elementHeight || this.graph.height;\n\n\t\tthis.vis\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height * (1 + this.berthRate));\n\n\t\tvar berth = this.height * this.berthRate;\n\n\t\tif (this.orientation == 'left') {\n\t\t\tthis.element.style.top = -1 * berth + 'px';\n\t\t}\n\t},\n\n\trender: function() {\n\n\t\tif (this._renderHeight !== undefined && this.graph.height !== this._renderHeight) this.setSize({ auto: true });\n\n\t\tthis.ticks = this.staticTicks || Math.floor(this.graph.height / this.pixelsPerTick);\n\n\t\tvar axis = this._drawAxis(this.graph.y);\n\n\t\tthis._drawGrid(axis);\n\n\t\tthis._renderHeight = this.graph.height;\n\t},\n\n\t_drawAxis: function(scale) {\n\t\tvar axis = d3.svg.axis().scale(scale).orient(this.orientation);\n\t\taxis.tickFormat(this.tickFormat);\n\t\tif (this.tickValues) axis.tickValues(this.tickValues);\n\n\t\tif (this.orientation == 'left') {\n\t\t\tvar berth = this.height * this.berthRate;\n\t\t\tvar transform = 'translate(' + this.width + ', ' + berth + ')';\n\t\t}\n\n\t\tif (this.element) {\n\t\t\tthis.vis.selectAll('*').remove();\n\t\t}\n\n\t\tthis.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", [\"y_ticks\", this.ticksTreatment].join(\" \"))\n\t\t\t.attr(\"transform\", transform)\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n\t\treturn axis;\n\t},\n\n\t_drawGrid: function(axis) {\n\t\tvar gridSize = (this.orientation == 'right' ? 1 : -1) * this.graph.width;\n\n\t\tthis.graph.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", \"y_grid\")\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))\n\t\t\t.selectAll('text')\n\t\t\t.each(function() { this.parentNode.setAttribute('data-y-value', this.textContent) });\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Axis.Y.Scaled');\n\nRickshaw.Graph.Axis.Y.Scaled = Rickshaw.Class.create( Rickshaw.Graph.Axis.Y, {\n\n  initialize: function($super, args) {\n\n    if (typeof(args.scale) === 'undefined') {\n      throw new Error('Scaled requires scale');\n    }\n\n    this.scale = args.scale;\n\n    if (typeof(args.grid) === 'undefined') {\n      this.grid = true;\n    } else {\n      this.grid = args.grid;\n    }\n\n    $super(args);\n\n  },\n\n  _drawAxis: function($super, scale) {\n    // Adjust scale's domain to compensate for adjustments to the\n    // renderer's domain (e.g. padding).\n    var domain = this.scale.domain();\n    var renderDomain = this.graph.renderer.domain().y;\n\n    var extents = [\n      Math.min.apply(Math, domain),\n      Math.max.apply(Math, domain)];\n\n    // A mapping from the ideal render domain [0, 1] to the extent\n    // of the original scale's domain.  This is used to calculate\n    // the extents of the adjusted domain.\n    var extentMap = d3.scale.linear().domain([0, 1]).range(extents);\n\n    var adjExtents = [\n      extentMap(renderDomain[0]),\n      extentMap(renderDomain[1])];\n\n    // A mapping from the original domain to the adjusted domain.\n    var adjustment = d3.scale.linear().domain(extents).range(adjExtents);\n\n    // Make a copy of the custom scale, apply the adjusted domain, and\n    // copy the range to match the graph's scale.\n    var adjustedScale = this.scale.copy()\n      .domain(domain.map(adjustment))\n      .range(scale.range());\n\n    return $super(adjustedScale);\n  },\n\n  _drawGrid: function($super, axis) {\n    if (this.grid) {\n      // only draw the axis if the grid option is true\n      $super(axis);\n    }\n  }\n} );\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Highlight');\n\nRickshaw.Graph.Behavior.Series.Highlight = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tvar colorSafe = {};\n\tvar activeLine = null;\n\n\tvar disabledColor = args.disabledColor || function(seriesColor) {\n\t\treturn d3.interpolateRgb(seriesColor, d3.rgb('#d8d8d8'))(0.8).toString();\n\t};\n\n\tthis.addHighlightEvents = function (l) {\n\n\t\tl.element.addEventListener( 'mouseover', function(e) {\n\n\t\t\tif (activeLine) return;\n\t\t\telse activeLine = l;\n\n\t\t\tself.legend.lines.forEach( function(line) {\n\n\t\t\t\tif (l === line) {\n\n\t\t\t\t\t// if we're not in a stacked renderer bring active line to the top\n\t\t\t\t\tif (self.graph.renderer.unstack && (line.series.renderer ? line.series.renderer.unstack : true)) {\n\n\t\t\t\t\t\tvar seriesIndex = self.graph.series.indexOf(line.series);\n\t\t\t\t\t\tline.originalIndex = seriesIndex;\n\n\t\t\t\t\t\tvar series = self.graph.series.splice(seriesIndex, 1)[0];\n\t\t\t\t\t\tself.graph.series.push(series);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcolorSafe[line.series.name] = colorSafe[line.series.name] || line.series.color;\n\t\t\t\tline.series.color = disabledColor(line.series.color);\n\n\t\t\t} );\n\n\t\t\tself.graph.update();\n\n\t\t}, false );\n\n\t\tl.element.addEventListener( 'mouseout', function(e) {\n\n\t\t\tif (!activeLine) return;\n\t\t\telse activeLine = null;\n\n\t\t\tself.legend.lines.forEach( function(line) {\n\n\t\t\t\t// return reordered series to its original place\n\t\t\t\tif (l === line && line.hasOwnProperty('originalIndex')) {\n\n\t\t\t\t\tvar series = self.graph.series.pop();\n\t\t\t\t\tself.graph.series.splice(line.originalIndex, 0, series);\n\t\t\t\t\tdelete line.originalIndex;\n\t\t\t\t}\n\n\t\t\t\tif (colorSafe[line.series.name]) {\n\t\t\t\t\tline.series.color = colorSafe[line.series.name];\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tself.graph.update();\n\n\t\t}, false );\n\t};\n\n\tif (this.legend) {\n\t\tthis.legend.lines.forEach( function(l) {\n\t\t\tself.addHighlightEvents(l);\n\t\t} );\n\t}\n\n};\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Order');\n\nRickshaw.Graph.Behavior.Series.Order = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tif (typeof __webpack_provided_window_dot_jQuery == 'undefined') {\n\t\tthrow \"couldn't find jQuery at window.jQuery\";\n\t}\n\n\tif (typeof __webpack_provided_window_dot_jQuery.ui == 'undefined') {\n\t\tthrow \"couldn't find jQuery UI at window.jQuery.ui\";\n\t}\n\n\tjQuery(function() {\n\t\tjQuery(self.legend.list).sortable( {\n\t\t\tcontainment: 'parent',\n\t\t\ttolerance: 'pointer',\n\t\t\tupdate: function( event, ui ) {\n\t\t\t\tvar series = [];\n\t\t\t\tjQuery(self.legend.list).find('li').each( function(index, item) {\n\t\t\t\t\tif (!item.series) return;\n\t\t\t\t\tseries.push(item.series);\n\t\t\t\t} );\n\n\t\t\t\tfor (var i = self.graph.series.length - 1; i >= 0; i--) {\n\t\t\t\t\tself.graph.series[i] = series.shift();\n\t\t\t\t}\n\n\t\t\t\tself.graph.update();\n\t\t\t}\n\t\t} );\n\t\tjQuery(self.legend.list).disableSelection();\n\t});\n\n\t//hack to make jquery-ui sortable behave\n\tthis.graph.onUpdate( function() { \n\t\tvar h = window.getComputedStyle(self.legend.element).height;\n\t\tself.legend.element.style.height = h;\n\t} );\n};\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Toggle');\n\nRickshaw.Graph.Behavior.Series.Toggle = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tthis.addAnchor = function(line) {\n\n\t\tvar anchor = document.createElement('a');\n\t\tanchor.innerHTML = '&#10004;';\n\t\tanchor.classList.add('action');\n\t\tline.element.insertBefore(anchor, line.element.firstChild);\n\n\t\tanchor.onclick = function(e) {\n\t\t\tif (line.series.disabled) {\n\t\t\t\tline.series.enable();\n\t\t\t\tline.element.classList.remove('disabled');\n\t\t\t} else { \n\t\t\t\tif (this.graph.series.filter(function(s) { return !s.disabled }).length <= 1) return;\n\t\t\t\tline.series.disable();\n\t\t\t\tline.element.classList.add('disabled');\n\t\t\t}\n\n\t\t\tself.graph.update();\n\n\t\t}.bind(this);\n\t\t\n                var label = line.element.getElementsByTagName('span')[0];\n                label.onclick = function(e){\n\n                        var disableAllOtherLines = line.series.disabled;\n                        if ( ! disableAllOtherLines ) {\n                                for ( var i = 0; i < self.legend.lines.length; i++ ) {\n                                        var l = self.legend.lines[i];\n                                        if ( line.series === l.series ) {\n                                                // noop\n                                        } else if ( l.series.disabled ) {\n                                                // noop\n                                        } else {\n                                                disableAllOtherLines = true;\n                                                break;\n                                        }\n                                }\n                        }\n\n                        // show all or none\n                        if ( disableAllOtherLines ) {\n\n                                // these must happen first or else we try ( and probably fail ) to make a no line graph\n                                line.series.enable();\n                                line.element.classList.remove('disabled');\n\n                                self.legend.lines.forEach(function(l){\n                                        if ( line.series === l.series ) {\n                                                // noop\n                                        } else {\n                                                l.series.disable();\n                                                l.element.classList.add('disabled');\n                                        }\n                                });\n\n                        } else {\n\n                                self.legend.lines.forEach(function(l){\n                                        l.series.enable();\n                                        l.element.classList.remove('disabled');\n                                });\n\n                        }\n\n                        self.graph.update();\n\n                };\n\n\t};\n\n\tif (this.legend) {\n\n\t\tvar $ = jQuery;\n\t\tif (typeof $ != 'undefined' && $(this.legend.list).sortable) {\n\n\t\t\t$(this.legend.list).sortable( {\n\t\t\t\tstart: function(event, ui) {\n\t\t\t\t\tui.item.bind('no.onclick',\n\t\t\t\t\t\tfunction(event) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstop: function(event, ui) {\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tui.item.unbind('no.onclick');\n\t\t\t\t\t}, 250);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.legend.lines.forEach( function(l) {\n\t\t\tself.addAnchor(l);\n\t\t} );\n\t}\n\n\tthis._addBehavior = function() {\n\n\t\tthis.graph.series.forEach( function(s) {\n\t\t\t\n\t\t\ts.disable = function() {\n\n\t\t\t\tif (self.graph.series.length <= 1) {\n\t\t\t\t\tthrow('only one series left');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ts.disabled = true;\n\t\t\t};\n\n\t\t\ts.enable = function() {\n\t\t\t\ts.disabled = false;\n\t\t\t};\n\t\t} );\n\t};\n\tthis._addBehavior();\n\n\tthis.updateBehaviour = function () { this._addBehavior() };\n\n};\nRickshaw.namespace('Rickshaw.Graph.HoverDetail');\n\nRickshaw.Graph.HoverDetail = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tvar graph = this.graph = args.graph;\n\n\t\tthis.xFormatter = args.xFormatter || function(x) {\n\t\t\treturn new Date( x * 1000 ).toUTCString();\n\t\t};\n\n\t\tthis.yFormatter = args.yFormatter || function(y) {\n\t\t\treturn y === null ? y : y.toFixed(2);\n\t\t};\n\n\t\tvar element = this.element = document.createElement('div');\n\t\telement.className = 'detail';\n\n\t\tthis.visible = true;\n\t\tgraph.element.appendChild(element);\n\n\t\tthis.lastEvent = null;\n\t\tthis._addListeners();\n\n\t\tthis.onShow = args.onShow;\n\t\tthis.onHide = args.onHide;\n\t\tthis.onRender = args.onRender;\n\n\t\tthis.formatter = args.formatter || this.formatter;\n\n\t},\n\n\tformatter: function(series, x, y, formattedX, formattedY, d) {\n\t\treturn series.name + ':&nbsp;' + formattedY;\n\t},\n\n\tupdate: function(e) {\n\n\t\te = e || this.lastEvent;\n\t\tif (!e) return;\n\t\tthis.lastEvent = e;\n\n\t\tif (!e.target.nodeName.match(/^(path|svg|rect|circle)$/)) return;\n\n\t\tvar graph = this.graph;\n\n\t\tvar eventX = e.offsetX || e.layerX;\n\t\tvar eventY = e.offsetY || e.layerY;\n\n\t\tvar j = 0;\n\t\tvar points = [];\n\t\tvar nearestPoint;\n\n\t\tthis.graph.series.active().forEach( function(series) {\n\n\t\t\tvar data = this.graph.stackedData[j++];\n\n\t\t\tif (!data.length)\n\t\t\t\treturn;\n\n\t\t\tvar domainX = graph.x.invert(eventX);\n\n\t\t\tvar domainIndexScale = d3.scale.linear()\n\t\t\t\t.domain([data[0].x, data.slice(-1)[0].x])\n\t\t\t\t.range([0, data.length - 1]);\n\n\t\t\tvar approximateIndex = Math.round(domainIndexScale(domainX));\n\t\t\tif (approximateIndex == data.length - 1) approximateIndex--;\n\n\t\t\tvar dataIndex = Math.min(approximateIndex || 0, data.length - 1);\n\n\t\t\tfor (var i = approximateIndex; i < data.length - 1;) {\n\n\t\t\t\tif (!data[i] || !data[i + 1]) break;\n\n\t\t\t\tif (data[i].x <= domainX && data[i + 1].x > domainX) {\n\t\t\t\t\tdataIndex = Math.abs(domainX - data[i].x) < Math.abs(domainX - data[i + 1].x) ? i : i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (data[i + 1].x <= domainX) { i++ } else { i-- }\n\t\t\t}\n\n\t\t\tif (dataIndex < 0) dataIndex = 0;\n\t\t\tvar value = data[dataIndex];\n\n\t\t\tvar distance = Math.sqrt(\n\t\t\t\tMath.pow(Math.abs(graph.x(value.x) - eventX), 2) +\n\t\t\t\tMath.pow(Math.abs(graph.y(value.y + value.y0) - eventY), 2)\n\t\t\t);\n\n\t\t\tvar xFormatter = series.xFormatter || this.xFormatter;\n\t\t\tvar yFormatter = series.yFormatter || this.yFormatter;\n\n\t\t\tvar point = {\n\t\t\t\tformattedXValue: xFormatter(value.x),\n\t\t\t\tformattedYValue: yFormatter(series.scale ? series.scale.invert(value.y) : value.y),\n\t\t\t\tseries: series,\n\t\t\t\tvalue: value,\n\t\t\t\tdistance: distance,\n\t\t\t\torder: j,\n\t\t\t\tname: series.name\n\t\t\t};\n\n\t\t\tif (!nearestPoint || distance < nearestPoint.distance) {\n\t\t\t\tnearestPoint = point;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\n\t\t}, this );\n\n\t\tif (!nearestPoint)\n\t\t\treturn;\n\n\t\tnearestPoint.active = true;\n\n\t\tvar domainX = nearestPoint.value.x;\n\t\tvar formattedXValue = nearestPoint.formattedXValue;\n\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.style.left = graph.x(domainX) + 'px';\n\n\t\tthis.visible && this.render( {\n\t\t\tpoints: points,\n\t\t\tdetail: points, // for backwards compatibility\n\t\t\tmouseX: eventX,\n\t\t\tmouseY: eventY,\n\t\t\tformattedXValue: formattedXValue,\n\t\t\tdomainX: domainX\n\t\t} );\n\t},\n\n\thide: function() {\n\t\tthis.visible = false;\n\t\tthis.element.classList.add('inactive');\n\n\t\tif (typeof this.onHide == 'function') {\n\t\t\tthis.onHide();\n\t\t}\n\t},\n\n\tshow: function() {\n\t\tthis.visible = true;\n\t\tthis.element.classList.remove('inactive');\n\n\t\tif (typeof this.onShow == 'function') {\n\t\t\tthis.onShow();\n\t\t}\n\t},\n\n\trender: function(args) {\n\n\t\tvar graph = this.graph;\n\t\tvar points = args.points;\n\t\tvar point = points.filter( function(p) { return p.active } ).shift();\n\n\t\tif (point.value.y === null) return;\n\n\t\tvar formattedXValue = point.formattedXValue;\n\t\tvar formattedYValue = point.formattedYValue;\n\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.style.left = graph.x(point.value.x) + 'px';\n\n\t\tvar xLabel = document.createElement('div');\n\n\t\txLabel.className = 'x_label';\n\t\txLabel.innerHTML = formattedXValue;\n\t\tthis.element.appendChild(xLabel);\n\n\t\tvar item = document.createElement('div');\n\n\t\titem.className = 'item';\n\n\t\t// invert the scale if this series displays using a scale\n\t\tvar series = point.series;\n\t\tvar actualY = series.scale ? series.scale.invert(point.value.y) : point.value.y;\n\n\t\titem.innerHTML = this.formatter(series, point.value.x, actualY, formattedXValue, formattedYValue, point);\n\t\titem.style.top = this.graph.y(point.value.y0 + point.value.y) + 'px';\n\n\t\tthis.element.appendChild(item);\n\n\t\tvar dot = document.createElement('div');\n\n\t\tdot.className = 'dot';\n\t\tdot.style.top = item.style.top;\n\t\tdot.style.borderColor = series.color;\n\n\t\tthis.element.appendChild(dot);\n\n\t\tif (point.active) {\n\t\t\titem.classList.add('active');\n\t\t\tdot.classList.add('active');\n\t\t}\n\n\t\t// Assume left alignment until the element has been displayed and\n\t\t// bounding box calculations are possible.\n\t\tvar alignables = [xLabel, item];\n\t\talignables.forEach(function(el) {\n\t\t\tel.classList.add('left');\n\t\t});\n\n\t\tthis.show();\n\n\t\t// If left-alignment results in any error, try right-alignment.\n\t\tvar leftAlignError = this._calcLayoutError(alignables);\n\t\tif (leftAlignError > 0) {\n\t\t\talignables.forEach(function(el) {\n\t\t\t\tel.classList.remove('left');\n\t\t\t\tel.classList.add('right');\n\t\t\t});\n\n\t\t\t// If right-alignment is worse than left alignment, switch back.\n\t\t\tvar rightAlignError = this._calcLayoutError(alignables);\n\t\t\tif (rightAlignError > leftAlignError) {\n\t\t\t\talignables.forEach(function(el) {\n\t\t\t\t\tel.classList.remove('right');\n\t\t\t\t\tel.classList.add('left');\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (typeof this.onRender == 'function') {\n\t\t\tthis.onRender(args);\n\t\t}\n\t},\n\n\t_calcLayoutError: function(alignables) {\n\t\t// Layout error is calculated as the number of linear pixels by which\n\t\t// an alignable extends past the left or right edge of the parent.\n\t\tvar parentRect = this.element.parentNode.getBoundingClientRect();\n\n\t\tvar error = 0;\n\t\tvar alignRight = alignables.forEach(function(el) {\n\t\t\tvar rect = el.getBoundingClientRect();\n\t\t\tif (!rect.width) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (rect.right > parentRect.right) {\n\t\t\t\terror += rect.right - parentRect.right;\n\t\t\t}\n\n\t\t\tif (rect.left < parentRect.left) {\n\t\t\t\terror += parentRect.left - rect.left;\n\t\t\t}\n\t\t});\n\t\treturn error;\n\t},\n\n\t_addListeners: function() {\n\n\t\tthis.graph.element.addEventListener(\n\t\t\t'mousemove',\n\t\t\tfunction(e) {\n\t\t\t\tthis.visible = true;\n\t\t\t\tthis.update(e);\n\t\t\t}.bind(this),\n\t\t\tfalse\n\t\t);\n\n\t\tthis.graph.onUpdate( function() { this.update() }.bind(this) );\n\n\t\tthis.graph.element.addEventListener(\n\t\t\t'mouseout',\n\t\t\tfunction(e) {\n\t\t\t\tif (e.relatedTarget && !(e.relatedTarget.compareDocumentPosition(this.graph.element) & Node.DOCUMENT_POSITION_CONTAINS)) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t\tfalse\n\t\t);\n\t}\n});\nRickshaw.namespace('Rickshaw.Graph.JSONP');\n\nRickshaw.Graph.JSONP = Rickshaw.Class.create( Rickshaw.Graph.Ajax, {\n\n\trequest: function() {\n\n\t\tjQuery.ajax( {\n\t\t\turl: this.dataURL,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: this.success.bind(this),\n\t\t\terror: this.error.bind(this)\n\t\t} );\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Legend');\n\nRickshaw.Graph.Legend = Rickshaw.Class.create( {\n\n\tclassName: 'rickshaw_legend',\n\n\tinitialize: function(args) {\n\t\tthis.element = args.element;\n\t\tthis.graph = args.graph;\n\t\tthis.naturalOrder = args.naturalOrder;\n\n\t\tthis.element.classList.add(this.className);\n\n\t\tthis.list = document.createElement('ul');\n\t\tthis.element.appendChild(this.list);\n\n\t\tthis.render();\n\n\t\t// we could bind this.render.bind(this) here\n\t\t// but triggering the re-render would lose the added\n\t\t// behavior of the series toggle\n\t\tthis.graph.onUpdate( function() {} );\n\t},\n\n\trender: function() {\n\t\tvar self = this;\n\n\t\twhile ( this.list.firstChild ) {\n\t\t\tthis.list.removeChild( this.list.firstChild );\n\t\t}\n\t\tthis.lines = [];\n\n\t\tvar series = this.graph.series\n\t\t\t.map( function(s) { return s } );\n\n\t\tif (!this.naturalOrder) {\n\t\t\tseries = series.reverse();\n\t\t}\n\n\t\tseries.forEach( function(s) {\n\t\t\tself.addLine(s);\n\t\t} );\n\n\n\t},\n\n\taddLine: function (series) {\n\t\tvar line = document.createElement('li');\n\t\tline.className = 'line';\n\t\tif (series.disabled) {\n\t\t\tline.className += ' disabled';\n\t\t}\n\t\tif (series.className) {\n\t\t\td3.select(line).classed(series.className, true);\n\t\t}\n\t\tvar swatch = document.createElement('div');\n\t\tswatch.className = 'swatch';\n\t\tswatch.style.backgroundColor = series.color;\n\n\t\tline.appendChild(swatch);\n\n\t\tvar label = document.createElement('span');\n\t\tlabel.className = 'label';\n\t\tlabel.innerHTML = series.name;\n\n\t\tline.appendChild(label);\n\t\tthis.list.appendChild(line);\n\n\t\tline.series = series;\n\n\t\tif (series.noLegend) {\n\t\t\tline.style.display = 'none';\n\t\t}\n\n\t\tvar _line = { element: line, series: series };\n\t\tif (this.shelving) {\n\t\t\tthis.shelving.addAnchor(_line);\n\t\t\tthis.shelving.updateBehaviour();\n\t\t}\n\t\tif (this.highlighter) {\n\t\t\tthis.highlighter.addHighlightEvents(_line);\n\t\t}\n\t\tthis.lines.push(_line);\n\t\treturn line;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.RangeSlider');\n\nRickshaw.Graph.RangeSlider = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tvar element = this.element = args.element;\n\t\tvar graph = this.graph = args.graph;\n\n\t\tthis.slideCallbacks = [];\n\n\t\tthis.build();\n\n\t\tgraph.onUpdate( function() { this.update() }.bind(this) );\n\t},\n\n\tbuild: function() {\n\n\t\tvar element = this.element;\n\t\tvar graph = this.graph;\n\t\tvar $ = jQuery;\n\n\t\tvar domain = graph.dataDomain();\n\t\tvar self = this;\n\n\t\t$( function() {\n\t\t\t$(element).slider( {\n\t\t\t\trange: true,\n\t\t\t\tmin: domain[0],\n\t\t\t\tmax: domain[1],\n\t\t\t\tvalues: [ \n\t\t\t\t\tdomain[0],\n\t\t\t\t\tdomain[1]\n\t\t\t\t],\n\t\t\t\tslide: function( event, ui ) {\n\n\t\t\t\t\tif (ui.values[1] <= ui.values[0]) return;\n\n\t\t\t\t\tgraph.window.xMin = ui.values[0];\n\t\t\t\t\tgraph.window.xMax = ui.values[1];\n\t\t\t\t\tgraph.update();\n\n\t\t\t\t\tvar domain = graph.dataDomain();\n\n\t\t\t\t\t// if we're at an extreme, stick there\n\t\t\t\t\tif (domain[0] == ui.values[0]) {\n\t\t\t\t\t\tgraph.window.xMin = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (domain[1] == ui.values[1]) {\n\t\t\t\t\t\tgraph.window.xMax = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.slideCallbacks.forEach(function(callback) {\n\t\t\t\t\t\tcallback(graph, graph.window.xMin, graph.window.xMax);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t$(element)[0].style.width = graph.width + 'px';\n\n\t},\n\n\tupdate: function() {\n\n\t\tvar element = this.element;\n\t\tvar graph = this.graph;\n\t\tvar $ = jQuery;\n\n\t\tvar values = $(element).slider('option', 'values');\n\n\t\tvar domain = graph.dataDomain();\n\n\t\t$(element).slider('option', 'min', domain[0]);\n\t\t$(element).slider('option', 'max', domain[1]);\n\n\t\tif (graph.window.xMin == null) {\n\t\t\tvalues[0] = domain[0];\n\t\t}\n\t\tif (graph.window.xMax == null) {\n\t\t\tvalues[1] = domain[1];\n\t\t}\n\n\t\t$(element).slider('option', 'values', values);\n\t},\n\n\tonSlide: function(callback) {\n\t\tthis.slideCallbacks.push(callback);\n\t}\n});\n\nRickshaw.namespace('Rickshaw.Graph.RangeSlider.Preview');\n\nRickshaw.Graph.RangeSlider.Preview = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tif (!args.element) throw \"Rickshaw.Graph.RangeSlider.Preview needs a reference to an element\";\n\t\tif (!args.graph && !args.graphs) throw \"Rickshaw.Graph.RangeSlider.Preview needs a reference to an graph or an array of graphs\";\n\n\t\tthis.element = args.element;\n\t\tthis.element.style.position = 'relative';\n\n\t\tthis.graphs = args.graph ? [ args.graph ] : args.graphs;\n\n\t\tthis.defaults = {\n\t\t\theight: 75,\n\t\t\twidth: 400,\n\t\t\tgripperColor: undefined,\n\t\t\tframeTopThickness: 3,\n\t\t\tframeHandleThickness: 10,\n\t\t\tframeColor: \"#d4d4d4\",\n\t\t\tframeOpacity: 1,\n\t\t\tminimumFrameWidth: 0,\n\t\t\theightRatio: 0.2\n\t\t};\n\n\t\tthis.heightRatio = args.heightRatio || this.defaults.heightRatio;\n\t\tthis.defaults.gripperColor = d3.rgb(this.defaults.frameColor).darker().toString(); \n\n\t\tthis.configureCallbacks = [];\n\t\tthis.slideCallbacks = [];\n\n\t\tthis.previews = [];\n\n\t\tif (!args.width) this.widthFromGraph = true;\n\t\tif (!args.height) this.heightFromGraph = true;\n\n\t\tif (this.widthFromGraph || this.heightFromGraph) {\n\t\t\tthis.graphs[0].onConfigure(function () {\n\t\t\t\tthis.configure(args); this.render();\n\t\t\t}.bind(this));\n\t\t}\n\n\t\targs.width = args.width || this.graphs[0].width || this.defaults.width;\n\t\targs.height = args.height || this.graphs[0].height * this.heightRatio || this.defaults.height;\n\n\t\tthis.configure(args);\n\t\tthis.render();\n\t},\n\n\tonSlide: function(callback) {\n\t\tthis.slideCallbacks.push(callback);\n\t},\n\n\tonConfigure: function(callback) {\n\t\tthis.configureCallbacks.push(callback);\n\t},\n\n\tconfigure: function(args) {\n\n\t\tthis.config = this.config || {};\n\n\t\tthis.configureCallbacks.forEach(function(callback) {\n\t\t\tcallback(args);\n\t\t});\n\n\t\tRickshaw.keys(this.defaults).forEach(function(k) {\n\t\t\tthis.config[k] = k in args ? args[k]\n\t\t\t\t: k in this.config ? this.config[k]\n\t\t\t\t: this.defaults[k];\n\t\t}, this);\n\n\t\tif ('width' in args || 'height' in args) {\n\n\t\t\tif (this.widthFromGraph) {\n\t\t\t\tthis.config.width = this.graphs[0].width;\n\t\t\t}\n\n\t\t\tif (this.heightFromGraph) {\n\t\t\t\tthis.config.height = this.graphs[0].height * this.heightRatio;\n\t\t\t\tthis.previewHeight = this.config.height;\n\t\t\t}\n\n\t\t\tthis.previews.forEach(function(preview) {\n\n\t\t\t\tvar height = this.previewHeight / this.graphs.length - this.config.frameTopThickness * 2;\n\t\t\t\tvar width = this.config.width - this.config.frameHandleThickness * 2;\n\t\t\t\tpreview.setSize({ width: width, height: height });\n\n\t\t\t\tif (this.svg) {\n\t\t\t\t\tvar svgHeight = height + this.config.frameHandleThickness * 2;\n\t\t\t\t\tvar svgWidth = width + this.config.frameHandleThickness * 2;\n\t\t\t\t\tthis.svg.style(\"width\", svgWidth + \"px\");\n\t\t\t\t\tthis.svg.style(\"height\", svgHeight + \"px\");\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\t},\n\n\trender: function() {\n\n\t\tvar self = this;\n\n\t\tthis.svg = d3.select(this.element)\n\t\t\t.selectAll(\"svg.rickshaw_range_slider_preview\")\n\t\t\t.data([null]);\n\n\t\tthis.previewHeight = this.config.height - (this.config.frameTopThickness * 2);\n\t\tthis.previewWidth = this.config.width - (this.config.frameHandleThickness * 2);\n\n\t\tthis.currentFrame = [0, this.previewWidth];\n\n\t\tvar buildGraph = function(parent, index) {\n\n\t\t\tvar graphArgs = Rickshaw.extend({}, parent.config);\n\t\t\tvar height = self.previewHeight / self.graphs.length;\n\t\t\tvar renderer = parent.renderer.name;\n\n\t\t\tRickshaw.extend(graphArgs, {\n\t\t\t\telement: this.appendChild(document.createElement(\"div\")),\n\t\t\t\theight: height,\n\t\t\t\twidth: self.previewWidth,\n\t\t\t\tseries: parent.series,\n\t\t\t\trenderer: renderer\n\t\t\t});\n\n\t\t\tvar graph = new Rickshaw.Graph(graphArgs);\n\t\t\tself.previews.push(graph);\n\n\t\t\tparent.onUpdate(function() { graph.render(); self.render() });\n\n\t\t\tparent.onConfigure(function(args) { \n\t\t\t\t// don't propagate height\n\t\t\t\tdelete args.height;\n\t\t\t\targs.width = args.width - self.config.frameHandleThickness * 2;\n\t\t\t\tgraph.configure(args);\n\t\t\t\tgraph.render();\n\t\t\t});\n\n\t\t\tgraph.render();\n\t\t};\n\n\t\tvar graphContainer = d3.select(this.element)\n\t\t\t.selectAll(\"div.rickshaw_range_slider_preview_container\")\n\t\t\t.data(this.graphs);\n\n\t\tvar translateCommand = \"translate(\" +\n\t\t\tthis.config.frameHandleThickness + \"px, \" +\n\t\t\tthis.config.frameTopThickness + \"px)\";\n\n\t\tgraphContainer.enter()\n\t\t\t.append(\"div\")\n\t\t\t.classed(\"rickshaw_range_slider_preview_container\", true)\n\t\t\t.style(\"-webkit-transform\", translateCommand)\n\t\t\t.style(\"-moz-transform\", translateCommand)\n\t\t\t.style(\"-ms-transform\", translateCommand)\n\t\t\t.style(\"transform\", translateCommand)\n\t\t\t.each(buildGraph);\n\n\t\tgraphContainer.exit()\n\t\t\t.remove();\n\n\t\t// Use the first graph as the \"master\" for the frame state\n\t\tvar masterGraph = this.graphs[0];\n\n\t\tvar domainScale = d3.scale.linear()\n\t\t\t.domain([0, this.previewWidth])\n\t\t\t.range(masterGraph.dataDomain());\n\n\t\tvar currentWindow = [masterGraph.window.xMin, masterGraph.window.xMax];\n\n\t\tthis.currentFrame[0] = currentWindow[0] === undefined ? \n\t\t\t0 : Math.round(domainScale.invert(currentWindow[0]));\n\n\t\tif (this.currentFrame[0] < 0) this.currentFrame[0] = 0;\n\n\t\tthis.currentFrame[1] = currentWindow[1] === undefined ?\n\t\t\tthis.previewWidth : domainScale.invert(currentWindow[1]);\n\n\t\tif (this.currentFrame[1] - this.currentFrame[0] < self.config.minimumFrameWidth) {\n\t\t\tthis.currentFrame[1] = (this.currentFrame[0] || 0) + self.config.minimumFrameWidth;\n\t\t}\n\n\t\tthis.svg.enter()\n\t\t\t.append(\"svg\")\n\t\t\t.classed(\"rickshaw_range_slider_preview\", true)\n\t\t\t.style(\"height\", this.config.height + \"px\")\n\t\t\t.style(\"width\", this.config.width + \"px\")\n\t\t\t.style(\"position\", \"absolute\")\n\t\t\t.style(\"top\", 0);\n\n\t\tthis._renderDimming();\n\t\tthis._renderFrame();\n\t\tthis._renderGrippers();\n\t\tthis._renderHandles();\n\t\tthis._renderMiddle();\n\n\t\tthis._registerMouseEvents();\n\t},\n\n\t_renderDimming: function() {\n\n\t\tvar element = this.svg\n\t\t\t.selectAll(\"path.dimming\")\n\t\t\t.data([null]);\n\n\t\telement.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"fill\", \"white\")\n\t\t\t.attr(\"fill-opacity\", \"0.7\")\n\t\t\t.attr(\"fill-rule\", \"evenodd\")\n\t\t\t.classed(\"dimming\", true);\n\n\t\tvar path = \"\";\n\t\tpath += \" M \" + this.config.frameHandleThickness + \" \" + this.config.frameTopThickness;\n\t\tpath += \" h \" + this.previewWidth;\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" h \" + -this.previewWidth;\n\t\tpath += \" z \";\n\t\tpath += \" M \" + Math.max(this.currentFrame[0], this.config.frameHandleThickness) + \" \" + this.config.frameTopThickness;\n\t\tpath += \" H \" + Math.min(this.currentFrame[1] + this.config.frameHandleThickness * 2, this.previewWidth + this.config.frameHandleThickness);\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" H \" + Math.max(this.currentFrame[0], this.config.frameHandleThickness);\n\t\tpath += \" z\";\n\n\t\telement.attr(\"d\", path);\n\t},\n\n\t_renderFrame: function() {\n\n\t\tvar element = this.svg\n\t\t\t.selectAll(\"path.frame\")\n\t\t\t.data([null]);\n\n\t\telement.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", \"1px\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"fill\", this.config.frameColor)\n\t\t\t.attr(\"fill-opacity\", this.config.frameOpacity)\n\t\t\t.attr(\"fill-rule\", \"evenodd\")\n\t\t\t.classed(\"frame\", true);\n\n\t\tvar path = \"\";\n\t\tpath += \" M \" + this.currentFrame[0] + \" 0\";\n\t\tpath += \" H \" + (this.currentFrame[1] + (this.config.frameHandleThickness * 2));\n\t\tpath += \" V \" + this.config.height;\n\t\tpath += \" H \" + (this.currentFrame[0]);\n\t\tpath += \" z\";\n\t\tpath += \" M \" + (this.currentFrame[0] + this.config.frameHandleThickness) + \" \" + this.config.frameTopThickness;\n\t\tpath += \" H \" + (this.currentFrame[1] + this.config.frameHandleThickness);\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" H \" + (this.currentFrame[0] + this.config.frameHandleThickness);\n\t\tpath += \" z\";\n\n\t\telement.attr(\"d\", path);\n\t},\n\n\t_renderGrippers: function() {\n\n\t\tvar gripper = this.svg.selectAll(\"path.gripper\")\n\t\t\t.data([null]);\n\n\t\tgripper.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"stroke\", this.config.gripperColor)\n\t\t\t.classed(\"gripper\", true);\n\n\t\tvar path = \"\";\n\n\t\t[0.4, 0.6].forEach(function(spacing) {\n\t\t\tpath += \" M \" + Math.round((this.currentFrame[0] + (this.config.frameHandleThickness * spacing))) + \" \" + Math.round(this.config.height * 0.3);\n\t\t\tpath += \" V \" + Math.round(this.config.height * 0.7);\n\t\t\tpath += \" M \" + Math.round((this.currentFrame[1] + (this.config.frameHandleThickness * (1 + spacing)))) + \" \" + Math.round(this.config.height * 0.3);\n\t\t\tpath += \" V \" + Math.round(this.config.height * 0.7);\n\t\t}.bind(this));\n\n\t\tgripper.attr(\"d\", path);\n\t},\n\n\t_renderHandles: function() {\n\n\t\tvar leftHandle = this.svg.selectAll(\"rect.left_handle\")\n\t\t\t.data([null]);\n\n\t\tleftHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr('width', this.config.frameHandleThickness)\n\t\t\t.style(\"cursor\", \"ew-resize\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"left_handle\", true);\n\n\t\tleftHandle\n\t\t\t.attr('x', this.currentFrame[0])\n\t\t\t.attr('height', this.config.height);\n\n\t\tvar rightHandle = this.svg.selectAll(\"rect.right_handle\")\n\t\t\t.data([null]);\n\n\t\trightHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr('width', this.config.frameHandleThickness)\n\t\t\t.style(\"cursor\", \"ew-resize\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"right_handle\", true);\n\n\t\trightHandle\n\t\t\t.attr('x', this.currentFrame[1] + this.config.frameHandleThickness)\n\t\t\t.attr('height', this.config.height);\n\t},\n\n\t_renderMiddle: function() {\n\n\t\tvar middleHandle = this.svg.selectAll(\"rect.middle_handle\")\n\t\t\t.data([null]);\n\n\t\tmiddleHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.style(\"cursor\", \"move\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"middle_handle\", true);\n\n\t\tmiddleHandle\n\t\t\t.attr('width', Math.max(0, this.currentFrame[1] - this.currentFrame[0]))\n\t\t\t.attr('x', this.currentFrame[0] + this.config.frameHandleThickness)\n\t\t\t.attr('height', this.config.height);\n\t},\n\n\t_registerMouseEvents: function() {\n\n\t\tvar element = d3.select(this.element);\n\n\t\tvar drag = {\n\t\t\ttarget: null,\n\t\t\tstart: null,\n\t\t\tstop: null,\n\t\t\tleft: false,\n\t\t\tright: false,\n\t\t\trigid: false\n\t\t};\n\n\t\tvar self = this;\n\n\t\tfunction onMousemove(datum, index) {\n\n\t\t\tdrag.stop = self._getClientXFromEvent(d3.event, drag);\n\t\t\tvar distanceTraveled = drag.stop - drag.start;\n\t\t\tvar frameAfterDrag = self.frameBeforeDrag.slice(0);\n\t\t\tvar minimumFrameWidth = self.config.minimumFrameWidth;\n\n\t\t\tif (drag.rigid) {\n\t\t\t\tminimumFrameWidth = self.frameBeforeDrag[1] - self.frameBeforeDrag[0];\n\t\t\t}\n\t\t\tif (drag.left) {\n\t\t\t\tframeAfterDrag[0] = Math.max(frameAfterDrag[0] + distanceTraveled, 0);\n\t\t\t}\n\t\t\tif (drag.right) {\n\t\t\t\tframeAfterDrag[1] = Math.min(frameAfterDrag[1] + distanceTraveled, self.previewWidth);\n\t\t\t}\n\n\t\t\tvar currentFrameWidth = frameAfterDrag[1] - frameAfterDrag[0];\n\n\t\t\tif (currentFrameWidth <= minimumFrameWidth) {\n\n\t\t\t\tif (drag.left) {\n\t\t\t\t\tframeAfterDrag[0] = frameAfterDrag[1] - minimumFrameWidth;\n\t\t\t\t}\n\t\t\t\tif (drag.right) {\n\t\t\t\t\tframeAfterDrag[1] = frameAfterDrag[0] + minimumFrameWidth;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[0] <= 0) {\n\t\t\t\t\tframeAfterDrag[1] -= frameAfterDrag[0];\n\t\t\t\t\tframeAfterDrag[0] = 0;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[1] >= self.previewWidth) {\n\t\t\t\t\tframeAfterDrag[0] -= (frameAfterDrag[1] - self.previewWidth);\n\t\t\t\t\tframeAfterDrag[1] = self.previewWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.graphs.forEach(function(graph) {\n\n\t\t\t\tvar domainScale = d3.scale.linear()\n\t\t\t\t\t.interpolate(d3.interpolateNumber)\n\t\t\t\t\t.domain([0, self.previewWidth])\n\t\t\t\t\t.range(graph.dataDomain());\n\n\t\t\t\tvar windowAfterDrag = [\n\t\t\t\t\tdomainScale(frameAfterDrag[0]),\n\t\t\t\t\tdomainScale(frameAfterDrag[1])\n\t\t\t\t];\n\n\t\t\t\tself.slideCallbacks.forEach(function(callback) {\n\t\t\t\t\tcallback(graph, windowAfterDrag[0], windowAfterDrag[1]);\n\t\t\t\t});\n\n\t\t\t\tif (frameAfterDrag[0] === 0) {\n\t\t\t\t\twindowAfterDrag[0] = undefined;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[1] === self.previewWidth) {\n\t\t\t\t\twindowAfterDrag[1] = undefined;\n\t\t\t\t}\n\t\t\t\tgraph.window.xMin = windowAfterDrag[0];\n\t\t\t\tgraph.window.xMax = windowAfterDrag[1];\n\n\t\t\t\tgraph.update();\n\t\t\t});\n\t\t}\n\n\t\tfunction onMousedown() {\n\t\t\tdrag.target = d3.event.target;\n\t\t\tdrag.start = self._getClientXFromEvent(d3.event, drag);\n\t\t\tself.frameBeforeDrag = self.currentFrame.slice();\n\t\t\td3.event.preventDefault ? d3.event.preventDefault() : d3.event.returnValue = false;\n\t\t\td3.select(document).on(\"mousemove.rickshaw_range_slider_preview\", onMousemove);\n\t\t\td3.select(document).on(\"mouseup.rickshaw_range_slider_preview\", onMouseup);\n\t\t\td3.select(document).on(\"touchmove.rickshaw_range_slider_preview\", onMousemove);\n\t\t\td3.select(document).on(\"touchend.rickshaw_range_slider_preview\", onMouseup);\n\t\t\td3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\", onMouseup);\n\t\t}\n\n\t\tfunction onMousedownLeftHandle(datum, index) {\n\t\t\tdrag.left = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMousedownRightHandle(datum, index) {\n\t\t\tdrag.right = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMousedownMiddleHandle(datum, index) {\n\t\t\tdrag.left = true;\n\t\t\tdrag.right = true;\n\t\t\tdrag.rigid = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMouseup(datum, index) {\n\t\t\td3.select(document).on(\"mousemove.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"mouseup.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchmove.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchend.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\", null);\n\t\t\tdelete self.frameBeforeDrag;\n\t\t\tdrag.left = false;\n\t\t\tdrag.right = false;\n\t\t\tdrag.rigid = false;\n\t\t}\n\n\t\telement.select(\"rect.left_handle\").on(\"mousedown\", onMousedownLeftHandle);\n\t\telement.select(\"rect.right_handle\").on(\"mousedown\", onMousedownRightHandle);\n\t\telement.select(\"rect.middle_handle\").on(\"mousedown\", onMousedownMiddleHandle);\n\t\telement.select(\"rect.left_handle\").on(\"touchstart\", onMousedownLeftHandle);\n\t\telement.select(\"rect.right_handle\").on(\"touchstart\", onMousedownRightHandle);\n\t\telement.select(\"rect.middle_handle\").on(\"touchstart\", onMousedownMiddleHandle);\n\t},\n\n\t_getClientXFromEvent: function(event, drag) {\n\n\t\tswitch (event.type) {\n\t\t\tcase 'touchstart':\n\t\t\tcase 'touchmove':\n\t\t\t\tvar touchList = event.changedTouches;\n\t\t\t\tvar touch = null;\n\t\t\t\tfor (var touchIndex = 0; touchIndex < touchList.length; touchIndex++) {\n\t\t\t\t\tif (touchList[touchIndex].target === drag.target) {\n\t\t\t\t\t\ttouch = touchList[touchIndex];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn touch !== null ? touch.clientX : undefined;\n\n\t\t\tdefault:\n\t\t\t\treturn event.clientX;\n\t\t}\n\t}\n});\n\nRickshaw.namespace(\"Rickshaw.Graph.Renderer\");\n\nRickshaw.Graph.Renderer = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\t\tthis.graph = args.graph;\n\t\tthis.tension = args.tension || this.tension;\n\t\tthis.configure(args);\n\t},\n\n\tseriesPathFactory: function() {\n\t\t//implement in subclass\n\t},\n\n\tseriesStrokeFactory: function() {\n\t\t// implement in subclass\n\t},\n\n\tdefaults: function() {\n\t\treturn {\n\t\t\ttension: 0.8,\n\t\t\tstrokeWidth: 2,\n\t\t\tunstack: true,\n\t\t\tpadding: { top: 0.01, right: 0, bottom: 0.01, left: 0 },\n\t\t\tstroke: false,\n\t\t\tfill: false,\n\t\t\topacity: 1\n\t\t};\n\t},\n\n\tdomain: function(data) {\n\t\t// Requires that at least one series contains some data\n\t\tvar stackedData = data || this.graph.stackedData || this.graph.stackData();\n\n\t\tvar xMin = +Infinity;\n\t\tvar xMax = -Infinity;\n\n\t\tvar yMin = +Infinity;\n\t\tvar yMax = -Infinity;\n\n\t\tstackedData.forEach( function(series) {\n\n\t\t\tseries.forEach( function(d) {\n\n\t\t\t\tif (d.y == null) return;\n\n\t\t\t\tvar y = d.y + d.y0;\n\n\t\t\t\tif (y < yMin) yMin = y;\n\t\t\t\tif (y > yMax) yMax = y;\n\t\t\t} );\n\n\t\t\tif (!series.length) return;\n\n\t\t\tif (series[0].x < xMin) xMin = series[0].x;\n\t\t\tif (series[series.length - 1].x > xMax) xMax = series[series.length - 1].x;\n\t\t} );\n\n\t\txMin -= (xMax - xMin) * this.padding.left;\n\t\txMax += (xMax - xMin) * this.padding.right;\n\n\t\tyMin = this.graph.min === 'auto' ? yMin : this.graph.min || 0;\n\t\tyMax = this.graph.max === undefined ? yMax : this.graph.max;\n\n\t\tif (this.graph.min === 'auto' || yMin < 0) {\n\t\t\tyMin -= (yMax - yMin) * this.padding.bottom;\n\t\t}\n\n\t\tif (this.graph.max === undefined) {\n\t\t\tyMax += (yMax - yMin) * this.padding.top;\n\t\t}\n\n\t\treturn { x: [xMin, xMax], y: [yMin, yMax] };\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar pathNodes = vis.selectAll(\"path.path\")\n\t\t\t.data(data)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.classed('path', true)\n\t\t\t.attr(\"d\", this.seriesPathFactory());\n\n\t\tif (this.stroke) {\n                        var strokeNodes = vis.selectAll('path.stroke')\n                                .data(data)\n                                .enter().append(\"svg:path\")\n\t\t\t\t.classed('stroke', true)\n\t\t\t\t.attr(\"d\", this.seriesStrokeFactory());\n\t\t}\n\n\t\tvar i = 0;\n\t\tseries.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = pathNodes[0][i];\n\t\t\tif (this.stroke) series.stroke = strokeNodes[0][i];\n\t\t\tthis._styleSeries(series);\n\t\t\ti++;\n\t\t}, this );\n\n\t},\n\n\t_styleSeries: function(series) {\n\n\t\tvar fill = this.fill ? series.color : 'none';\n\t\tvar stroke = this.stroke ? series.color : 'none';\n\t\tvar strokeWidth = series.strokeWidth ? series.strokeWidth : this.strokeWidth;\n\t\tvar opacity = series.opacity ? series.opacity : this.opacity;\n\n\t\tseries.path.setAttribute('fill', fill);\n\t\tseries.path.setAttribute('stroke', stroke);\n\t\tseries.path.setAttribute('stroke-width', strokeWidth);\n\t\tseries.path.setAttribute('opacity', opacity);\n\n\t\tif (series.className) {\n\t\t\td3.select(series.path).classed(series.className, true);\n\t\t}\n\t\tif (series.className && this.stroke) {\n\t\t\td3.select(series.stroke).classed(series.className, true);\n\t\t}\n\t},\n\n\tconfigure: function(args) {\n\n\t\targs = args || {};\n\n\t\tRickshaw.keys(this.defaults()).forEach( function(key) {\n\n\t\t\tif (!args.hasOwnProperty(key)) {\n\t\t\t\tthis[key] = this[key] || this.graph[key] || this.defaults()[key];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof this.defaults()[key] == 'object') {\n\n\t\t\t\tRickshaw.keys(this.defaults()[key]).forEach( function(k) {\n\n\t\t\t\t\tthis[key][k] =\n\t\t\t\t\t\targs[key][k] !== undefined ? args[key][k] :\n\t\t\t\t\t\tthis[key][k] !== undefined ? this[key][k] :\n\t\t\t\t\t\tthis.defaults()[key][k];\n\t\t\t\t}, this );\n\n\t\t\t} else {\n\t\t\t\tthis[key] =\n\t\t\t\t\targs[key] !== undefined ? args[key] :\n\t\t\t\t\tthis[key] !== undefined ? this[key] :\n\t\t\t\t\tthis.graph[key] !== undefined ? this.graph[key] :\n\t\t\t\t\tthis.defaults()[key];\n\t\t\t}\n\n\t\t}, this );\n\t},\n\n\tsetStrokeWidth: function(strokeWidth) {\n\t\tif (strokeWidth !== undefined) {\n\t\t\tthis.strokeWidth = strokeWidth;\n\t\t}\n\t},\n\n\tsetTension: function(tension) {\n\t\tif (tension !== undefined) {\n\t\t\tthis.tension = tension;\n\t\t}\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Line');\n\nRickshaw.Graph.Renderer.Line = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'line',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Stack');\n\nRickshaw.Graph.Renderer.Stack = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'stack',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tfill: true,\n\t\t\tstroke: false,\n\t\t\tunstack: false\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.area()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y0( function(d) { return graph.y(d.y0) } )\n\t\t\t.y1( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Bar');\n\nRickshaw.Graph.Renderer.Bar = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'bar',\n\n\tdefaults: function($super) {\n\n\t\tvar defaults = Rickshaw.extend( $super(), {\n\t\t\tgapSize: 0.05,\n\t\t\tunstack: false,\n\t\t\topacity: 1.0\n\t\t} );\n\n\t\tdelete defaults.tension;\n\t\treturn defaults;\n\t},\n\n\tinitialize: function($super, args) {\n\t\targs = args || {};\n\t\tthis.gapSize = args.gapSize || this.gapSize;\n\t\t$super(args);\n\t},\n\n\tdomain: function($super) {\n\n\t\tvar domain = $super();\n\n\t\tvar frequentInterval = this._frequentInterval(this.graph.stackedData.slice(-1).shift());\n\t\tdomain.x[1] += Number(frequentInterval.magnitude);\n\n\t\treturn domain;\n\t},\n\n\tbarWidth: function(series) {\n\n\t\tvar frequentInterval = this._frequentInterval(series.stack);\n\t\tvar barWidth = this.graph.x.magnitude(frequentInterval.magnitude) * (1 - this.gapSize);\n\n\t\treturn barWidth;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\tvar barWidth = this.barWidth(series.active()[0]);\n\t\tvar barXOffset = 0;\n\n\t\tvar activeSeriesCount = series.filter( function(s) { return !s.disabled; } ).length;\n\t\tvar seriesBarWidth = this.unstack ? barWidth / activeSeriesCount : barWidth;\n\n\t\tvar transform = function(d) {\n\t\t\t// add a matrix transform for negative values\n\t\t\tvar matrix = [ 1, 0, 0, (d.y < 0 ? -1 : 1), 0, (d.y < 0 ? graph.y.magnitude(Math.abs(d.y)) * 2 : 0) ];\n\t\t\treturn \"matrix(\" + matrix.join(',') + \")\";\n\t\t};\n\n\t\tseries.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tvar barWidth = this.barWidth(series);\n\n\t\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:rect\")\n\t\t\t\t.attr(\"x\", function(d) { return graph.x(d.x) + barXOffset })\n\t\t\t\t.attr(\"y\", function(d) { return (graph.y(d.y0 + Math.abs(d.y))) * (d.y < 0 ? -1 : 1 ) })\n\t\t\t\t.attr(\"width\", seriesBarWidth)\n\t\t\t\t.attr(\"height\", function(d) { return graph.y.magnitude(Math.abs(d.y)) })\n\t\t\t\t.attr(\"opacity\", series.opacity)\n\t\t\t\t.attr(\"transform\", transform);\n\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tn.setAttribute('fill', series.color);\n\t\t\t} );\n\n\t\t\tif (this.unstack) barXOffset += seriesBarWidth;\n\n\t\t}, this );\n\t},\n\n\t_frequentInterval: function(data) {\n\n\t\tvar intervalCounts = {};\n\n\t\tfor (var i = 0; i < data.length - 1; i++) {\n\t\t\tvar interval = data[i + 1].x - data[i].x;\n\t\t\tintervalCounts[interval] = intervalCounts[interval] || 0;\n\t\t\tintervalCounts[interval]++;\n\t\t}\n\n\t\tvar frequentInterval = { count: 0, magnitude: 1 };\n\n\t\tRickshaw.keys(intervalCounts).forEach( function(i) {\n\t\t\tif (frequentInterval.count < intervalCounts[i]) {\n\t\t\t\tfrequentInterval = {\n\t\t\t\t\tcount: intervalCounts[i],\n\t\t\t\t\tmagnitude: i\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\n\t\treturn frequentInterval;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Area');\n\nRickshaw.Graph.Renderer.Area = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'area',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: false,\n\t\t\tfill: false,\n\t\t\tstroke: false\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.area()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y0( function(d) { return graph.y(d.y0) } )\n\t\t\t.y1( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\tseriesStrokeFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\t// insert or stacked areas so strokes lay on top of areas\n\t\tvar method = this.unstack ? 'append' : 'insert';\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t.data(data)\n\t\t\t.enter()[method](\"svg:g\", 'g');\n\n\t\tnodes.append(\"svg:path\")\n\t\t\t.attr(\"d\", this.seriesPathFactory())\n\t\t\t.attr(\"class\", 'area');\n\n\t\tif (this.stroke) {\n\t\t\tnodes.append(\"svg:path\")\n\t\t\t\t.attr(\"d\", this.seriesStrokeFactory())\n\t\t\t\t.attr(\"class\", 'line');\n\t\t}\n\n\t\tvar i = 0;\n\t\tseries.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = nodes[0][i++];\n\t\t\tthis._styleSeries(series);\n\t\t}, this );\n\t},\n\n\t_styleSeries: function(series) {\n\n\t\tif (!series.path) return;\n\n\t\td3.select(series.path).select('.area')\n\t\t\t.attr('fill', series.color);\n\n\t\tif (this.stroke) {\n\t\t\td3.select(series.path).select('.line')\n\t\t\t\t.attr('fill', 'none')\n\t\t\t\t.attr('stroke', series.stroke || d3.interpolateRgb(series.color, 'black')(0.125))\n\t\t\t\t.attr('stroke-width', this.strokeWidth);\n\t\t}\n\n\t\tif (series.className) {\n\t\t\tseries.path.setAttribute('class', series.className);\n\t\t}\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.ScatterPlot');\n\nRickshaw.Graph.Renderer.ScatterPlot = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'scatterplot',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: true,\n\t\t\tstroke: false,\n\t\t\tpadding:{ top: 0.01, right: 0.01, bottom: 0.01, left: 0.01 },\n\t\t\tdotSize: 4\n\t\t} );\n\t},\n\n\tinitialize: function($super, args) {\n\t\t$super(args);\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\n\t\tvar series = args.series || graph.series;\n\t\tvar vis = args.vis || graph.vis;\n\n\t\tvar dotSize = this.dotSize;\n\n\t\tvis.selectAll('*').remove();\n\n\t\tseries.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\t\t\tvar opacity = series.opacity ? series.opacity : 1;\n\n\t\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:circle\")\n\t\t\t\t\t.attr(\"cx\", function(d) { return graph.x(d.x) })\n\t\t\t\t\t.attr(\"cy\", function(d) { return graph.y(d.y) })\n\t\t\t\t\t.attr(\"r\", function(d) { return (\"r\" in d) ? d.r : dotSize})\n\t\t\t\t\t.attr(\"opacity\", function(d) { return (\"opacity\" in d) ? d.opacity : opacity});\n\t\t\tif (series.className) {\n\t\t\t\tnodes.classed(series.className, true);\n\t\t\t}\n\t\t\t\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tn.setAttribute('fill', series.color);\n\t\t\t} );\n\n\t\t}, this );\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Renderer.Multi');\n\nRickshaw.Graph.Renderer.Multi = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'multi',\n\n\tinitialize: function($super, args) {\n\n\t\t$super(args);\n\t},\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true \n\t\t} );\n\t},\n\n\tconfigure: function($super, args) {\n\n\t\targs = args || {};\n\t\tthis.config = args;\n\t\t$super(args);\n\t},\n\n\tdomain: function($super) {\n\n\t\tthis.graph.stackData();\n\n\t\tvar domains = [];\n\n\t\tvar groups = this._groups();\n\t\tthis._stack(groups);\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar data = group.series\n\t\t\t\t.filter( function(s) { return !s.disabled } )\n\t\t\t\t.map( function(s) { return s.stack });\n\n\t\t\tif (!data.length) return;\n\t\t\t\n\t\t\tvar domain = null;\n\t\t\tif (group.renderer && group.renderer.domain) {\n\t\t\t\tdomain = group.renderer.domain(data);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdomain = $super(data);\n\t\t\t}\n\t\t\tdomains.push(domain);\n\t\t});\n\n\t\tvar xMin = d3.min(domains.map( function(d) { return d.x[0] } ));\n\t\tvar xMax = d3.max(domains.map( function(d) { return d.x[1] } ));\n\t\tvar yMin = d3.min(domains.map( function(d) { return d.y[0] } ));\n\t\tvar yMax = d3.max(domains.map( function(d) { return d.y[1] } ));\n\n\t\treturn { x: [xMin, xMax], y: [yMin, yMax] };\n\t},\n\n\t_groups: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar renderGroups = {};\n\n\t\tgraph.series.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tif (!renderGroups[series.renderer]) {\n\n\t\t\t\tvar ns = \"http://www.w3.org/2000/svg\";\n\t\t\t\tvar vis = document.createElementNS(ns, 'g');\n\n\t\t\t\tgraph.vis[0][0].appendChild(vis);\n\n\t\t\t\tvar renderer = graph._renderers[series.renderer];\n\n\t\t\t\tvar config = {};\n\n\t\t\t\tvar defaults = [ this.defaults(), renderer.defaults(), this.config, this.graph ];\n\t\t\t\tdefaults.forEach(function(d) { Rickshaw.extend(config, d) });\n\n\t\t\t\trenderer.configure(config);\n\n\t\t\t\trenderGroups[series.renderer] = {\n\t\t\t\t\trenderer: renderer,\n\t\t\t\t\tseries: [],\n\t\t\t\t\tvis: d3.select(vis)\n\t\t\t\t};\n\t\t\t}\n\t\t\t\t\n\t\t\trenderGroups[series.renderer].series.push(series);\n\n\t\t}, this);\n\n\t\tvar groups = [];\n\n\t\tObject.keys(renderGroups).forEach( function(key) {\n\t\t\tvar group = renderGroups[key];\n\t\t\tgroups.push(group);\n\t\t});\n\n\t\treturn groups;\n\t},\n\n\t_stack: function(groups) {\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar series = group.series\n\t\t\t\t.filter( function(series) { return !series.disabled } );\n\n\t\t\tvar data = series\n\t\t\t\t.map( function(series) { return series.stack } );\n\n\t\t\tif (!group.renderer.unstack) {\n\n\t\t\t\tvar layout = d3.layout.stack();\n\t\t\t\tvar stackedData = Rickshaw.clone(layout(data));\n\n\t\t\t\tseries.forEach( function(series, index) {\n\t\t\t\t\tseries._stack = Rickshaw.clone(stackedData[index]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn groups;\n\n\t},\n\n\trender: function() {\n\n\t\tthis.graph.series.forEach( function(series) {\n\t\t\tif (!series.renderer) {\n\t\t\t\tthrow new Error(\"Each series needs a renderer for graph 'multi' renderer\");\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.vis.selectAll('*').remove();\n\n\t\tvar groups = this._groups();\n\t\tgroups = this._stack(groups);\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar series = group.series\n\t\t\t\t.filter( function(series) { return !series.disabled } );\n\n\t\t\tseries.active = function() { return series };\n\n\t\t\tgroup.renderer.render({ series: series, vis: group.vis });\n\t\t\tseries.forEach(function(s) { s.stack = s._stack || s.stack || s.data; });\n\t\t});\n\t}\n\n} );\nRickshaw.namespace('Rickshaw.Graph.Renderer.LinePlot');\n\nRickshaw.Graph.Renderer.LinePlot = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'lineplot',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true,\n\t\t\tpadding:{ top: 0.01, right: 0.01, bottom: 0.01, left: 0.01 },\n\t\t\tdotSize: 3,\n\t\t\tstrokeWidth: 2\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\n\t\tvar series = args.series || graph.series;\n\t\tvar vis = args.vis || graph.vis;\n\n\t\tvar dotSize = this.dotSize;\n\n\t\tvis.selectAll('*').remove();\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t.data(data)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.attr(\"d\", this.seriesPathFactory());\n\n\t\tvar i = 0;\n\t\tseries.forEach(function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = nodes[0][i++];\n\t\t\tthis._styleSeries(series);\n\t\t}, this);\n\n\t\tseries.forEach(function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tvar nodes = vis.selectAll(\"x\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:circle\")\n\t\t\t\t.attr(\"cx\", function(d) { return graph.x(d.x) })\n\t\t\t\t.attr(\"cy\", function(d) { return graph.y(d.y) })\n\t\t\t\t.attr(\"r\", function(d) { return (\"r\" in d) ? d.r : dotSize});\n\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tif (!n) return;\n\t\t\t\tn.setAttribute('data-color', series.color);\n\t\t\t\tn.setAttribute('fill', 'white');\n\t\t\t\tn.setAttribute('stroke', series.color);\n\t\t\t\tn.setAttribute('stroke-width', this.strokeWidth);\n\n\t\t\t}.bind(this));\n\n\t\t}, this);\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Smoother');\n\nRickshaw.Graph.Smoother = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.element = args.element;\n\t\tthis.aggregationScale = 1;\n\n\t\tthis.build();\n\n\t\tthis.graph.stackData.hooks.data.push( {\n\t\t\tname: 'smoother',\n\t\t\torderPosition: 50,\n\t\t\tf: this.transformer.bind(this)\n\t\t} );\n\t},\n\n\tbuild: function() {\n\n\t\tvar self = this;\n\t\tvar $ = jQuery;\n\n\t\tif (this.element) {\n\t\t\t$( function() {\n\t\t\t\t$(self.element).slider( {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 100,\n\t\t\t\t\tslide: function( event, ui ) {\n\t\t\t\t\t\tself.setScale(ui.value);\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t},\n\n\tsetScale: function(scale) {\n\n\t\tif (scale < 1) {\n\t\t\tthrow \"scale out of range: \" + scale;\n\t\t}\n\n\t\tthis.aggregationScale = scale;\n\t\tthis.graph.update();\n\t},\n\n\ttransformer: function(data) {\n\n\t\tif (this.aggregationScale == 1) return data;\n\n\t\tvar aggregatedData = [];\n\n\t\tdata.forEach( function(seriesData) {\n\n\t\t\tvar aggregatedSeriesData = [];\n\n\t\t\twhile (seriesData.length) {\n\n\t\t\t\tvar avgX = 0, avgY = 0;\n\t\t\t\tvar slice = seriesData.splice(0, this.aggregationScale);\n\n\t\t\t\tslice.forEach( function(d) {\n\t\t\t\t\tavgX += d.x / slice.length;\n\t\t\t\t\tavgY += d.y / slice.length;\n\t\t\t\t} );\n\n\t\t\t\taggregatedSeriesData.push( { x: avgX, y: avgY } );\n\t\t\t}\n\n\t\t\taggregatedData.push(aggregatedSeriesData);\n\n\t\t}.bind(this) );\n\n\t\treturn aggregatedData;\n\t}\n});\n\nRickshaw.namespace('Rickshaw.Graph.Socketio');\n\nRickshaw.Graph.Socketio = Rickshaw.Class.create( Rickshaw.Graph.Ajax, {\n\trequest: function() {\n\t\tvar socket = io.connect(this.dataURL);\n\t\tvar self = this;\n\t\tsocket.on('rickshaw', function (data) {\n\t\t\tself.success(data);\n\t\t});\n\t}\n} );\nRickshaw.namespace('Rickshaw.Series');\n\nRickshaw.Series = Rickshaw.Class.create( Array, {\n\n\tinitialize: function (data, palette, options) {\n\n\t\toptions = options || {};\n\n\t\tthis.palette = new Rickshaw.Color.Palette(palette);\n\n\t\tthis.timeBase = typeof(options.timeBase) === 'undefined' ? \n\t\t\tMath.floor(new Date().getTime() / 1000) : \n\t\t\toptions.timeBase;\n\n\t\tvar timeInterval = typeof(options.timeInterval) == 'undefined' ?\n\t\t\t1000 :\n\t\t\toptions.timeInterval;\n\n\t\tthis.setTimeInterval(timeInterval);\n\n\t\tif (data && (typeof(data) == \"object\") && Array.isArray(data)) {\n\t\t\tdata.forEach( function(item) { this.addItem(item) }, this );\n\t\t}\n\t},\n\n\taddItem: function(item) {\n\n\t\tif (typeof(item.name) === 'undefined') {\n\t\t\tthrow('addItem() needs a name');\n\t\t}\n\n\t\titem.color = (item.color || this.palette.color(item.name));\n\t\titem.data = (item.data || []);\n\n\t\t// backfill, if necessary\n\t\tif ((item.data.length === 0) && this.length && (this.getIndex() > 0)) {\n\t\t\tthis[0].data.forEach( function(plot) {\n\t\t\t\titem.data.push({ x: plot.x, y: 0 });\n\t\t\t} );\n\t\t} else if (item.data.length === 0) {\n\t\t\titem.data.push({ x: this.timeBase - (this.timeInterval || 0), y: 0 });\n\t\t} \n\n\t\tthis.push(item);\n\n\t\tif (this.legend) {\n\t\t\tthis.legend.addLine(this.itemByName(item.name));\n\t\t}\n\t},\n\n\taddData: function(data, x) {\n\n\t\tvar index = this.getIndex();\n\n\t\tRickshaw.keys(data).forEach( function(name) {\n\t\t\tif (! this.itemByName(name)) {\n\t\t\t\tthis.addItem({ name: name });\n\t\t\t}\n\t\t}, this );\n\n\t\tthis.forEach( function(item) {\n\t\t\titem.data.push({ \n\t\t\t\tx: x || (index * this.timeInterval || 1) + this.timeBase, \n\t\t\t\ty: (data[item.name] || 0) \n\t\t\t});\n\t\t}, this );\n\t},\n\n\tgetIndex: function () {\n\t\treturn (this[0] && this[0].data && this[0].data.length) ? this[0].data.length : 0;\n\t},\n\n\titemByName: function(name) {\n\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this[i].name == name)\n\t\t\t\treturn this[i];\n\t\t}\n\t},\n\n\tsetTimeInterval: function(iv) {\n\t\tthis.timeInterval = iv / 1000;\n\t},\n\n\tsetTimeBase: function (t) {\n\t\tthis.timeBase = t;\n\t},\n\n\tdump: function() {\n\n\t\tvar data = {\n\t\t\ttimeBase: this.timeBase,\n\t\t\ttimeInterval: this.timeInterval,\n\t\t\titems: []\n\t\t};\n\n\t\tthis.forEach( function(item) {\n\n\t\t\tvar newItem = {\n\t\t\t\tcolor: item.color,\n\t\t\t\tname: item.name,\n\t\t\t\tdata: []\n\t\t\t};\n\n\t\t\titem.data.forEach( function(plot) {\n\t\t\t\tnewItem.data.push({ x: plot.x, y: plot.y });\n\t\t\t} );\n\n\t\t\tdata.items.push(newItem);\n\t\t} );\n\n\t\treturn data;\n\t},\n\n\tload: function(data) {\n\n\t\tif (data.timeInterval) {\n\t\t\tthis.timeInterval = data.timeInterval;\n\t\t}\n\n\t\tif (data.timeBase) {\n\t\t\tthis.timeBase = data.timeBase;\n\t\t}\n\n\t\tif (data.items) {\n\t\t\tdata.items.forEach( function(item) {\n\t\t\t\tthis.push(item);\n\t\t\t\tif (this.legend) {\n\t\t\t\t\tthis.legend.addLine(this.itemByName(item.name));\n\t\t\t\t}\n\n\t\t\t}, this );\n\t\t}\n\t}\n} );\n\nRickshaw.Series.zeroFill = function(series) {\n\tRickshaw.Series.fill(series, 0);\n};\n\nRickshaw.Series.fill = function(series, fill) {\n\n\tvar x;\n\tvar i = 0;\n\n\tvar data = series.map( function(s) { return s.data } );\n\n\twhile ( i < Math.max.apply(null, data.map( function(d) { return d.length } )) ) {\n\n\t\tx = Math.min.apply( null, \n\t\t\tdata\n\t\t\t\t.filter(function(d) { return d[i] })\n\t\t\t\t.map(function(d) { return d[i].x })\n\t\t);\n\n\t\tdata.forEach( function(d) {\n\t\t\tif (!d[i] || d[i].x != x) {\n\t\t\t\td.splice(i, 0, { x: x, y: fill });\n\t\t\t}\n\t\t} );\n\n\t\ti++;\n\t}\n};\n\nRickshaw.namespace('Rickshaw.Series.FixedDuration');\n\nRickshaw.Series.FixedDuration = Rickshaw.Class.create(Rickshaw.Series, {\n\n\tinitialize: function (data, palette, options) {\n\n\t\toptions = options || {};\n\n\t\tif (typeof(options.timeInterval) === 'undefined') {\n\t\t\tthrow new Error('FixedDuration series requires timeInterval');\n\t\t}\n\n\t\tif (typeof(options.maxDataPoints) === 'undefined') {\n\t\t\tthrow new Error('FixedDuration series requires maxDataPoints');\n\t\t}\n\n\t\tthis.palette = new Rickshaw.Color.Palette(palette);\n\t\tthis.timeBase = typeof(options.timeBase) === 'undefined' ? Math.floor(new Date().getTime() / 1000) : options.timeBase;\n\t\tthis.setTimeInterval(options.timeInterval);\n\n\t\tif (this[0] && this[0].data && this[0].data.length) {\n\t\t\tthis.currentSize = this[0].data.length;\n\t\t\tthis.currentIndex = this[0].data.length;\n\t\t} else {\n\t\t\tthis.currentSize  = 0;\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.maxDataPoints = options.maxDataPoints;\n\n\n\t\tif (data && (typeof(data) == \"object\") && Array.isArray(data)) {\n\t\t\tdata.forEach( function (item) { this.addItem(item) }, this );\n\t\t\tthis.currentSize  += 1;\n\t\t\tthis.currentIndex += 1;\n\t\t}\n\n\t\t// reset timeBase for zero-filled values if needed\n\t\tthis.timeBase -= (this.maxDataPoints - this.currentSize) * this.timeInterval;\n\n\t\t// zero-fill up to maxDataPoints size if we don't have that much data yet\n\t\tif ((typeof(this.maxDataPoints) !== 'undefined') && (this.currentSize < this.maxDataPoints)) {\n\t\t\tfor (var i = this.maxDataPoints - this.currentSize - 1; i > 1; i--) {\n\t\t\t\tthis.currentSize  += 1;\n\t\t\t\tthis.currentIndex += 1;\n\t\t\t\tthis.forEach( function (item) {\n\t\t\t\t\titem.data.unshift({ x: ((i-1) * this.timeInterval || 1) + this.timeBase, y: 0, i: i });\n\t\t\t\t}, this );\n\t\t\t}\n\t\t}\n\t},\n\n\taddData: function($super, data, x) {\n\n\t\t$super(data, x);\n\n\t\tthis.currentSize += 1;\n\t\tthis.currentIndex += 1;\n\n\t\tif (this.maxDataPoints !== undefined) {\n\t\t\twhile (this.currentSize > this.maxDataPoints) {\n\t\t\t\tthis.dropData();\n\t\t\t}\n\t\t}\n\t},\n\n\tdropData: function() {\n\n\t\tthis.forEach(function(item) {\n\t\t\titem.data.splice(0, 1);\n\t\t} );\n\n\t\tthis.currentSize -= 1;\n\t},\n\n\tgetIndex: function () {\n\t\treturn this.currentIndex;\n\t}\n} );\n\n\treturn Rickshaw;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3JpY2tzaGF3L3JpY2tzaGF3LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJvRkFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFBQTtBQUNULEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLHVDQUF1QyxZQUFZO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVCQUF1QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0NBQWdDO0FBQzNDOztBQUVBLCtDQUErQyxZQUFZO0FBQzNEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0NBQStDLFlBQVk7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyQ0FBMkM7QUFDeEUsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFNBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFNBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGFBQWE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBLEVBQUU7O0FBRUY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMseUNBQXlDLHFCQUFxQjtBQUNqRyxnQkFBZ0IseUNBQXlDO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsY0FBYztBQUMvQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIOztBQUVBOztBQUVBLDJDQUEyQyxnQkFBZ0I7O0FBRTNELDJDQUEyQyxnQkFBZ0I7QUFDM0QsMkNBQTJDLDJCQUEyQjs7QUFFdEU7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLHNCQUFzQixnQkFBZ0I7QUFDdEMsc0JBQXNCLCtCQUErQix3QkFBd0IsVUFBVTs7QUFFdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDOztBQUVBLEdBQUc7QUFDSDs7QUFFQSx5QkFBeUI7O0FBRXpCOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQixjQUFjO0FBQ3pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLDhEQUE4RDtBQUMvRSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBOztBQUVBO0FBQ0EsNENBQTRDLCtCQUErQjtBQUMzRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixHQUFHO0FBQ0g7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBOztBQUVBO0FBQ0EsNENBQTRDLCtCQUErQjtBQUMzRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxnQ0FBZ0M7QUFDaEMsZ0NBQWdDO0FBQ2hDLGdDQUFnQztBQUNoQyxnQ0FBZ0M7QUFDaEMsZ0NBQWdDO0FBQ2hDLDRCQUE0QjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDLHFDQUFxQztBQUNyQyxxQ0FBcUM7QUFDckMscUNBQXFDO0FBQ3JDLHFDQUFxQztBQUNyQyxxQ0FBcUM7QUFDckMscUNBQXFDO0FBQ3JDLGlDQUFpQztBQUNqQztBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQSxjQUFjLGdDQUFnQztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsNENBQTRDO0FBQzVDO0FBQ0E7O0FBRUEsbUJBQW1COztBQUVuQjtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBO0FBQ0EsbUNBQW1DLHVDQUF1Qzs7QUFFMUU7QUFDQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxJQUFJO0FBQ0osR0FBRzs7QUFFSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTtBQUNBLGtCQUFrQjs7QUFFbEI7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSx3Q0FBd0M7QUFDeEMsOEJBQThCLGdDQUFnQztBQUM5RDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sS0FBSzs7QUFFTDs7QUFFQTtBQUNBOztBQUVBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0g7O0FBRUEsa0NBQWtDLGdCQUFnQjtBQUNsRDtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBLGlCQUFpQixXQUFXOztBQUU1QjtBQUNBOztBQUVBLGtCQUFrQiwrQkFBK0I7QUFDakQ7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEdBQUc7QUFDSDs7QUFFQSxrQ0FBa0MsZ0JBQWdCO0FBQ2xEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUIseUNBQXlDOztBQUUxRCxHQUFHO0FBQ0g7QUFDQTs7QUFFQSxtQ0FBbUMsZ0JBQWdCO0FBQ25EOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwrRkFBK0YsYUFBYTs7QUFFNUc7QUFDQSxtREFBbUQsV0FBVztBQUM5RDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQWlFOztBQUV0RjtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxvREFBb0Q7O0FBRXBEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLHlDQUF5Qzs7QUFFMUQsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25ELEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBLGtHQUFrRyxhQUFhOztBQUUvRzs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpRUFBaUU7QUFDdEY7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxJQUFJOztBQUVKOztBQUVBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7O0FBRUEsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEVBQUU7O0FBRUY7QUFDQSxrQztBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLE87QUFDSiw4Q0FBOEMscUJBQXFCO0FBQ25FO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdEQUFnRCw4QkFBOEI7QUFDOUU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQzs7QUFFakMseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7O0FBRWpDOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEscUNBQXFDOztBQUVyQztBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLEVBQUU7O0FBRUY7QUFDQSwrQkFBK0I7QUFDL0IsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxpQ0FBaUMscUJBQXFCOztBQUV0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsTUFBTSxPQUFPO0FBQ2hEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0EsMENBQTBDLGtCQUFrQjs7QUFFNUQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUEsbUNBQW1DLGdCQUFnQjs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLEVBQUU7O0FBRUY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQixXQUFXOztBQUVqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7OztBQUdILEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsOEJBQThCLGdCQUFnQjtBQUM5QyxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLElBQUk7QUFDSixHQUFHOztBQUVIOztBQUVBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0Y7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsSUFBSTtBQUNKOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLCtCQUErQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxxQ0FBcUM7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7O0FBRUEsK0JBQStCLGdCQUFnQixnQkFBZ0I7O0FBRS9ELHNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtCQUErQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw2Q0FBNkM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7O0FBRUo7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVTtBQUNWLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QyxxQkFBcUIsaUJBQWlCOztBQUV0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNILEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDLG9CQUFvQixzQkFBc0I7QUFDMUM7O0FBRUEsbURBQW1ELHNCQUFzQjtBQUN6RTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFOztBQUVGOztBQUVBOztBQUVBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQyxxQkFBcUIsdUJBQXVCO0FBQzVDLHFCQUFxQiw2QkFBNkI7QUFDbEQ7O0FBRUEsbURBQW1ELHNCQUFzQjtBQUN6RTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNEQUFzRCxvQkFBb0IsRUFBRTtBQUM1RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsNENBQTRDLHNCQUFzQjtBQUNsRTtBQUNBLDRCQUE0QixtQ0FBbUM7QUFDL0QsNEJBQTRCLCtEQUErRDtBQUMzRjtBQUNBLGlDQUFpQywwQ0FBMEM7QUFDM0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjs7QUFFQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQSxpQkFBaUIscUJBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDLHFCQUFxQix1QkFBdUI7QUFDNUMscUJBQXFCLDZCQUE2QjtBQUNsRDs7QUFFQSxtREFBbUQsc0JBQXNCO0FBQ3pFO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUMsb0JBQW9CLDZCQUE2QjtBQUNqRDs7QUFFQSxtREFBbUQsc0JBQXNCO0FBQ3pFO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0MscUJBQXFCLGlCQUFpQjs7QUFFdEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFtRDtBQUMvRDtBQUNBLEdBQUc7QUFDSCxFQUFFOztBQUVGO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QyxzQkFBc0I7QUFDbEU7QUFDQSw4QkFBOEIsc0JBQXNCO0FBQ3BELDhCQUE4QixzQkFBc0I7QUFDcEQsNkJBQTZCLG1DQUFtQztBQUNoRSxtQ0FBbUMsK0NBQStDO0FBQ2xGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSixHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsMEJBQTBCLHFCQUFxQjtBQUMvQyx1QkFBdUIsaUJBQWlCOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCw4Q0FBOEMsZ0JBQWdCO0FBQzlELDhDQUE4QyxnQkFBZ0I7QUFDOUQsOENBQThDLGdCQUFnQjtBQUM5RCw4Q0FBOEMsZ0JBQWdCOztBQUU5RCxVQUFVO0FBQ1YsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0Esa0NBQWtDLDZCQUE2Qjs7QUFFL0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQSwrQkFBK0IsMEJBQTBCOztBQUV6RDtBQUNBLDRCQUE0QixzQkFBc0I7O0FBRWxEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxHQUFHOztBQUVIOztBQUVBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSwrQkFBK0IsMEJBQTBCOztBQUV6RCwrQkFBK0I7O0FBRS9CLDBCQUEwQixpQ0FBaUM7QUFDM0QsK0JBQStCLHlDQUF5QyxFQUFFO0FBQzFFLEdBQUc7QUFDSDs7QUFFQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFtRDtBQUMvRDtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDLG9CQUFvQixzQkFBc0I7QUFDMUM7O0FBRUEsbURBQW1ELHNCQUFzQjtBQUN6RTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0MscUJBQXFCLGlCQUFpQjs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7O0FBRUE7QUFDQSw0Q0FBNEMsc0JBQXNCO0FBQ2xFO0FBQ0EsNkJBQTZCLHNCQUFzQjtBQUNuRCw2QkFBNkIsc0JBQXNCO0FBQ25ELDRCQUE0QixtQ0FBbUM7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJOztBQUVKLEdBQUc7QUFDSDtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUU7O0FBRUY7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTCxnQ0FBZ0MsbUJBQW1CO0FBQ25EOztBQUVBOztBQUVBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxpQ0FBaUMscUJBQXFCO0FBQ3REO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDLElBQUk7QUFDSixHQUFHO0FBQ0gsbUJBQW1CLG9EQUFvRDtBQUN2RSxHOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixhQUFhO0FBQy9CO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLG1CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0gsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QyxJQUFJOztBQUVKO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLEVBQUU7O0FBRUY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSTtBQUNKO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLHFDQUFxQyxnQkFBZ0I7O0FBRXJELHlEQUF5RCxrQkFBa0I7O0FBRTNFO0FBQ0E7QUFDQSx5QkFBeUIsY0FBYztBQUN2QyxzQkFBc0IsZ0JBQWdCO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0E7QUFDQSxrQ0FBa0MscUJBQXFCO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwREFBMEQsT0FBTztBQUNqRTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0VBQWtFO0FBQzFGLEtBQUs7QUFDTDtBQUNBO0FBQ0EsRUFBRTs7QUFFRjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9yaWNrc2hhdy9yaWNrc2hhdy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuICAgIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKFsnZDMnXSwgZnVuY3Rpb24gKGQzKSB7XG4gICAgICAgICAgICByZXR1cm4gKHJvb3QuUmlja3NoYXcgPSBmYWN0b3J5KGQzKSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCdkMycpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByb290LlJpY2tzaGF3ID0gZmFjdG9yeShkMyk7XG4gICAgfVxufSh0aGlzLCBmdW5jdGlvbiAoZDMpIHtcbi8qIGpzaGludCAtVzA3OSAqLyBcblxudmFyIFJpY2tzaGF3ID0ge1xuXG5cdG5hbWVzcGFjZTogZnVuY3Rpb24obmFtZXNwYWNlLCBvYmopIHtcblxuXHRcdHZhciBwYXJ0cyA9IG5hbWVzcGFjZS5zcGxpdCgnLicpO1xuXG5cdFx0dmFyIHBhcmVudCA9IFJpY2tzaGF3O1xuXG5cdFx0Zm9yKHZhciBpID0gMSwgbGVuZ3RoID0gcGFydHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBjdXJyZW50UGFydCA9IHBhcnRzW2ldO1xuXHRcdFx0cGFyZW50W2N1cnJlbnRQYXJ0XSA9IHBhcmVudFtjdXJyZW50UGFydF0gfHwge307XG5cdFx0XHRwYXJlbnQgPSBwYXJlbnRbY3VycmVudFBhcnRdO1xuXHRcdH1cblx0XHRyZXR1cm4gcGFyZW50O1xuXHR9LFxuXG5cdGtleXM6IGZ1bmN0aW9uKG9iaikge1xuXHRcdHZhciBrZXlzID0gW107XG5cdFx0Zm9yICh2YXIga2V5IGluIG9iaikga2V5cy5wdXNoKGtleSk7XG5cdFx0cmV0dXJuIGtleXM7XG5cdH0sXG5cblx0ZXh0ZW5kOiBmdW5jdGlvbihkZXN0aW5hdGlvbiwgc291cmNlKSB7XG5cblx0XHRmb3IgKHZhciBwcm9wZXJ0eSBpbiBzb3VyY2UpIHtcblx0XHRcdGRlc3RpbmF0aW9uW3Byb3BlcnR5XSA9IHNvdXJjZVtwcm9wZXJ0eV07XG5cdFx0fVxuXHRcdHJldHVybiBkZXN0aW5hdGlvbjtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24ob2JqKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7XG5cdH1cbn07XG4vKiBBZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL0pha29iby9QVENsYXNzICovXG5cbi8qXG5Db3B5cmlnaHQgKGMpIDIwMDUtMjAxMCBTYW0gU3RlcGhlbnNvblxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG5BVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG5MSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcblNPRlRXQVJFLlxuKi9cbi8qIEJhc2VkIG9uIEFsZXggQXJuZWxsJ3MgaW5oZXJpdGFuY2UgaW1wbGVtZW50YXRpb24uICovXG4vKiogc2VjdGlvbjogTGFuZ3VhZ2VcbiAqIGNsYXNzIENsYXNzXG4gKlxuICogIE1hbmFnZXMgUHJvdG90eXBlJ3MgY2xhc3MtYmFzZWQgT09QIHN5c3RlbS5cbiAqXG4gKiAgUmVmZXIgdG8gUHJvdG90eXBlJ3Mgd2ViIHNpdGUgZm9yIGEgW3R1dG9yaWFsIG9uIGNsYXNzZXMgYW5kXG4gKiAgaW5oZXJpdGFuY2VdKGh0dHA6Ly9wcm90b3R5cGVqcy5vcmcvbGVhcm4vY2xhc3MtaW5oZXJpdGFuY2UpLlxuKiovXG4oZnVuY3Rpb24oZ2xvYmFsQ29udGV4dCkge1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiBJbXBvcnQgZnJvbSBvYmplY3QuanMgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xudmFyIF90b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsXG4gICAgTlVMTF9UWVBFID0gJ051bGwnLFxuICAgIFVOREVGSU5FRF9UWVBFID0gJ1VuZGVmaW5lZCcsXG4gICAgQk9PTEVBTl9UWVBFID0gJ0Jvb2xlYW4nLFxuICAgIE5VTUJFUl9UWVBFID0gJ051bWJlcicsXG4gICAgU1RSSU5HX1RZUEUgPSAnU3RyaW5nJyxcbiAgICBPQkpFQ1RfVFlQRSA9ICdPYmplY3QnLFxuICAgIEZVTkNUSU9OX0NMQVNTID0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbmZ1bmN0aW9uIGlzRnVuY3Rpb24ob2JqZWN0KSB7XG4gIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmplY3QpID09PSBGVU5DVElPTl9DTEFTUztcbn1cbmZ1bmN0aW9uIGV4dGVuZChkZXN0aW5hdGlvbiwgc291cmNlKSB7XG4gIGZvciAodmFyIHByb3BlcnR5IGluIHNvdXJjZSkgaWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIC8vIG1vZGlmeSBwcm90ZWN0IHByaW1pdGl2ZSBzbGF1Z2h0ZXJcbiAgICBkZXN0aW5hdGlvbltwcm9wZXJ0eV0gPSBzb3VyY2VbcHJvcGVydHldO1xuICByZXR1cm4gZGVzdGluYXRpb247XG59XG5mdW5jdGlvbiBrZXlzKG9iamVjdCkge1xuICBpZiAoVHlwZShvYmplY3QpICE9PSBPQkpFQ1RfVFlQRSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCk7IH1cbiAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgZm9yICh2YXIgcHJvcGVydHkgaW4gb2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdC5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICAgIHJlc3VsdHMucHVzaChwcm9wZXJ0eSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHRzO1xufVxuZnVuY3Rpb24gVHlwZShvKSB7XG4gIHN3aXRjaChvKSB7XG4gICAgY2FzZSBudWxsOiByZXR1cm4gTlVMTF9UWVBFO1xuICAgIGNhc2UgKHZvaWQgMCk6IHJldHVybiBVTkRFRklORURfVFlQRTtcbiAgfVxuICB2YXIgdHlwZSA9IHR5cGVvZiBvO1xuICBzd2l0Y2godHlwZSkge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOiByZXR1cm4gQk9PTEVBTl9UWVBFO1xuICAgIGNhc2UgJ251bWJlcic6ICByZXR1cm4gTlVNQkVSX1RZUEU7XG4gICAgY2FzZSAnc3RyaW5nJzogIHJldHVybiBTVFJJTkdfVFlQRTtcbiAgfVxuICByZXR1cm4gT0JKRUNUX1RZUEU7XG59XG5mdW5jdGlvbiBpc1VuZGVmaW5lZChvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09IFwidW5kZWZpbmVkXCI7XG59XG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIEltcG9ydCBmcm9tIEZ1bmN0aW9uLmpzICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG5mdW5jdGlvbiBhcmd1bWVudE5hbWVzKGZuKSB7XG4gIHZhciBuYW1lcyA9IGZuLnRvU3RyaW5nKCkubWF0Y2goL15bXFxzXFwoXSpmdW5jdGlvblteKF0qXFwoKFteKV0qKVxcKS8pWzFdXG4gICAgLnJlcGxhY2UoL1xcL1xcLy4qP1tcXHJcXG5dfFxcL1xcKig/Oi58W1xcclxcbl0pKj9cXCpcXC8vZywgJycpXG4gICAgLnJlcGxhY2UoL1xccysvZywgJycpLnNwbGl0KCcsJyk7XG4gIHJldHVybiBuYW1lcy5sZW5ndGggPT0gMSAmJiAhbmFtZXNbMF0gPyBbXSA6IG5hbWVzO1xufVxuZnVuY3Rpb24gd3JhcChmbiwgd3JhcHBlcikge1xuICB2YXIgX19tZXRob2QgPSBmbjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBhID0gdXBkYXRlKFtiaW5kKF9fbWV0aG9kLCB0aGlzKV0sIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHdyYXBwZXIuYXBwbHkodGhpcywgYSk7XG4gIH1cbn1cbmZ1bmN0aW9uIHVwZGF0ZShhcnJheSwgYXJncykge1xuICB2YXIgYXJyYXlMZW5ndGggPSBhcnJheS5sZW5ndGgsIGxlbmd0aCA9IGFyZ3MubGVuZ3RoO1xuICB3aGlsZSAobGVuZ3RoLS0pIGFycmF5W2FycmF5TGVuZ3RoICsgbGVuZ3RoXSA9IGFyZ3NbbGVuZ3RoXTtcbiAgcmV0dXJuIGFycmF5O1xufVxuZnVuY3Rpb24gbWVyZ2UoYXJyYXksIGFyZ3MpIHtcbiAgYXJyYXkgPSBzbGljZS5jYWxsKGFycmF5LCAwKTtcbiAgcmV0dXJuIHVwZGF0ZShhcnJheSwgYXJncyk7XG59XG5mdW5jdGlvbiBiaW5kKGZuLCBjb250ZXh0KSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMiAmJiBpc1VuZGVmaW5lZChhcmd1bWVudHNbMF0pKSByZXR1cm4gdGhpcztcbiAgdmFyIF9fbWV0aG9kID0gZm4sIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMik7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYSA9IG1lcmdlKGFyZ3MsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIF9fbWV0aG9kLmFwcGx5KGNvbnRleHQsIGEpO1xuICB9XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogSW1wb3J0IGZyb20gUHJvdG90eXBlLmpzICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24oKXt9O1xuXG52YXIgQ2xhc3MgPSAoZnVuY3Rpb24oKSB7XG4gIFxuICAvLyBTb21lIHZlcnNpb25zIG9mIEpTY3JpcHQgZmFpbCB0byBlbnVtZXJhdGUgb3ZlciBwcm9wZXJ0aWVzLCBuYW1lcyBvZiB3aGljaCBcbiAgLy8gY29ycmVzcG9uZCB0byBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGluIHRoZSBwcm90b3R5cGUgY2hhaW5cbiAgdmFyIElTX0RPTlRFTlVNX0JVR0dZID0gKGZ1bmN0aW9uKCl7XG4gICAgZm9yICh2YXIgcCBpbiB7IHRvU3RyaW5nOiAxIH0pIHtcbiAgICAgIC8vIGNoZWNrIGFjdHVhbCBwcm9wZXJ0eSBuYW1lLCBzbyB0aGF0IGl0IHdvcmtzIHdpdGggYXVnbWVudGVkIE9iamVjdC5wcm90b3R5cGVcbiAgICAgIGlmIChwID09PSAndG9TdHJpbmcnKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9KSgpO1xuICBcbiAgZnVuY3Rpb24gc3ViY2xhc3MoKSB7fTtcbiAgZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgIHZhciBwYXJlbnQgPSBudWxsLCBwcm9wZXJ0aWVzID0gW10uc2xpY2UuYXBwbHkoYXJndW1lbnRzKTtcbiAgICBpZiAoaXNGdW5jdGlvbihwcm9wZXJ0aWVzWzBdKSlcbiAgICAgIHBhcmVudCA9IHByb3BlcnRpZXMuc2hpZnQoKTtcblxuICAgIGZ1bmN0aW9uIGtsYXNzKCkge1xuICAgICAgdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgZXh0ZW5kKGtsYXNzLCBDbGFzcy5NZXRob2RzKTtcbiAgICBrbGFzcy5zdXBlcmNsYXNzID0gcGFyZW50O1xuICAgIGtsYXNzLnN1YmNsYXNzZXMgPSBbXTtcblxuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIHN1YmNsYXNzLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7XG4gICAgICBrbGFzcy5wcm90b3R5cGUgPSBuZXcgc3ViY2xhc3M7XG4gICAgICB0cnkgeyBwYXJlbnQuc3ViY2xhc3Nlcy5wdXNoKGtsYXNzKSB9IGNhdGNoKGUpIHt9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHByb3BlcnRpZXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspXG4gICAgICBrbGFzcy5hZGRNZXRob2RzKHByb3BlcnRpZXNbaV0pO1xuXG4gICAgaWYgKCFrbGFzcy5wcm90b3R5cGUuaW5pdGlhbGl6ZSlcbiAgICAgIGtsYXNzLnByb3RvdHlwZS5pbml0aWFsaXplID0gZW1wdHlGdW5jdGlvbjtcblxuICAgIGtsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGtsYXNzO1xuICAgIHJldHVybiBrbGFzcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZE1ldGhvZHMoc291cmNlKSB7XG4gICAgdmFyIGFuY2VzdG9yICAgPSB0aGlzLnN1cGVyY2xhc3MgJiYgdGhpcy5zdXBlcmNsYXNzLnByb3RvdHlwZSxcbiAgICAgICAgcHJvcGVydGllcyA9IGtleXMoc291cmNlKTtcblxuICAgIC8vIElFNiBkb2Vzbid0IGVudW1lcmF0ZSBgdG9TdHJpbmdgIGFuZCBgdmFsdWVPZmAgKGFtb25nIG90aGVyIGJ1aWx0LWluIGBPYmplY3QucHJvdG90eXBlYCkgcHJvcGVydGllcyxcbiAgICAvLyBGb3JjZSBjb3B5IGlmIHRoZXkncmUgbm90IE9iamVjdC5wcm90b3R5cGUgb25lcy5cbiAgICAvLyBEbyBub3QgY29weSBvdGhlciBPYmplY3QucHJvdG90eXBlLiogZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcbiAgICBpZiAoSVNfRE9OVEVOVU1fQlVHR1kpIHtcbiAgICAgIGlmIChzb3VyY2UudG9TdHJpbmcgIT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZylcbiAgICAgICAgcHJvcGVydGllcy5wdXNoKFwidG9TdHJpbmdcIik7XG4gICAgICBpZiAoc291cmNlLnZhbHVlT2YgIT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mKVxuICAgICAgICBwcm9wZXJ0aWVzLnB1c2goXCJ2YWx1ZU9mXCIpO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBwcm9wZXJ0aWVzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcHJvcGVydHkgPSBwcm9wZXJ0aWVzW2ldLCB2YWx1ZSA9IHNvdXJjZVtwcm9wZXJ0eV07XG4gICAgICBpZiAoYW5jZXN0b3IgJiYgaXNGdW5jdGlvbih2YWx1ZSkgJiZcbiAgICAgICAgICBhcmd1bWVudE5hbWVzKHZhbHVlKVswXSA9PSBcIiRzdXBlclwiKSB7XG4gICAgICAgIHZhciBtZXRob2QgPSB2YWx1ZTtcbiAgICAgICAgdmFsdWUgPSB3cmFwKChmdW5jdGlvbihtKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkgeyByZXR1cm4gYW5jZXN0b3JbbV0uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfTtcbiAgICAgICAgfSkocHJvcGVydHkpLCBtZXRob2QpO1xuXG4gICAgICAgIHZhbHVlLnZhbHVlT2YgPSBiaW5kKG1ldGhvZC52YWx1ZU9mLCBtZXRob2QpO1xuICAgICAgICB2YWx1ZS50b1N0cmluZyA9IGJpbmQobWV0aG9kLnRvU3RyaW5nLCBtZXRob2QpO1xuICAgICAgfVxuICAgICAgdGhpcy5wcm90b3R5cGVbcHJvcGVydHldID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNyZWF0ZTogY3JlYXRlLFxuICAgIE1ldGhvZHM6IHtcbiAgICAgIGFkZE1ldGhvZHM6IGFkZE1ldGhvZHNcbiAgICB9XG4gIH07XG59KSgpO1xuXG5pZiAoZ2xvYmFsQ29udGV4dC5leHBvcnRzKSB7XG4gIGdsb2JhbENvbnRleHQuZXhwb3J0cy5DbGFzcyA9IENsYXNzO1xufVxuZWxzZSB7XG4gIGdsb2JhbENvbnRleHQuQ2xhc3MgPSBDbGFzcztcbn1cbn0pKFJpY2tzaGF3KTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuQ29tcGF0LkNsYXNzTGlzdCcpO1xuXG5SaWNrc2hhdy5Db21wYXQuQ2xhc3NMaXN0ID0gZnVuY3Rpb24oKSB7XG5cblx0LyogYWRhcHRlZCBmcm9tIGh0dHA6Ly9wdXJsLmVsaWdyZXkuY29tL2dpdGh1Yi9jbGFzc0xpc3QuanMvYmxvYi9tYXN0ZXIvY2xhc3NMaXN0LmpzICovXG5cblx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiAhKFwiY2xhc3NMaXN0XCIgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIikpKSB7XG5cblx0KGZ1bmN0aW9uICh2aWV3KSB7XG5cblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0dmFyXG5cdFx0ICBjbGFzc0xpc3RQcm9wID0gXCJjbGFzc0xpc3RcIlxuXHRcdCwgcHJvdG9Qcm9wID0gXCJwcm90b3R5cGVcIlxuXHRcdCwgZWxlbUN0clByb3RvID0gKHZpZXcuSFRNTEVsZW1lbnQgfHwgdmlldy5FbGVtZW50KVtwcm90b1Byb3BdXG5cdFx0LCBvYmpDdHIgPSBPYmplY3Rcblx0XHQsIHN0clRyaW0gPSBTdHJpbmdbcHJvdG9Qcm9wXS50cmltIHx8IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiB0aGlzLnJlcGxhY2UoL15cXHMrfFxccyskL2csIFwiXCIpO1xuXHRcdH1cblx0XHQsIGFyckluZGV4T2YgPSBBcnJheVtwcm90b1Byb3BdLmluZGV4T2YgfHwgZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhclxuXHRcdFx0XHQgIGkgPSAwXG5cdFx0XHRcdCwgbGVuID0gdGhpcy5sZW5ndGhcblx0XHRcdDtcblx0XHRcdGZvciAoOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdFx0aWYgKGkgaW4gdGhpcyAmJiB0aGlzW2ldID09PSBpdGVtKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiAtMTtcblx0XHR9XG5cdFx0Ly8gVmVuZG9yczogcGxlYXNlIGFsbG93IGNvbnRlbnQgY29kZSB0byBpbnN0YW50aWF0ZSBET01FeGNlcHRpb25zXG5cdFx0LCBET01FeCA9IGZ1bmN0aW9uICh0eXBlLCBtZXNzYWdlKSB7XG5cdFx0XHR0aGlzLm5hbWUgPSB0eXBlO1xuXHRcdFx0dGhpcy5jb2RlID0gRE9NRXhjZXB0aW9uW3R5cGVdO1xuXHRcdFx0dGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9XG5cdFx0LCBjaGVja1Rva2VuQW5kR2V0SW5kZXggPSBmdW5jdGlvbiAoY2xhc3NMaXN0LCB0b2tlbikge1xuXHRcdFx0aWYgKHRva2VuID09PSBcIlwiKSB7XG5cdFx0XHRcdHRocm93IG5ldyBET01FeChcblx0XHRcdFx0XHQgIFwiU1lOVEFYX0VSUlwiXG5cdFx0XHRcdFx0LCBcIkFuIGludmFsaWQgb3IgaWxsZWdhbCBzdHJpbmcgd2FzIHNwZWNpZmllZFwiXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoL1xccy8udGVzdCh0b2tlbikpIHtcblx0XHRcdFx0dGhyb3cgbmV3IERPTUV4KFxuXHRcdFx0XHRcdCAgXCJJTlZBTElEX0NIQVJBQ1RFUl9FUlJcIlxuXHRcdFx0XHRcdCwgXCJTdHJpbmcgY29udGFpbnMgYW4gaW52YWxpZCBjaGFyYWN0ZXJcIlxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGFyckluZGV4T2YuY2FsbChjbGFzc0xpc3QsIHRva2VuKTtcblx0XHR9XG5cdFx0LCBDbGFzc0xpc3QgPSBmdW5jdGlvbiAoZWxlbSkge1xuXHRcdFx0dmFyXG5cdFx0XHRcdCAgdHJpbW1lZENsYXNzZXMgPSBzdHJUcmltLmNhbGwoZWxlbS5jbGFzc05hbWUpXG5cdFx0XHRcdCwgY2xhc3NlcyA9IHRyaW1tZWRDbGFzc2VzID8gdHJpbW1lZENsYXNzZXMuc3BsaXQoL1xccysvKSA6IFtdXG5cdFx0XHRcdCwgaSA9IDBcblx0XHRcdFx0LCBsZW4gPSBjbGFzc2VzLmxlbmd0aFxuXHRcdFx0O1xuXHRcdFx0Zm9yICg7IGkgPCBsZW47IGkrKykge1xuXHRcdFx0XHR0aGlzLnB1c2goY2xhc3Nlc1tpXSk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLl91cGRhdGVDbGFzc05hbWUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGVsZW0uY2xhc3NOYW1lID0gdGhpcy50b1N0cmluZygpO1xuXHRcdFx0fTtcblx0XHR9XG5cdFx0LCBjbGFzc0xpc3RQcm90byA9IENsYXNzTGlzdFtwcm90b1Byb3BdID0gW11cblx0XHQsIGNsYXNzTGlzdEdldHRlciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBuZXcgQ2xhc3NMaXN0KHRoaXMpO1xuXHRcdH1cblx0O1xuXHQvLyBNb3N0IERPTUV4Y2VwdGlvbiBpbXBsZW1lbnRhdGlvbnMgZG9uJ3QgYWxsb3cgY2FsbGluZyBET01FeGNlcHRpb24ncyB0b1N0cmluZygpXG5cdC8vIG9uIG5vbi1ET01FeGNlcHRpb25zLiBFcnJvcidzIHRvU3RyaW5nKCkgaXMgc3VmZmljaWVudCBoZXJlLlxuXHRET01FeFtwcm90b1Byb3BdID0gRXJyb3JbcHJvdG9Qcm9wXTtcblx0Y2xhc3NMaXN0UHJvdG8uaXRlbSA9IGZ1bmN0aW9uIChpKSB7XG5cdFx0cmV0dXJuIHRoaXNbaV0gfHwgbnVsbDtcblx0fTtcblx0Y2xhc3NMaXN0UHJvdG8uY29udGFpbnMgPSBmdW5jdGlvbiAodG9rZW4pIHtcblx0XHR0b2tlbiArPSBcIlwiO1xuXHRcdHJldHVybiBjaGVja1Rva2VuQW5kR2V0SW5kZXgodGhpcywgdG9rZW4pICE9PSAtMTtcblx0fTtcblx0Y2xhc3NMaXN0UHJvdG8uYWRkID0gZnVuY3Rpb24gKHRva2VuKSB7XG5cdFx0dG9rZW4gKz0gXCJcIjtcblx0XHRpZiAoY2hlY2tUb2tlbkFuZEdldEluZGV4KHRoaXMsIHRva2VuKSA9PT0gLTEpIHtcblx0XHRcdHRoaXMucHVzaCh0b2tlbik7XG5cdFx0XHR0aGlzLl91cGRhdGVDbGFzc05hbWUoKTtcblx0XHR9XG5cdH07XG5cdGNsYXNzTGlzdFByb3RvLnJlbW92ZSA9IGZ1bmN0aW9uICh0b2tlbikge1xuXHRcdHRva2VuICs9IFwiXCI7XG5cdFx0dmFyIGluZGV4ID0gY2hlY2tUb2tlbkFuZEdldEluZGV4KHRoaXMsIHRva2VuKTtcblx0XHRpZiAoaW5kZXggIT09IC0xKSB7XG5cdFx0XHR0aGlzLnNwbGljZShpbmRleCwgMSk7XG5cdFx0XHR0aGlzLl91cGRhdGVDbGFzc05hbWUoKTtcblx0XHR9XG5cdH07XG5cdGNsYXNzTGlzdFByb3RvLnRvZ2dsZSA9IGZ1bmN0aW9uICh0b2tlbikge1xuXHRcdHRva2VuICs9IFwiXCI7XG5cdFx0aWYgKGNoZWNrVG9rZW5BbmRHZXRJbmRleCh0aGlzLCB0b2tlbikgPT09IC0xKSB7XG5cdFx0XHR0aGlzLmFkZCh0b2tlbik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMucmVtb3ZlKHRva2VuKTtcblx0XHR9XG5cdH07XG5cdGNsYXNzTGlzdFByb3RvLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiB0aGlzLmpvaW4oXCIgXCIpO1xuXHR9O1xuXG5cdGlmIChvYmpDdHIuZGVmaW5lUHJvcGVydHkpIHtcblx0XHR2YXIgY2xhc3NMaXN0UHJvcERlc2MgPSB7XG5cdFx0XHQgIGdldDogY2xhc3NMaXN0R2V0dGVyXG5cdFx0XHQsIGVudW1lcmFibGU6IHRydWVcblx0XHRcdCwgY29uZmlndXJhYmxlOiB0cnVlXG5cdFx0fTtcblx0XHR0cnkge1xuXHRcdFx0b2JqQ3RyLmRlZmluZVByb3BlcnR5KGVsZW1DdHJQcm90bywgY2xhc3NMaXN0UHJvcCwgY2xhc3NMaXN0UHJvcERlc2MpO1xuXHRcdH0gY2F0Y2ggKGV4KSB7IC8vIElFIDggZG9lc24ndCBzdXBwb3J0IGVudW1lcmFibGU6dHJ1ZVxuXHRcdFx0aWYgKGV4Lm51bWJlciA9PT0gLTB4N0ZGNUVDNTQpIHtcblx0XHRcdFx0Y2xhc3NMaXN0UHJvcERlc2MuZW51bWVyYWJsZSA9IGZhbHNlO1xuXHRcdFx0XHRvYmpDdHIuZGVmaW5lUHJvcGVydHkoZWxlbUN0clByb3RvLCBjbGFzc0xpc3RQcm9wLCBjbGFzc0xpc3RQcm9wRGVzYyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKG9iakN0cltwcm90b1Byb3BdLl9fZGVmaW5lR2V0dGVyX18pIHtcblx0XHRlbGVtQ3RyUHJvdG8uX19kZWZpbmVHZXR0ZXJfXyhjbGFzc0xpc3RQcm9wLCBjbGFzc0xpc3RHZXR0ZXIpO1xuXHR9XG5cblx0fSh3aW5kb3cpKTtcblxuXHR9XG59O1xuXG5pZiAoICh0eXBlb2YgUklDS1NIQVdfTk9fQ09NUEFUICE9PSBcInVuZGVmaW5lZFwiICYmICFSSUNLU0hBV19OT19DT01QQVQpIHx8IHR5cGVvZiBSSUNLU0hBV19OT19DT01QQVQgPT09IFwidW5kZWZpbmVkXCIpIHtcblx0bmV3IFJpY2tzaGF3LkNvbXBhdC5DbGFzc0xpc3QoKTtcbn1cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGgnKTtcblxuUmlja3NoYXcuR3JhcGggPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdHRoaXMuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdGlmICghYXJncy5lbGVtZW50KSB0aHJvdyBcIlJpY2tzaGF3LkdyYXBoIG5lZWRzIGEgcmVmZXJlbmNlIHRvIGFuIGVsZW1lbnRcIjtcblx0XHRpZiAoYXJncy5lbGVtZW50Lm5vZGVUeXBlICE9PSAxKSB0aHJvdyBcIlJpY2tzaGF3LkdyYXBoIGVsZW1lbnQgd2FzIGRlZmluZWQgYnV0IG5vdCBhbiBIVE1MIGVsZW1lbnRcIjtcblxuXHRcdHRoaXMuZWxlbWVudCA9IGFyZ3MuZWxlbWVudDtcblx0XHR0aGlzLnNlcmllcyA9IGFyZ3Muc2VyaWVzO1xuXHRcdHRoaXMud2luZG93ID0ge307XG5cblx0XHR0aGlzLnVwZGF0ZUNhbGxiYWNrcyA9IFtdO1xuXHRcdHRoaXMuY29uZmlndXJlQ2FsbGJhY2tzID0gW107XG5cblx0XHR0aGlzLmRlZmF1bHRzID0ge1xuXHRcdFx0aW50ZXJwb2xhdGlvbjogJ2NhcmRpbmFsJyxcblx0XHRcdG9mZnNldDogJ3plcm8nLFxuXHRcdFx0bWluOiB1bmRlZmluZWQsXG5cdFx0XHRtYXg6IHVuZGVmaW5lZCxcblx0XHRcdHByZXNlcnZlOiBmYWxzZSxcblx0XHRcdHhTY2FsZTogdW5kZWZpbmVkLFxuXHRcdFx0eVNjYWxlOiB1bmRlZmluZWQsXG5cdFx0XHRzdGFjazogdHJ1ZVxuXHRcdH07XG5cblx0XHR0aGlzLl9sb2FkUmVuZGVyZXJzKCk7XG5cdFx0dGhpcy5jb25maWd1cmUoYXJncyk7XG5cdFx0dGhpcy52YWxpZGF0ZVNlcmllcyhhcmdzLnNlcmllcyk7XG5cblx0XHR0aGlzLnNlcmllcy5hY3RpdmUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNlbGYuc2VyaWVzLmZpbHRlciggZnVuY3Rpb24ocykgeyByZXR1cm4gIXMuZGlzYWJsZWQgfSApIH07XG5cdFx0dGhpcy5zZXRTaXplKHsgd2lkdGg6IGFyZ3Mud2lkdGgsIGhlaWdodDogYXJncy5oZWlnaHQgfSk7XG5cdFx0dGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3JpY2tzaGF3X2dyYXBoJyk7XG5cblx0XHR0aGlzLnZpcyA9IGQzLnNlbGVjdCh0aGlzLmVsZW1lbnQpXG5cdFx0XHQuYXBwZW5kKFwic3ZnOnN2Z1wiKVxuXHRcdFx0LmF0dHIoJ3dpZHRoJywgdGhpcy53aWR0aClcblx0XHRcdC5hdHRyKCdoZWlnaHQnLCB0aGlzLmhlaWdodCk7XG5cblx0XHR0aGlzLmRpc2NvdmVyUmFuZ2UoKTtcblx0fTtcblxuXHR0aGlzLl9sb2FkUmVuZGVyZXJzID0gZnVuY3Rpb24oKSB7XG5cblx0XHRmb3IgKHZhciBuYW1lIGluIFJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyKSB7XG5cdFx0XHRpZiAoIW5hbWUgfHwgIVJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLmhhc093blByb3BlcnR5KG5hbWUpKSBjb250aW51ZTtcblx0XHRcdHZhciByID0gUmlja3NoYXcuR3JhcGguUmVuZGVyZXJbbmFtZV07XG5cdFx0XHRpZiAoIXIgfHwgIXIucHJvdG90eXBlIHx8ICFyLnByb3RvdHlwZS5yZW5kZXIpIGNvbnRpbnVlO1xuXHRcdFx0c2VsZi5yZWdpc3RlclJlbmRlcmVyKG5ldyByKCB7IGdyYXBoOiBzZWxmIH0gKSk7XG5cdFx0fVxuXHR9O1xuXG5cdHRoaXMudmFsaWRhdGVTZXJpZXMgPSBmdW5jdGlvbihzZXJpZXMpIHtcblxuXHRcdGlmICghQXJyYXkuaXNBcnJheShzZXJpZXMpICYmICEoc2VyaWVzIGluc3RhbmNlb2YgUmlja3NoYXcuU2VyaWVzKSkge1xuXHRcdFx0dmFyIHNlcmllc1NpZ25hdHVyZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkoc2VyaWVzKTtcblx0XHRcdHRocm93IFwic2VyaWVzIGlzIG5vdCBhbiBhcnJheTogXCIgKyBzZXJpZXNTaWduYXR1cmU7XG5cdFx0fVxuXG5cdFx0dmFyIHBvaW50c0NvdW50O1xuXG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHMpIHtcblxuXHRcdFx0aWYgKCEocyBpbnN0YW5jZW9mIE9iamVjdCkpIHtcblx0XHRcdFx0dGhyb3cgXCJzZXJpZXMgZWxlbWVudCBpcyBub3QgYW4gb2JqZWN0OiBcIiArIHM7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIShzLmRhdGEpKSB7XG5cdFx0XHRcdHRocm93IFwic2VyaWVzIGhhcyBubyBkYXRhOiBcIiArIEpTT04uc3RyaW5naWZ5KHMpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFBcnJheS5pc0FycmF5KHMuZGF0YSkpIHtcblx0XHRcdFx0dGhyb3cgXCJzZXJpZXMgZGF0YSBpcyBub3QgYW4gYXJyYXk6IFwiICsgSlNPTi5zdHJpbmdpZnkocy5kYXRhKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0aWYgKHMuZGF0YS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdHZhciB4ID0gcy5kYXRhWzBdLng7XG5cdFx0XHRcdHZhciB5ID0gcy5kYXRhWzBdLnk7XG5cblx0XHRcdFx0aWYgKHR5cGVvZiB4ICE9ICdudW1iZXInIHx8ICggdHlwZW9mIHkgIT0gJ251bWJlcicgJiYgeSAhPT0gbnVsbCApICkge1xuXHRcdFx0XHRcdHRocm93IFwieCBhbmQgeSBwcm9wZXJ0aWVzIG9mIHBvaW50cyBzaG91bGQgYmUgbnVtYmVycyBpbnN0ZWFkIG9mIFwiICtcblx0XHRcdFx0XHRcdCh0eXBlb2YgeCkgKyBcIiBhbmQgXCIgKyAodHlwZW9mIHkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmIChzLmRhdGEubGVuZ3RoID49IDMpIHtcblx0XHRcdFx0Ly8gcHJvYmUgdG8gc2FuaXR5IGNoZWNrIHNvcnQgb3JkZXJcblx0XHRcdFx0aWYgKHMuZGF0YVsyXS54IDwgcy5kYXRhWzFdLnggfHwgcy5kYXRhWzFdLnggPCBzLmRhdGFbMF0ueCB8fCBzLmRhdGFbcy5kYXRhLmxlbmd0aCAtIDFdLnggPCBzLmRhdGFbMF0ueCkge1xuXHRcdFx0XHRcdHRocm93IFwic2VyaWVzIGRhdGEgbmVlZHMgdG8gYmUgc29ydGVkIG9uIHggdmFsdWVzIGZvciBzZXJpZXMgbmFtZTogXCIgKyBzLm5hbWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH0sIHRoaXMgKTtcblx0fTtcblxuXHR0aGlzLmRhdGFEb21haW4gPSBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBkYXRhID0gdGhpcy5zZXJpZXMubWFwKCBmdW5jdGlvbihzKSB7IHJldHVybiBzLmRhdGEgfSApO1xuXG5cdFx0dmFyIG1pbiA9IGQzLm1pbiggZGF0YS5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGRbMF0ueCB9ICkgKTtcblx0XHR2YXIgbWF4ID0gZDMubWF4KCBkYXRhLm1hcCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZFtkLmxlbmd0aCAtIDFdLnggfSApICk7XG5cblx0XHRyZXR1cm4gW21pbiwgbWF4XTtcblx0fTtcblxuXHR0aGlzLmRpc2NvdmVyUmFuZ2UgPSBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBkb21haW4gPSB0aGlzLnJlbmRlcmVyLmRvbWFpbigpO1xuXG5cdFx0Ly8gdGhpcy4qU2NhbGUgaXMgY29taW5nIGZyb20gdGhlIGNvbmZpZ3VyYXRpb24gZGljdGlvbmFyeVxuXHRcdC8vIHdoaWNoIG1heSBiZSByZWZlcmVuY2VkIGJ5IHRoZSBHcmFwaCBjcmVhdG9yLCBvciBzaGFyZWRcblx0XHQvLyB3aXRoIG90aGVyIEdyYXBocy4gV2UgbmVlZCB0byBlbnN1cmUgd2UgY29weSB0aGUgc2NhbGVcblx0XHQvLyBzbyB0aGF0IG91ciBtdXRhdGlvbnMgZG8gbm90IGNoYW5nZSB0aGUgb2JqZWN0IGdpdmVuIHRvIHVzLlxuXHRcdC8vIEhlbmNlIHRoZSAuY29weSgpXG5cdFx0dGhpcy54ID0gKHRoaXMueFNjYWxlIHx8IGQzLnNjYWxlLmxpbmVhcigpKS5jb3B5KCkuZG9tYWluKGRvbWFpbi54KS5yYW5nZShbMCwgdGhpcy53aWR0aF0pO1xuXHRcdHRoaXMueSA9ICh0aGlzLnlTY2FsZSB8fCBkMy5zY2FsZS5saW5lYXIoKSkuY29weSgpLmRvbWFpbihkb21haW4ueSkucmFuZ2UoW3RoaXMuaGVpZ2h0LCAwXSk7XG5cblx0XHR0aGlzLngubWFnbml0dWRlID0gZDMuc2NhbGUubGluZWFyKClcblx0XHRcdC5kb21haW4oW2RvbWFpbi54WzBdIC0gZG9tYWluLnhbMF0sIGRvbWFpbi54WzFdIC0gZG9tYWluLnhbMF1dKVxuXHRcdFx0LnJhbmdlKFswLCB0aGlzLndpZHRoXSk7XG5cblx0XHR0aGlzLnkubWFnbml0dWRlID0gZDMuc2NhbGUubGluZWFyKClcblx0XHRcdC5kb21haW4oW2RvbWFpbi55WzBdIC0gZG9tYWluLnlbMF0sIGRvbWFpbi55WzFdIC0gZG9tYWluLnlbMF1dKVxuXHRcdFx0LnJhbmdlKFswLCB0aGlzLmhlaWdodF0pO1xuXHR9O1xuXG5cdHRoaXMucmVuZGVyID0gZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgc3RhY2tlZERhdGEgPSB0aGlzLnN0YWNrRGF0YSgpO1xuXHRcdHRoaXMuZGlzY292ZXJSYW5nZSgpO1xuXG5cdFx0dGhpcy5yZW5kZXJlci5yZW5kZXIoKTtcblxuXHRcdHRoaXMudXBkYXRlQ2FsbGJhY2tzLmZvckVhY2goIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0XHRjYWxsYmFjaygpO1xuXHRcdH0gKTtcblxuXHR9O1xuXG5cdHRoaXMudXBkYXRlID0gdGhpcy5yZW5kZXI7XG5cblx0dGhpcy5zdGFja0RhdGEgPSBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBkYXRhID0gdGhpcy5zZXJpZXMuYWN0aXZlKClcblx0XHRcdC5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZGF0YSB9IClcblx0XHRcdC5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZmlsdGVyKCBmdW5jdGlvbihkKSB7IHJldHVybiB0aGlzLl9zbGljZShkKSB9LCB0aGlzICkgfSwgdGhpcyk7XG5cblx0XHR2YXIgcHJlc2VydmUgPSB0aGlzLnByZXNlcnZlO1xuXHRcdGlmICghcHJlc2VydmUpIHtcblx0XHRcdHRoaXMuc2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXHRcdFx0XHRpZiAoc2VyaWVzLnNjYWxlKSB7XG5cdFx0XHRcdFx0Ly8gZGF0YSBtdXN0IGJlIHByZXNlcnZlZCB3aGVuIGEgc2NhbGUgaXMgdXNlZFxuXHRcdFx0XHRcdHByZXNlcnZlID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGRhdGEgPSBwcmVzZXJ2ZSA/IFJpY2tzaGF3LmNsb25lKGRhdGEpIDogZGF0YTtcblxuXHRcdHRoaXMuc2VyaWVzLmFjdGl2ZSgpLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcywgaW5kZXgpIHtcblx0XHRcdGlmIChzZXJpZXMuc2NhbGUpIHtcblx0XHRcdFx0Ly8gYXBwbHkgc2NhbGUgdG8gZWFjaCBzZXJpZXNcblx0XHRcdFx0dmFyIHNlcmllc0RhdGEgPSBkYXRhW2luZGV4XTtcblx0XHRcdFx0aWYoc2VyaWVzRGF0YSkge1xuXHRcdFx0XHRcdHNlcmllc0RhdGEuZm9yRWFjaCggZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdFx0ZC55ID0gc2VyaWVzLnNjYWxlKGQueSk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdFx0dGhpcy5zdGFja0RhdGEuaG9va3MuZGF0YS5mb3JFYWNoKCBmdW5jdGlvbihlbnRyeSkge1xuXHRcdFx0ZGF0YSA9IGVudHJ5LmYuYXBwbHkoc2VsZiwgW2RhdGFdKTtcblx0XHR9ICk7XG5cblx0XHR2YXIgc3RhY2tlZERhdGE7XG5cblx0XHRpZiAoIXRoaXMucmVuZGVyZXIudW5zdGFjaykge1xuXG5cdFx0XHR0aGlzLl92YWxpZGF0ZVN0YWNrYWJsZSgpO1xuXG5cdFx0XHR2YXIgbGF5b3V0ID0gZDMubGF5b3V0LnN0YWNrKCk7XG5cdFx0XHRsYXlvdXQub2Zmc2V0KCBzZWxmLm9mZnNldCApO1xuXHRcdFx0c3RhY2tlZERhdGEgPSBsYXlvdXQoZGF0YSk7XG5cdFx0fVxuXG5cdFx0c3RhY2tlZERhdGEgPSBzdGFja2VkRGF0YSB8fCBkYXRhO1xuXG5cdFx0aWYgKHRoaXMucmVuZGVyZXIudW5zdGFjaykge1xuXHRcdFx0c3RhY2tlZERhdGEuZm9yRWFjaCggZnVuY3Rpb24oc2VyaWVzRGF0YSkge1xuXHRcdFx0XHRzZXJpZXNEYXRhLmZvckVhY2goIGZ1bmN0aW9uKGQpIHtcblx0XHRcdFx0XHRkLnkwID0gZC55MCA9PT0gdW5kZWZpbmVkID8gMCA6IGQueTA7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR0aGlzLnN0YWNrRGF0YS5ob29rcy5hZnRlci5mb3JFYWNoKCBmdW5jdGlvbihlbnRyeSkge1xuXHRcdFx0c3RhY2tlZERhdGEgPSBlbnRyeS5mLmFwcGx5KHNlbGYsIFtkYXRhXSk7XG5cdFx0fSApO1xuXG5cdFx0dmFyIGkgPSAwO1xuXHRcdHRoaXMuc2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXHRcdFx0aWYgKHNlcmllcy5kaXNhYmxlZCkgcmV0dXJuO1xuXHRcdFx0c2VyaWVzLnN0YWNrID0gc3RhY2tlZERhdGFbaSsrXTtcblx0XHR9ICk7XG5cblx0XHR0aGlzLnN0YWNrZWREYXRhID0gc3RhY2tlZERhdGE7XG5cdFx0cmV0dXJuIHN0YWNrZWREYXRhO1xuXHR9O1xuXG5cdHRoaXMuX3ZhbGlkYXRlU3RhY2thYmxlID0gZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgc2VyaWVzID0gdGhpcy5zZXJpZXM7XG5cdFx0dmFyIHBvaW50c0NvdW50O1xuXG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHMpIHtcblxuXHRcdFx0cG9pbnRzQ291bnQgPSBwb2ludHNDb3VudCB8fCBzLmRhdGEubGVuZ3RoO1xuXG5cdFx0XHRpZiAocG9pbnRzQ291bnQgJiYgcy5kYXRhLmxlbmd0aCAhPSBwb2ludHNDb3VudCkge1xuXHRcdFx0XHR0aHJvdyBcInN0YWNrZWQgc2VyaWVzIGNhbm5vdCBoYXZlIGRpZmZlcmluZyBudW1iZXJzIG9mIHBvaW50czogXCIgK1xuXHRcdFx0XHRcdHBvaW50c0NvdW50ICsgXCIgdnMgXCIgKyBzLmRhdGEubGVuZ3RoICsgXCI7IHNlZSBSaWNrc2hhdy5TZXJpZXMuZmlsbCgpXCI7XG5cdFx0XHR9XG5cblx0XHR9LCB0aGlzICk7XG5cdH07XG5cblx0dGhpcy5zdGFja0RhdGEuaG9va3MgPSB7IGRhdGE6IFtdLCBhZnRlcjogW10gfTtcblxuXHR0aGlzLl9zbGljZSA9IGZ1bmN0aW9uKGQpIHtcblxuXHRcdGlmICh0aGlzLndpbmRvdy54TWluIHx8IHRoaXMud2luZG93LnhNYXgpIHtcblxuXHRcdFx0dmFyIGlzSW5SYW5nZSA9IHRydWU7XG5cblx0XHRcdGlmICh0aGlzLndpbmRvdy54TWluICYmIGQueCA8IHRoaXMud2luZG93LnhNaW4pIGlzSW5SYW5nZSA9IGZhbHNlO1xuXHRcdFx0aWYgKHRoaXMud2luZG93LnhNYXggJiYgZC54ID4gdGhpcy53aW5kb3cueE1heCkgaXNJblJhbmdlID0gZmFsc2U7XG5cblx0XHRcdHJldHVybiBpc0luUmFuZ2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH07XG5cblx0dGhpcy5vblVwZGF0ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy51cGRhdGVDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG5cdH07XG5cblx0dGhpcy5vbkNvbmZpZ3VyZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5jb25maWd1cmVDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG5cdH07XG5cblx0dGhpcy5yZWdpc3RlclJlbmRlcmVyID0gZnVuY3Rpb24ocmVuZGVyZXIpIHtcblx0XHR0aGlzLl9yZW5kZXJlcnMgPSB0aGlzLl9yZW5kZXJlcnMgfHwge307XG5cdFx0dGhpcy5fcmVuZGVyZXJzW3JlbmRlcmVyLm5hbWVdID0gcmVuZGVyZXI7XG5cdH07XG5cblx0dGhpcy5jb25maWd1cmUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHR0aGlzLmNvbmZpZyA9IHRoaXMuY29uZmlnIHx8IHt9O1xuXG5cdFx0aWYgKGFyZ3Mud2lkdGggfHwgYXJncy5oZWlnaHQpIHtcblx0XHRcdHRoaXMuc2V0U2l6ZShhcmdzKTtcblx0XHR9XG5cblx0XHRSaWNrc2hhdy5rZXlzKHRoaXMuZGVmYXVsdHMpLmZvckVhY2goIGZ1bmN0aW9uKGspIHtcblx0XHRcdHRoaXMuY29uZmlnW2tdID0gayBpbiBhcmdzID8gYXJnc1trXVxuXHRcdFx0XHQ6IGsgaW4gdGhpcyA/IHRoaXNba11cblx0XHRcdFx0OiB0aGlzLmRlZmF1bHRzW2tdO1xuXHRcdH0sIHRoaXMgKTtcblxuXHRcdFJpY2tzaGF3LmtleXModGhpcy5jb25maWcpLmZvckVhY2goIGZ1bmN0aW9uKGspIHtcblx0XHRcdHRoaXNba10gPSB0aGlzLmNvbmZpZ1trXTtcblx0XHR9LCB0aGlzICk7XG5cblx0XHRpZiAoJ3N0YWNrJyBpbiBhcmdzKSBhcmdzLnVuc3RhY2sgPSAhYXJncy5zdGFjaztcblxuXHRcdHZhciByZW5kZXJlciA9IGFyZ3MucmVuZGVyZXIgfHwgKHRoaXMucmVuZGVyZXIgJiYgdGhpcy5yZW5kZXJlci5uYW1lKSB8fCAnc3RhY2snO1xuXHRcdHRoaXMuc2V0UmVuZGVyZXIocmVuZGVyZXIsIGFyZ3MpO1xuXG5cdFx0dGhpcy5jb25maWd1cmVDYWxsYmFja3MuZm9yRWFjaCggZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHRcdGNhbGxiYWNrKGFyZ3MpO1xuXHRcdH0gKTtcblx0fTtcblxuXHR0aGlzLnNldFJlbmRlcmVyID0gZnVuY3Rpb24ociwgYXJncykge1xuXHRcdGlmICh0eXBlb2YgciA9PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHR0aGlzLnJlbmRlcmVyID0gbmV3IHIoIHsgZ3JhcGg6IHNlbGYgfSApO1xuXHRcdFx0dGhpcy5yZWdpc3RlclJlbmRlcmVyKHRoaXMucmVuZGVyZXIpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIXRoaXMuX3JlbmRlcmVyc1tyXSkge1xuXHRcdFx0XHR0aHJvdyBcImNvdWxkbid0IGZpbmQgcmVuZGVyZXIgXCIgKyByO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5yZW5kZXJlciA9IHRoaXMuX3JlbmRlcmVyc1tyXTtcblx0XHR9XG5cblx0XHRpZiAodHlwZW9mIGFyZ3MgPT0gJ29iamVjdCcpIHtcblx0XHRcdHRoaXMucmVuZGVyZXIuY29uZmlndXJlKGFyZ3MpO1xuXHRcdH1cblx0fTtcblxuXHR0aGlzLnNldFNpemUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHRhcmdzID0gYXJncyB8fCB7fTtcblxuXHRcdGlmICh0eXBlb2Ygd2luZG93ICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdHZhciBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCwgbnVsbCk7XG5cdFx0XHR2YXIgZWxlbWVudFdpZHRoID0gcGFyc2VJbnQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnd2lkdGgnKSwgMTApO1xuXHRcdFx0dmFyIGVsZW1lbnRIZWlnaHQgPSBwYXJzZUludChzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdoZWlnaHQnKSwgMTApO1xuXHRcdH1cblxuXHRcdHRoaXMud2lkdGggPSBhcmdzLndpZHRoIHx8IGVsZW1lbnRXaWR0aCB8fCA0MDA7XG5cdFx0dGhpcy5oZWlnaHQgPSBhcmdzLmhlaWdodCB8fCBlbGVtZW50SGVpZ2h0IHx8IDI1MDtcblxuXHRcdHRoaXMudmlzICYmIHRoaXMudmlzXG5cdFx0XHQuYXR0cignd2lkdGgnLCB0aGlzLndpZHRoKVxuXHRcdFx0LmF0dHIoJ2hlaWdodCcsIHRoaXMuaGVpZ2h0KTtcblx0fTtcblxuXHR0aGlzLmluaXRpYWxpemUoYXJncyk7XG59O1xuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5GaXh0dXJlcy5Db2xvcicpO1xuXG5SaWNrc2hhdy5GaXh0dXJlcy5Db2xvciA9IGZ1bmN0aW9uKCkge1xuXG5cdHRoaXMuc2NoZW1lcyA9IHt9O1xuXG5cdHRoaXMuc2NoZW1lcy5zcGVjdHJ1bTE0ID0gW1xuXHRcdCcjZWNiNzk2Jyxcblx0XHQnI2RjOGY3MCcsXG5cdFx0JyNiMmE0NzAnLFxuXHRcdCcjOTI4NzVhJyxcblx0XHQnIzcxNmM0OScsXG5cdFx0JyNkMmVkODInLFxuXHRcdCcjYmJlNDY4Jyxcblx0XHQnI2ExZDA1ZCcsXG5cdFx0JyNlN2NiZTYnLFxuXHRcdCcjZDhhYWQ2Jyxcblx0XHQnI2E4ODhjMicsXG5cdFx0JyM5ZGMyZDMnLFxuXHRcdCcjNjQ5ZWI5Jyxcblx0XHQnIzM4N2FhMydcblx0XS5yZXZlcnNlKCk7XG5cblx0dGhpcy5zY2hlbWVzLnNwZWN0cnVtMjAwMCA9IFtcblx0XHQnIzU3MzA2ZicsXG5cdFx0JyM1MTRjNzYnLFxuXHRcdCcjNjQ2NTgzJyxcblx0XHQnIzczODM5NCcsXG5cdFx0JyM2YjljN2QnLFxuXHRcdCcjODRiNjY1Jyxcblx0XHQnI2E3Y2E1MCcsXG5cdFx0JyNiZmU3NDYnLFxuXHRcdCcjZTJmNTI4Jyxcblx0XHQnI2ZmZjcyNicsXG5cdFx0JyNlY2RkMDAnLFxuXHRcdCcjZDRiMTFkJyxcblx0XHQnI2RlODgwMCcsXG5cdFx0JyNkZTQ4MDAnLFxuXHRcdCcjYzkxNTE1Jyxcblx0XHQnIzlhMDAwMCcsXG5cdFx0JyM3YjA0MjknLFxuXHRcdCcjNTgwODM5Jyxcblx0XHQnIzMxMDgyYidcblx0XTtcblxuXHR0aGlzLnNjaGVtZXMuc3BlY3RydW0yMDAxID0gW1xuXHRcdCcjMmYyNDNmJyxcblx0XHQnIzNjMmM1NScsXG5cdFx0JyM0YTM3NjgnLFxuXHRcdCcjNTY1MjcwJyxcblx0XHQnIzZiNmI3YycsXG5cdFx0JyM3Mjk1N2YnLFxuXHRcdCcjODZhZDZlJyxcblx0XHQnI2ExYmM1ZScsXG5cdFx0JyNiOGQ5NTQnLFxuXHRcdCcjZDNlMDRlJyxcblx0XHQnI2NjYWQyYScsXG5cdFx0JyNjYzg0MTInLFxuXHRcdCcjYzE1MjFkJyxcblx0XHQnI2FkMzgyMScsXG5cdFx0JyM4YTEwMTAnLFxuXHRcdCcjNjgxNzE3Jyxcblx0XHQnIzUzMWUxZScsXG5cdFx0JyMzZDE4MTgnLFxuXHRcdCcjMzIwYTFiJ1xuXHRdO1xuXG5cdHRoaXMuc2NoZW1lcy5jbGFzc2ljOSA9IFtcblx0XHQnIzQyM2Q0ZicsXG5cdFx0JyM0YTY4NjAnLFxuXHRcdCcjODQ4ZjM5Jyxcblx0XHQnI2EyYjczYycsXG5cdFx0JyNkZGNiNTMnLFxuXHRcdCcjYzVhMzJmJyxcblx0XHQnIzdkNTgzNicsXG5cdFx0JyM5NjNiMjAnLFxuXHRcdCcjN2MyNjI2Jyxcblx0XHQnIzQ5MWQzNycsXG5cdFx0JyMyZjI1NGEnXG5cdF0ucmV2ZXJzZSgpO1xuXG5cdHRoaXMuc2NoZW1lcy5odHRwU3RhdHVzID0ge1xuXHRcdDUwMzogJyNlYTUwMjknLFxuXHRcdDUwMjogJyNkMjNmMTQnLFxuXHRcdDUwMDogJyNiZjM2MTMnLFxuXHRcdDQxMDogJyNlZmFjZWEnLFxuXHRcdDQwOTogJyNlMjkxZGMnLFxuXHRcdDQwMzogJyNmNDU3ZTgnLFxuXHRcdDQwODogJyNlMTIxZDInLFxuXHRcdDQwMTogJyNiOTJkYWUnLFxuXHRcdDQwNTogJyNmNDdjZWInLFxuXHRcdDQwNDogJyNhODJhOWYnLFxuXHRcdDQwMDogJyNiMjYzYzYnLFxuXHRcdDMwMTogJyM2ZmEwMjQnLFxuXHRcdDMwMjogJyM4N2MzMmInLFxuXHRcdDMwNzogJyNhMGQ4NGMnLFxuXHRcdDMwNDogJyMyOGI1NWMnLFxuXHRcdDIwMDogJyMxYTRmNzQnLFxuXHRcdDIwNjogJyMyNzgzOWYnLFxuXHRcdDIwMTogJyM1MmFkYzknLFxuXHRcdDIwMjogJyM3Yzk3OWYnLFxuXHRcdDIwMzogJyNhNWI4YmQnLFxuXHRcdDIwNDogJyNjMWNkZDEnXG5cdH07XG5cblx0dGhpcy5zY2hlbWVzLmNvbG9yd2hlZWwgPSBbXG5cdFx0JyNiNWI2YTknLFxuXHRcdCcjODU4NzcyJyxcblx0XHQnIzc4NWY0MycsXG5cdFx0JyM5NjU1N2UnLFxuXHRcdCcjNDY4MmI0Jyxcblx0XHQnIzY1YjlhYycsXG5cdFx0JyM3M2MwM2EnLFxuXHRcdCcjY2I1MTNhJ1xuXHRdLnJldmVyc2UoKTtcblxuXHR0aGlzLnNjaGVtZXMuY29vbCA9IFtcblx0XHQnIzVlOWQyZicsXG5cdFx0JyM3M2MwM2EnLFxuXHRcdCcjNDY4MmI0Jyxcblx0XHQnIzdiYzNiOCcsXG5cdFx0JyNhOTg4NGUnLFxuXHRcdCcjYzFiMjY2Jyxcblx0XHQnI2E0NzQ5MycsXG5cdFx0JyNjMDlmYjUnXG5cdF07XG5cblx0dGhpcy5zY2hlbWVzLm11bmluID0gW1xuXHRcdCcjMDBjYzAwJyxcblx0XHQnIzAwNjZiMycsXG5cdFx0JyNmZjgwMDAnLFxuXHRcdCcjZmZjYzAwJyxcblx0XHQnIzMzMDA5OScsXG5cdFx0JyM5OTAwOTknLFxuXHRcdCcjY2NmZjAwJyxcblx0XHQnI2ZmMDAwMCcsXG5cdFx0JyM4MDgwODAnLFxuXHRcdCcjMDA4ZjAwJyxcblx0XHQnIzAwNDg3ZCcsXG5cdFx0JyNiMzVhMDAnLFxuXHRcdCcjYjM4ZjAwJyxcblx0XHQnIzZiMDA2YicsXG5cdFx0JyM4ZmIzMDAnLFxuXHRcdCcjYjMwMDAwJyxcblx0XHQnI2JlYmViZScsXG5cdFx0JyM4MGZmODAnLFxuXHRcdCcjODBjOWZmJyxcblx0XHQnI2ZmYzA4MCcsXG5cdFx0JyNmZmU2ODAnLFxuXHRcdCcjYWE4MGZmJyxcblx0XHQnI2VlMDBjYycsXG5cdFx0JyNmZjgwODAnLFxuXHRcdCcjNjY2NjAwJyxcblx0XHQnI2ZmYmZmZicsXG5cdFx0JyMwMGZmY2MnLFxuXHRcdCcjY2M2Njk5Jyxcblx0XHQnIzk5OTkwMCdcblx0XTtcbn07XG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkZpeHR1cmVzLlJhbmRvbURhdGEnKTtcblxuUmlja3NoYXcuRml4dHVyZXMuUmFuZG9tRGF0YSA9IGZ1bmN0aW9uKHRpbWVJbnRlcnZhbCkge1xuXG5cdHZhciBhZGREYXRhO1xuXHR0aW1lSW50ZXJ2YWwgPSB0aW1lSW50ZXJ2YWwgfHwgMTtcblxuXHR2YXIgbGFzdFJhbmRvbVZhbHVlID0gMjAwO1xuXG5cdHZhciB0aW1lQmFzZSA9IE1hdGguZmxvb3IobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwKTtcblxuXHR0aGlzLmFkZERhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG5cblx0XHR2YXIgcmFuZG9tVmFsdWUgPSBNYXRoLnJhbmRvbSgpICogMTAwICsgMTUgKyBsYXN0UmFuZG9tVmFsdWU7XG5cdFx0dmFyIGluZGV4ID0gZGF0YVswXS5sZW5ndGg7XG5cblx0XHR2YXIgY291bnRlciA9IDE7XG5cblx0XHRkYXRhLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXHRcdFx0dmFyIHJhbmRvbVZhcmlhbmNlID0gTWF0aC5yYW5kb20oKSAqIDIwO1xuXHRcdFx0dmFyIHYgPSByYW5kb21WYWx1ZSAvIDI1ICArIGNvdW50ZXIrKyArXG5cdFx0XHRcdChNYXRoLmNvcygoaW5kZXggKiBjb3VudGVyICogMTEpIC8gOTYwKSArIDIpICogMTUgK1xuXHRcdFx0XHQoTWF0aC5jb3MoaW5kZXggLyA3KSArIDIpICogNyArXG5cdFx0XHRcdChNYXRoLmNvcyhpbmRleCAvIDE3KSArIDIpICogMTtcblxuXHRcdFx0c2VyaWVzLnB1c2goIHsgeDogKGluZGV4ICogdGltZUludGVydmFsKSArIHRpbWVCYXNlLCB5OiB2ICsgcmFuZG9tVmFyaWFuY2UgfSApO1xuXHRcdH0gKTtcblxuXHRcdGxhc3RSYW5kb21WYWx1ZSA9IHJhbmRvbVZhbHVlICogMC44NTtcblx0fTtcblxuXHR0aGlzLnJlbW92ZURhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG5cdFx0ZGF0YS5mb3JFYWNoKCBmdW5jdGlvbihzZXJpZXMpIHtcblx0XHRcdHNlcmllcy5zaGlmdCgpO1xuXHRcdH0gKTtcblx0XHR0aW1lQmFzZSArPSB0aW1lSW50ZXJ2YWw7XG5cdH07XG59O1xuXG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkZpeHR1cmVzLlRpbWUnKTtcblxuUmlja3NoYXcuRml4dHVyZXMuVGltZSA9IGZ1bmN0aW9uKCkge1xuXG5cdHZhciBzZWxmID0gdGhpcztcblxuXHR0aGlzLm1vbnRocyA9IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXTtcblxuXHR0aGlzLnVuaXRzID0gW1xuXHRcdHtcblx0XHRcdG5hbWU6ICdkZWNhZGUnLFxuXHRcdFx0c2Vjb25kczogODY0MDAgKiAzNjUuMjUgKiAxMCxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gKHBhcnNlSW50KGQuZ2V0VVRDRnVsbFllYXIoKSAvIDEwLCAxMCkgKiAxMCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICd5ZWFyJyxcblx0XHRcdHNlY29uZHM6IDg2NDAwICogMzY1LjI1LFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBkLmdldFVUQ0Z1bGxZZWFyKCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdtb250aCcsXG5cdFx0XHRzZWNvbmRzOiA4NjQwMCAqIDMwLjUsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHNlbGYubW9udGhzW2QuZ2V0VVRDTW9udGgoKV0gfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICd3ZWVrJyxcblx0XHRcdHNlY29uZHM6IDg2NDAwICogNyxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gc2VsZi5mb3JtYXREYXRlKGQpIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnZGF5Jyxcblx0XHRcdHNlY29uZHM6IDg2NDAwLFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBkLmdldFVUQ0RhdGUoKSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJzYgaG91cicsXG5cdFx0XHRzZWNvbmRzOiAzNjAwICogNixcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gc2VsZi5mb3JtYXRUaW1lKGQpIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnaG91cicsXG5cdFx0XHRzZWNvbmRzOiAzNjAwLFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBzZWxmLmZvcm1hdFRpbWUoZCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICcxNSBtaW51dGUnLFxuXHRcdFx0c2Vjb25kczogNjAgKiAxNSxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gc2VsZi5mb3JtYXRUaW1lKGQpIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnbWludXRlJyxcblx0XHRcdHNlY29uZHM6IDYwLFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBkLmdldFVUQ01pbnV0ZXMoKSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJzE1IHNlY29uZCcsXG5cdFx0XHRzZWNvbmRzOiAxNSxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5nZXRVVENTZWNvbmRzKCkgKyAncycgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdzZWNvbmQnLFxuXHRcdFx0c2Vjb25kczogMSxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5nZXRVVENTZWNvbmRzKCkgKyAncycgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdkZWNpc2Vjb25kJyxcblx0XHRcdHNlY29uZHM6IDEvMTAsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkgKyAnbXMnIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnY2VudGlzZWNvbmQnLFxuXHRcdFx0c2Vjb25kczogMS8xMDAsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkgKyAnbXMnIH1cblx0XHR9XG5cdF07XG5cblx0dGhpcy51bml0ID0gZnVuY3Rpb24odW5pdE5hbWUpIHtcblx0XHRyZXR1cm4gdGhpcy51bml0cy5maWx0ZXIoIGZ1bmN0aW9uKHVuaXQpIHsgcmV0dXJuIHVuaXROYW1lID09IHVuaXQubmFtZSB9ICkuc2hpZnQoKTtcblx0fTtcblxuXHR0aGlzLmZvcm1hdERhdGUgPSBmdW5jdGlvbihkKSB7XG5cdFx0cmV0dXJuIGQzLnRpbWUuZm9ybWF0KCclYiAlZScpKGQpO1xuXHR9O1xuXG5cdHRoaXMuZm9ybWF0VGltZSA9IGZ1bmN0aW9uKGQpIHtcblx0XHRyZXR1cm4gZC50b1VUQ1N0cmluZygpLm1hdGNoKC8oXFxkKzpcXGQrKTovKVsxXTtcblx0fTtcblxuXHR0aGlzLmNlaWwgPSBmdW5jdGlvbih0aW1lLCB1bml0KSB7XG5cblx0XHR2YXIgZGF0ZSwgZmxvb3IsIHllYXI7XG5cblx0XHRpZiAodW5pdC5uYW1lID09ICdtb250aCcpIHtcblxuXHRcdFx0ZGF0ZSA9IG5ldyBEYXRlKHRpbWUgKiAxMDAwKTtcblxuXHRcdFx0Zmxvb3IgPSBEYXRlLlVUQyhkYXRlLmdldFVUQ0Z1bGxZZWFyKCksIGRhdGUuZ2V0VVRDTW9udGgoKSkgLyAxMDAwO1xuXHRcdFx0aWYgKGZsb29yID09IHRpbWUpIHJldHVybiB0aW1lO1xuXG5cdFx0XHR5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuXHRcdFx0dmFyIG1vbnRoID0gZGF0ZS5nZXRVVENNb250aCgpO1xuXG5cdFx0XHRpZiAobW9udGggPT0gMTEpIHtcblx0XHRcdFx0bW9udGggPSAwO1xuXHRcdFx0XHR5ZWFyID0geWVhciArIDE7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtb250aCArPSAxO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gRGF0ZS5VVEMoeWVhciwgbW9udGgpIC8gMTAwMDtcblx0XHR9XG5cblx0XHRpZiAodW5pdC5uYW1lID09ICd5ZWFyJykge1xuXG5cdFx0XHRkYXRlID0gbmV3IERhdGUodGltZSAqIDEwMDApO1xuXG5cdFx0XHRmbG9vciA9IERhdGUuVVRDKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSwgMCkgLyAxMDAwO1xuXHRcdFx0aWYgKGZsb29yID09IHRpbWUpIHJldHVybiB0aW1lO1xuXG5cdFx0XHR5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgMTtcblxuXHRcdFx0cmV0dXJuIERhdGUuVVRDKHllYXIsIDApIC8gMTAwMDtcblx0XHR9XG5cblx0XHRyZXR1cm4gTWF0aC5jZWlsKHRpbWUgLyB1bml0LnNlY29uZHMpICogdW5pdC5zZWNvbmRzO1xuXHR9O1xufTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuRml4dHVyZXMuVGltZS5Mb2NhbCcpO1xuXG5SaWNrc2hhdy5GaXh0dXJlcy5UaW1lLkxvY2FsID0gZnVuY3Rpb24oKSB7XG5cblx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdHRoaXMubW9udGhzID0gWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddO1xuXG5cdHRoaXMudW5pdHMgPSBbXG5cdFx0e1xuXHRcdFx0bmFtZTogJ2RlY2FkZScsXG5cdFx0XHRzZWNvbmRzOiA4NjQwMCAqIDM2NS4yNSAqIDEwLFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiAocGFyc2VJbnQoZC5nZXRGdWxsWWVhcigpIC8gMTAsIDEwKSAqIDEwKSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJ3llYXInLFxuXHRcdFx0c2Vjb25kczogODY0MDAgKiAzNjUuMjUsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZ2V0RnVsbFllYXIoKSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJ21vbnRoJyxcblx0XHRcdHNlY29uZHM6IDg2NDAwICogMzAuNSxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gc2VsZi5tb250aHNbZC5nZXRNb250aCgpXSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJ3dlZWsnLFxuXHRcdFx0c2Vjb25kczogODY0MDAgKiA3LFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBzZWxmLmZvcm1hdERhdGUoZCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdkYXknLFxuXHRcdFx0c2Vjb25kczogODY0MDAsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZ2V0RGF0ZSgpIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnNiBob3VyJyxcblx0XHRcdHNlY29uZHM6IDM2MDAgKiA2LFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBzZWxmLmZvcm1hdFRpbWUoZCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdob3VyJyxcblx0XHRcdHNlY29uZHM6IDM2MDAsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHNlbGYuZm9ybWF0VGltZShkKSB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJzE1IG1pbnV0ZScsXG5cdFx0XHRzZWNvbmRzOiA2MCAqIDE1LFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBzZWxmLmZvcm1hdFRpbWUoZCkgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdtaW51dGUnLFxuXHRcdFx0c2Vjb25kczogNjAsXG5cdFx0XHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuZ2V0TWludXRlcygpIH1cblx0XHR9LCB7XG5cdFx0XHRuYW1lOiAnMTUgc2Vjb25kJyxcblx0XHRcdHNlY29uZHM6IDE1LFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBkLmdldFNlY29uZHMoKSArICdzJyB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJ3NlY29uZCcsXG5cdFx0XHRzZWNvbmRzOiAxLFxuXHRcdFx0Zm9ybWF0dGVyOiBmdW5jdGlvbihkKSB7IHJldHVybiBkLmdldFNlY29uZHMoKSArICdzJyB9XG5cdFx0fSwge1xuXHRcdFx0bmFtZTogJ2RlY2lzZWNvbmQnLFxuXHRcdFx0c2Vjb25kczogMS8xMCxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5nZXRNaWxsaXNlY29uZHMoKSArICdtcycgfVxuXHRcdH0sIHtcblx0XHRcdG5hbWU6ICdjZW50aXNlY29uZCcsXG5cdFx0XHRzZWNvbmRzOiAxLzEwMCxcblx0XHRcdGZvcm1hdHRlcjogZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5nZXRNaWxsaXNlY29uZHMoKSArICdtcycgfVxuXHRcdH1cblx0XTtcblxuXHR0aGlzLnVuaXQgPSBmdW5jdGlvbih1bml0TmFtZSkge1xuXHRcdHJldHVybiB0aGlzLnVuaXRzLmZpbHRlciggZnVuY3Rpb24odW5pdCkgeyByZXR1cm4gdW5pdE5hbWUgPT0gdW5pdC5uYW1lIH0gKS5zaGlmdCgpO1xuXHR9O1xuXG5cdHRoaXMuZm9ybWF0RGF0ZSA9IGZ1bmN0aW9uKGQpIHtcblx0XHRyZXR1cm4gZDMudGltZS5mb3JtYXQoJyViICVlJykoZCk7XG5cdH07XG5cblx0dGhpcy5mb3JtYXRUaW1lID0gZnVuY3Rpb24oZCkge1xuXHRcdHJldHVybiBkLnRvU3RyaW5nKCkubWF0Y2goLyhcXGQrOlxcZCspOi8pWzFdO1xuXHR9O1xuXG5cdHRoaXMuY2VpbCA9IGZ1bmN0aW9uKHRpbWUsIHVuaXQpIHtcblxuXHRcdHZhciBkYXRlLCBmbG9vciwgeWVhcjtcblxuXHRcdGlmICh1bml0Lm5hbWUgPT0gJ2RheScpIHtcblxuXHRcdFx0dmFyIG5lYXJGdXR1cmUgPSBuZXcgRGF0ZSgodGltZSArIHVuaXQuc2Vjb25kcyAtIDEpICogMTAwMCk7XG5cblx0XHRcdHZhciByb3VuZGVkID0gbmV3IERhdGUoMCk7XG5cdFx0XHRyb3VuZGVkLnNldEZ1bGxZZWFyKG5lYXJGdXR1cmUuZ2V0RnVsbFllYXIoKSk7XG5cdFx0XHRyb3VuZGVkLnNldE1vbnRoKG5lYXJGdXR1cmUuZ2V0TW9udGgoKSk7XG5cdFx0XHRyb3VuZGVkLnNldERhdGUobmVhckZ1dHVyZS5nZXREYXRlKCkpO1xuXHRcdFx0cm91bmRlZC5zZXRNaWxsaXNlY29uZHMoMCk7XG5cdFx0XHRyb3VuZGVkLnNldFNlY29uZHMoMCk7XG5cdFx0XHRyb3VuZGVkLnNldE1pbnV0ZXMoMCk7XG5cdFx0XHRyb3VuZGVkLnNldEhvdXJzKDApO1xuXG5cdFx0XHRyZXR1cm4gcm91bmRlZC5nZXRUaW1lKCkgLyAxMDAwO1xuXHRcdH1cblxuXHRcdGlmICh1bml0Lm5hbWUgPT0gJ21vbnRoJykge1xuXG5cdFx0XHRkYXRlID0gbmV3IERhdGUodGltZSAqIDEwMDApO1xuXG5cdFx0XHRmbG9vciA9IG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpKS5nZXRUaW1lKCkgLyAxMDAwO1xuXHRcdFx0aWYgKGZsb29yID09IHRpbWUpIHJldHVybiB0aW1lO1xuXG5cdFx0XHR5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuXHRcdFx0dmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuXG5cdFx0XHRpZiAobW9udGggPT0gMTEpIHtcblx0XHRcdFx0bW9udGggPSAwO1xuXHRcdFx0XHR5ZWFyID0geWVhciArIDE7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtb250aCArPSAxO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbmV3IERhdGUoeWVhciwgbW9udGgpLmdldFRpbWUoKSAvIDEwMDA7XG5cdFx0fVxuXG5cdFx0aWYgKHVuaXQubmFtZSA9PSAneWVhcicpIHtcblxuXHRcdFx0ZGF0ZSA9IG5ldyBEYXRlKHRpbWUgKiAxMDAwKTtcblxuXHRcdFx0Zmxvb3IgPSBuZXcgRGF0ZShkYXRlLmdldFVUQ0Z1bGxZZWFyKCksIDApLmdldFRpbWUoKSAvIDEwMDA7XG5cdFx0XHRpZiAoZmxvb3IgPT0gdGltZSkgcmV0dXJuIHRpbWU7XG5cblx0XHRcdHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAxO1xuXG5cdFx0XHRyZXR1cm4gbmV3IERhdGUoeWVhciwgMCkuZ2V0VGltZSgpIC8gMTAwMDtcblx0XHR9XG5cblx0XHRyZXR1cm4gTWF0aC5jZWlsKHRpbWUgLyB1bml0LnNlY29uZHMpICogdW5pdC5zZWNvbmRzO1xuXHR9O1xufTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuRml4dHVyZXMuTnVtYmVyJyk7XG5cblJpY2tzaGF3LkZpeHR1cmVzLk51bWJlci5mb3JtYXRLTUJUID0gZnVuY3Rpb24oeSkge1xuXHR2YXIgYWJzX3kgPSBNYXRoLmFicyh5KTtcblx0aWYgKGFic195ID49IDEwMDAwMDAwMDAwMDApICAgeyByZXR1cm4geSAvIDEwMDAwMDAwMDAwMDAgKyBcIlRcIiB9XG5cdGVsc2UgaWYgKGFic195ID49IDEwMDAwMDAwMDApIHsgcmV0dXJuIHkgLyAxMDAwMDAwMDAwICsgXCJCXCIgfVxuXHRlbHNlIGlmIChhYnNfeSA+PSAxMDAwMDAwKSAgICB7IHJldHVybiB5IC8gMTAwMDAwMCArIFwiTVwiIH1cblx0ZWxzZSBpZiAoYWJzX3kgPj0gMTAwMCkgICAgICAgeyByZXR1cm4geSAvIDEwMDAgKyBcIktcIiB9XG5cdGVsc2UgaWYgKGFic195IDwgMSAmJiB5ID4gMCkgIHsgcmV0dXJuIHkudG9GaXhlZCgyKSB9XG5cdGVsc2UgaWYgKGFic195ID09PSAwKSAgICAgICAgIHsgcmV0dXJuICcnIH1cblx0ZWxzZSAgICAgICAgICAgICAgICAgICAgICB7IHJldHVybiB5IH1cbn07XG5cblJpY2tzaGF3LkZpeHR1cmVzLk51bWJlci5mb3JtYXRCYXNlMTAyNEtNR1RQID0gZnVuY3Rpb24oeSkge1xuICAgIHZhciBhYnNfeSA9IE1hdGguYWJzKHkpO1xuICAgIGlmIChhYnNfeSA+PSAxMTI1ODk5OTA2ODQyNjI0KSAgeyByZXR1cm4geSAvIDExMjU4OTk5MDY4NDI2MjQgKyBcIlBcIiB9XG4gICAgZWxzZSBpZiAoYWJzX3kgPj0gMTA5OTUxMTYyNzc3Nil7IHJldHVybiB5IC8gMTA5OTUxMTYyNzc3NiArIFwiVFwiIH1cbiAgICBlbHNlIGlmIChhYnNfeSA+PSAxMDczNzQxODI0KSAgIHsgcmV0dXJuIHkgLyAxMDczNzQxODI0ICsgXCJHXCIgfVxuICAgIGVsc2UgaWYgKGFic195ID49IDEwNDg1NzYpICAgICAgeyByZXR1cm4geSAvIDEwNDg1NzYgKyBcIk1cIiB9XG4gICAgZWxzZSBpZiAoYWJzX3kgPj0gMTAyNCkgICAgICAgICB7IHJldHVybiB5IC8gMTAyNCArIFwiS1wiIH1cbiAgICBlbHNlIGlmIChhYnNfeSA8IDEgJiYgeSA+IDApICAgIHsgcmV0dXJuIHkudG9GaXhlZCgyKSB9XG4gICAgZWxzZSBpZiAoYWJzX3kgPT09IDApICAgICAgICAgICB7IHJldHVybiAnJyB9XG4gICAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgIHsgcmV0dXJuIHkgfVxufTtcblJpY2tzaGF3Lm5hbWVzcGFjZShcIlJpY2tzaGF3LkNvbG9yLlBhbGV0dGVcIik7XG5cblJpY2tzaGF3LkNvbG9yLlBhbGV0dGUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0dmFyIGNvbG9yID0gbmV3IFJpY2tzaGF3LkZpeHR1cmVzLkNvbG9yKCk7XG5cblx0YXJncyA9IGFyZ3MgfHwge307XG5cdHRoaXMuc2NoZW1lcyA9IHt9O1xuXG5cdHRoaXMuc2NoZW1lID0gY29sb3Iuc2NoZW1lc1thcmdzLnNjaGVtZV0gfHwgYXJncy5zY2hlbWUgfHwgY29sb3Iuc2NoZW1lcy5jb2xvcndoZWVsO1xuXHR0aGlzLnJ1bm5pbmdJbmRleCA9IDA7XG5cdHRoaXMuZ2VuZXJhdG9ySW5kZXggPSAwO1xuXG5cdGlmIChhcmdzLmludGVycG9sYXRlZFN0b3BDb3VudCkge1xuXHRcdHZhciBzY2hlbWVDb3VudCA9IHRoaXMuc2NoZW1lLmxlbmd0aCAtIDE7XG5cdFx0dmFyIGksIGosIHNjaGVtZSA9IFtdO1xuXHRcdGZvciAoaSA9IDA7IGkgPCBzY2hlbWVDb3VudDsgaSsrKSB7XG5cdFx0XHRzY2hlbWUucHVzaCh0aGlzLnNjaGVtZVtpXSk7XG5cdFx0XHR2YXIgZ2VuZXJhdG9yID0gZDMuaW50ZXJwb2xhdGVIc2wodGhpcy5zY2hlbWVbaV0sIHRoaXMuc2NoZW1lW2kgKyAxXSk7XG5cdFx0XHRmb3IgKGogPSAxOyBqIDwgYXJncy5pbnRlcnBvbGF0ZWRTdG9wQ291bnQ7IGorKykge1xuXHRcdFx0XHRzY2hlbWUucHVzaChnZW5lcmF0b3IoKDEgLyBhcmdzLmludGVycG9sYXRlZFN0b3BDb3VudCkgKiBqKSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHNjaGVtZS5wdXNoKHRoaXMuc2NoZW1lW3RoaXMuc2NoZW1lLmxlbmd0aCAtIDFdKTtcblx0XHR0aGlzLnNjaGVtZSA9IHNjaGVtZTtcblx0fVxuXHR0aGlzLnJvdGF0ZUNvdW50ID0gdGhpcy5zY2hlbWUubGVuZ3RoO1xuXG5cdHRoaXMuY29sb3IgPSBmdW5jdGlvbihrZXkpIHtcblx0XHRyZXR1cm4gdGhpcy5zY2hlbWVba2V5XSB8fCB0aGlzLnNjaGVtZVt0aGlzLnJ1bm5pbmdJbmRleCsrXSB8fCB0aGlzLmludGVycG9sYXRlQ29sb3IoKSB8fCAnIzgwODA4MCc7XG5cdH07XG5cblx0dGhpcy5pbnRlcnBvbGF0ZUNvbG9yID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCFBcnJheS5pc0FycmF5KHRoaXMuc2NoZW1lKSkgcmV0dXJuO1xuXHRcdHZhciBjb2xvcjtcblx0XHRpZiAodGhpcy5nZW5lcmF0b3JJbmRleCA9PSB0aGlzLnJvdGF0ZUNvdW50ICogMiAtIDEpIHtcblx0XHRcdGNvbG9yID0gZDMuaW50ZXJwb2xhdGVIc2wodGhpcy5zY2hlbWVbdGhpcy5nZW5lcmF0b3JJbmRleF0sIHRoaXMuc2NoZW1lWzBdKSgwLjUpO1xuXHRcdFx0dGhpcy5nZW5lcmF0b3JJbmRleCA9IDA7XG5cdFx0XHR0aGlzLnJvdGF0ZUNvdW50ICo9IDI7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbG9yID0gZDMuaW50ZXJwb2xhdGVIc2wodGhpcy5zY2hlbWVbdGhpcy5nZW5lcmF0b3JJbmRleF0sIHRoaXMuc2NoZW1lW3RoaXMuZ2VuZXJhdG9ySW5kZXggKyAxXSkoMC41KTtcblx0XHRcdHRoaXMuZ2VuZXJhdG9ySW5kZXgrKztcblx0XHR9XG5cdFx0dGhpcy5zY2hlbWUucHVzaChjb2xvcik7XG5cdFx0cmV0dXJuIGNvbG9yO1xuXHR9O1xuXG59O1xuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5BamF4Jyk7XG5cblJpY2tzaGF3LkdyYXBoLkFqYXggPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoIHtcblxuXHRpbml0aWFsaXplOiBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHR0aGlzLmRhdGFVUkwgPSBhcmdzLmRhdGFVUkw7XG5cblx0XHR0aGlzLm9uRGF0YSA9IGFyZ3Mub25EYXRhIHx8IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQgfTtcblx0XHR0aGlzLm9uQ29tcGxldGUgPSBhcmdzLm9uQ29tcGxldGUgfHwgZnVuY3Rpb24oKSB7fTtcblx0XHR0aGlzLm9uRXJyb3IgPSBhcmdzLm9uRXJyb3IgfHwgZnVuY3Rpb24oKSB7fTtcblxuXHRcdHRoaXMuYXJncyA9IGFyZ3M7IC8vIHBhc3MgdGhyb3VnaCB0byBSaWNrc2hhdy5HcmFwaFxuXG5cdFx0dGhpcy5yZXF1ZXN0KCk7XG5cdH0sXG5cblx0cmVxdWVzdDogZnVuY3Rpb24oKSB7XG5cblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB0aGlzLmRhdGFVUkwsXG5cdFx0XHRkYXRhVHlwZTogJ2pzb24nLFxuXHRcdFx0c3VjY2VzczogdGhpcy5zdWNjZXNzLmJpbmQodGhpcyksXG5cdFx0XHRlcnJvcjogdGhpcy5lcnJvci5iaW5kKHRoaXMpXG5cdFx0fSApO1xuXHR9LFxuXG5cdGVycm9yOiBmdW5jdGlvbigpIHtcblxuXHRcdGNvbnNvbGUubG9nKFwiZXJyb3IgbG9hZGluZyBkYXRhVVJMOiBcIiArIHRoaXMuZGF0YVVSTCk7XG5cdFx0dGhpcy5vbkVycm9yKHRoaXMpO1xuXHR9LFxuXG5cdHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEsIHN0YXR1cykge1xuXG5cdFx0ZGF0YSA9IHRoaXMub25EYXRhKGRhdGEpO1xuXHRcdHRoaXMuYXJncy5zZXJpZXMgPSB0aGlzLl9zcGxpY2UoeyBkYXRhOiBkYXRhLCBzZXJpZXM6IHRoaXMuYXJncy5zZXJpZXMgfSk7XG5cblx0XHR0aGlzLmdyYXBoID0gdGhpcy5ncmFwaCB8fCBuZXcgUmlja3NoYXcuR3JhcGgodGhpcy5hcmdzKTtcblx0XHR0aGlzLmdyYXBoLnJlbmRlcigpO1xuXG5cdFx0dGhpcy5vbkNvbXBsZXRlKHRoaXMpO1xuXHR9LFxuXG5cdF9zcGxpY2U6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdHZhciBkYXRhID0gYXJncy5kYXRhO1xuXHRcdHZhciBzZXJpZXMgPSBhcmdzLnNlcmllcztcblxuXHRcdGlmICghYXJncy5zZXJpZXMpIHJldHVybiBkYXRhO1xuXG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHMpIHtcblxuXHRcdFx0dmFyIHNlcmllc0tleSA9IHMua2V5IHx8IHMubmFtZTtcblx0XHRcdGlmICghc2VyaWVzS2V5KSB0aHJvdyBcInNlcmllcyBuZWVkcyBhIGtleSBvciBhIG5hbWVcIjtcblxuXHRcdFx0ZGF0YS5mb3JFYWNoKCBmdW5jdGlvbihkKSB7XG5cblx0XHRcdFx0dmFyIGRhdGFLZXkgPSBkLmtleSB8fCBkLm5hbWU7XG5cdFx0XHRcdGlmICghZGF0YUtleSkgdGhyb3cgXCJkYXRhIG5lZWRzIGEga2V5IG9yIGEgbmFtZVwiO1xuXG5cdFx0XHRcdGlmIChzZXJpZXNLZXkgPT0gZGF0YUtleSkge1xuXHRcdFx0XHRcdHZhciBwcm9wZXJ0aWVzID0gWydjb2xvcicsICduYW1lJywgJ2RhdGEnXTtcblx0XHRcdFx0XHRwcm9wZXJ0aWVzLmZvckVhY2goIGZ1bmN0aW9uKHApIHtcblx0XHRcdFx0XHRcdGlmIChkW3BdKSBzW3BdID0gZFtwXTtcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cblx0XHRyZXR1cm4gc2VyaWVzO1xuXHR9XG59ICk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguQW5ub3RhdGUnKTtcblxuUmlja3NoYXcuR3JhcGguQW5ub3RhdGUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaCA9IGFyZ3MuZ3JhcGg7XG5cdHRoaXMuZWxlbWVudHMgPSB7IHRpbWVsaW5lOiBhcmdzLmVsZW1lbnQgfTtcblx0XG5cdHZhciBzZWxmID0gdGhpcztcblxuXHR0aGlzLmRhdGEgPSB7fTtcblxuXHR0aGlzLmVsZW1lbnRzLnRpbWVsaW5lLmNsYXNzTGlzdC5hZGQoJ3JpY2tzaGF3X2Fubm90YXRpb25fdGltZWxpbmUnKTtcblxuXHR0aGlzLmFkZCA9IGZ1bmN0aW9uKHRpbWUsIGNvbnRlbnQsIGVuZF90aW1lKSB7XG5cdFx0c2VsZi5kYXRhW3RpbWVdID0gc2VsZi5kYXRhW3RpbWVdIHx8IHsnYm94ZXMnOiBbXX07XG5cdFx0c2VsZi5kYXRhW3RpbWVdLmJveGVzLnB1c2goe2NvbnRlbnQ6IGNvbnRlbnQsIGVuZDogZW5kX3RpbWV9KTtcblx0fTtcblxuXHR0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0Umlja3NoYXcua2V5cyhzZWxmLmRhdGEpLmZvckVhY2goIGZ1bmN0aW9uKHRpbWUpIHtcblxuXHRcdFx0dmFyIGFubm90YXRpb24gPSBzZWxmLmRhdGFbdGltZV07XG5cdFx0XHR2YXIgbGVmdCA9IHNlbGYuZ3JhcGgueCh0aW1lKTtcblxuXHRcdFx0aWYgKGxlZnQgPCAwIHx8IGxlZnQgPiBzZWxmLmdyYXBoLngucmFuZ2UoKVsxXSkge1xuXHRcdFx0XHRpZiAoYW5ub3RhdGlvbi5lbGVtZW50KSB7XG5cdFx0XHRcdFx0YW5ub3RhdGlvbi5saW5lLmNsYXNzTGlzdC5hZGQoJ29mZnNjcmVlbicpO1xuXHRcdFx0XHRcdGFubm90YXRpb24uZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YW5ub3RhdGlvbi5ib3hlcy5mb3JFYWNoKCBmdW5jdGlvbihib3gpIHtcblx0XHRcdFx0XHRpZiAoIGJveC5yYW5nZUVsZW1lbnQgKSBib3gucmFuZ2VFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ29mZnNjcmVlbicpO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICghYW5ub3RhdGlvbi5lbGVtZW50KSB7XG5cdFx0XHRcdHZhciBlbGVtZW50ID0gYW5ub3RhdGlvbi5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYW5ub3RhdGlvbicpO1xuXHRcdFx0XHR0aGlzLmVsZW1lbnRzLnRpbWVsaW5lLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXHRcdFx0XHRlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG5cdFx0XHRcdFx0YW5ub3RhdGlvbi5saW5lLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xuXHRcdFx0XHRcdGFubm90YXRpb24uYm94ZXMuZm9yRWFjaCggZnVuY3Rpb24oYm94KSB7XG5cdFx0XHRcdFx0XHRpZiAoIGJveC5yYW5nZUVsZW1lbnQgKSBib3gucmFuZ2VFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9LCBmYWxzZSk7XG5cdFx0XHRcdFx0XG5cdFx0XHR9XG5cblx0XHRcdGFubm90YXRpb24uZWxlbWVudC5zdHlsZS5sZWZ0ID0gbGVmdCArICdweCc7XG5cdFx0XHRhbm5vdGF0aW9uLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cblx0XHRcdGFubm90YXRpb24uYm94ZXMuZm9yRWFjaCggZnVuY3Rpb24oYm94KSB7XG5cblxuXHRcdFx0XHR2YXIgZWxlbWVudCA9IGJveC5lbGVtZW50O1xuXG5cdFx0XHRcdGlmICghZWxlbWVudCkge1xuXHRcdFx0XHRcdGVsZW1lbnQgPSBib3guZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY29udGVudCcpO1xuXHRcdFx0XHRcdGVsZW1lbnQuaW5uZXJIVE1MID0gYm94LmNvbnRlbnQ7XG5cdFx0XHRcdFx0YW5ub3RhdGlvbi5lbGVtZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXG5cdFx0XHRcdFx0YW5ub3RhdGlvbi5saW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRcdFx0YW5ub3RhdGlvbi5saW5lLmNsYXNzTGlzdC5hZGQoJ2Fubm90YXRpb25fbGluZScpO1xuXHRcdFx0XHRcdHNlbGYuZ3JhcGguZWxlbWVudC5hcHBlbmRDaGlsZChhbm5vdGF0aW9uLmxpbmUpO1xuXG5cdFx0XHRcdFx0aWYgKCBib3guZW5kICkge1xuXHRcdFx0XHRcdFx0Ym94LnJhbmdlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0XHRcdFx0Ym94LnJhbmdlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhbm5vdGF0aW9uX3JhbmdlJyk7XG5cdFx0XHRcdFx0XHRzZWxmLmdyYXBoLmVsZW1lbnQuYXBwZW5kQ2hpbGQoYm94LnJhbmdlRWxlbWVudCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIGJveC5lbmQgKSB7XG5cblx0XHRcdFx0XHR2YXIgYW5ub3RhdGlvblJhbmdlU3RhcnQgPSBsZWZ0O1xuXHRcdFx0XHRcdHZhciBhbm5vdGF0aW9uUmFuZ2VFbmQgICA9IE1hdGgubWluKCBzZWxmLmdyYXBoLngoYm94LmVuZCksIHNlbGYuZ3JhcGgueC5yYW5nZSgpWzFdICk7XG5cblx0XHRcdFx0XHQvLyBhbm5vdGF0aW9uIG1ha2VzIG1vcmUgc2Vuc2UgYXQgZW5kXG5cdFx0XHRcdFx0aWYgKCBhbm5vdGF0aW9uUmFuZ2VTdGFydCA+IGFubm90YXRpb25SYW5nZUVuZCApIHtcblx0XHRcdFx0XHRcdGFubm90YXRpb25SYW5nZUVuZCAgID0gbGVmdDtcblx0XHRcdFx0XHRcdGFubm90YXRpb25SYW5nZVN0YXJ0ID0gTWF0aC5tYXgoIHNlbGYuZ3JhcGgueChib3guZW5kKSwgc2VsZi5ncmFwaC54LnJhbmdlKClbMF0gKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR2YXIgYW5ub3RhdGlvblJhbmdlV2lkdGggPSBhbm5vdGF0aW9uUmFuZ2VFbmQgLSBhbm5vdGF0aW9uUmFuZ2VTdGFydDtcblxuXHRcdFx0XHRcdGJveC5yYW5nZUVsZW1lbnQuc3R5bGUubGVmdCAgPSBhbm5vdGF0aW9uUmFuZ2VTdGFydCArICdweCc7XG5cdFx0XHRcdFx0Ym94LnJhbmdlRWxlbWVudC5zdHlsZS53aWR0aCA9IGFubm90YXRpb25SYW5nZVdpZHRoICsgJ3B4JztcblxuXHRcdFx0XHRcdGJveC5yYW5nZUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnb2Zmc2NyZWVuJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRhbm5vdGF0aW9uLmxpbmUuY2xhc3NMaXN0LnJlbW92ZSgnb2Zmc2NyZWVuJyk7XG5cdFx0XHRcdGFubm90YXRpb24ubGluZS5zdHlsZS5sZWZ0ID0gbGVmdCArICdweCc7XG5cdFx0XHR9ICk7XG5cdFx0fSwgdGhpcyApO1xuXHR9O1xuXG5cdHRoaXMuZ3JhcGgub25VcGRhdGUoIGZ1bmN0aW9uKCkgeyBzZWxmLnVwZGF0ZSgpIH0gKTtcbn07XG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkdyYXBoLkF4aXMuVGltZScpO1xuXG5SaWNrc2hhdy5HcmFwaC5BeGlzLlRpbWUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdHRoaXMuZ3JhcGggPSBhcmdzLmdyYXBoO1xuXHR0aGlzLmVsZW1lbnRzID0gW107XG5cdHRoaXMudGlja3NUcmVhdG1lbnQgPSBhcmdzLnRpY2tzVHJlYXRtZW50IHx8ICdwbGFpbic7XG5cdHRoaXMuZml4ZWRUaW1lVW5pdCA9IGFyZ3MudGltZVVuaXQ7XG5cblx0dmFyIHRpbWUgPSBhcmdzLnRpbWVGaXh0dXJlIHx8IG5ldyBSaWNrc2hhdy5GaXh0dXJlcy5UaW1lKCk7XG5cblx0dGhpcy5hcHByb3ByaWF0ZVRpbWVVbml0ID0gZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgdW5pdDtcblx0XHR2YXIgdW5pdHMgPSB0aW1lLnVuaXRzO1xuXG5cdFx0dmFyIGRvbWFpbiA9IHRoaXMuZ3JhcGgueC5kb21haW4oKTtcblx0XHR2YXIgcmFuZ2VTZWNvbmRzID0gZG9tYWluWzFdIC0gZG9tYWluWzBdO1xuXG5cdFx0dW5pdHMuZm9yRWFjaCggZnVuY3Rpb24odSkge1xuXHRcdFx0aWYgKE1hdGguZmxvb3IocmFuZ2VTZWNvbmRzIC8gdS5zZWNvbmRzKSA+PSAyKSB7XG5cdFx0XHRcdHVuaXQgPSB1bml0IHx8IHU7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuICh1bml0IHx8IHRpbWUudW5pdHNbdGltZS51bml0cy5sZW5ndGggLSAxXSk7XG5cdH07XG5cblx0dGhpcy50aWNrT2Zmc2V0cyA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIGRvbWFpbiA9IHRoaXMuZ3JhcGgueC5kb21haW4oKTtcblxuXHRcdHZhciB1bml0ID0gdGhpcy5maXhlZFRpbWVVbml0IHx8IHRoaXMuYXBwcm9wcmlhdGVUaW1lVW5pdCgpO1xuXHRcdHZhciBjb3VudCA9IE1hdGguY2VpbCgoZG9tYWluWzFdIC0gZG9tYWluWzBdKSAvIHVuaXQuc2Vjb25kcyk7XG5cblx0XHR2YXIgcnVubmluZ1RpY2sgPSBkb21haW5bMF07XG5cblx0XHR2YXIgb2Zmc2V0cyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG5cblx0XHRcdHZhciB0aWNrVmFsdWUgPSB0aW1lLmNlaWwocnVubmluZ1RpY2ssIHVuaXQpO1xuXHRcdFx0cnVubmluZ1RpY2sgPSB0aWNrVmFsdWUgKyB1bml0LnNlY29uZHMgLyAyO1xuXG5cdFx0XHRvZmZzZXRzLnB1c2goIHsgdmFsdWU6IHRpY2tWYWx1ZSwgdW5pdDogdW5pdCB9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9mZnNldHM7XG5cdH07XG5cblx0dGhpcy5yZW5kZXIgPSBmdW5jdGlvbigpIHtcblxuXHRcdHRoaXMuZWxlbWVudHMuZm9yRWFjaCggZnVuY3Rpb24oZSkge1xuXHRcdFx0ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpO1xuXHRcdH0gKTtcblxuXHRcdHRoaXMuZWxlbWVudHMgPSBbXTtcblxuXHRcdHZhciBvZmZzZXRzID0gdGhpcy50aWNrT2Zmc2V0cygpO1xuXG5cdFx0b2Zmc2V0cy5mb3JFYWNoKCBmdW5jdGlvbihvKSB7XG5cdFx0XHRcblx0XHRcdGlmIChzZWxmLmdyYXBoLngoby52YWx1ZSkgPiBzZWxmLmdyYXBoLngucmFuZ2UoKVsxXSkgcmV0dXJuO1xuXHRcblx0XHRcdHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRlbGVtZW50LnN0eWxlLmxlZnQgPSBzZWxmLmdyYXBoLngoby52YWx1ZSkgKyAncHgnO1xuXHRcdFx0ZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd4X3RpY2snKTtcblx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LmFkZChzZWxmLnRpY2tzVHJlYXRtZW50KTtcblxuXHRcdFx0dmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHR0aXRsZS5jbGFzc0xpc3QuYWRkKCd0aXRsZScpO1xuXHRcdFx0dGl0bGUuaW5uZXJIVE1MID0gby51bml0LmZvcm1hdHRlcihuZXcgRGF0ZShvLnZhbHVlICogMTAwMCkpO1xuXHRcdFx0ZWxlbWVudC5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cblx0XHRcdHNlbGYuZ3JhcGguZWxlbWVudC5hcHBlbmRDaGlsZChlbGVtZW50KTtcblx0XHRcdHNlbGYuZWxlbWVudHMucHVzaChlbGVtZW50KTtcblxuXHRcdH0gKTtcblx0fTtcblxuXHR0aGlzLmdyYXBoLm9uVXBkYXRlKCBmdW5jdGlvbigpIHsgc2VsZi5yZW5kZXIoKSB9ICk7XG59O1xuXG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkdyYXBoLkF4aXMuWCcpO1xuXG5SaWNrc2hhdy5HcmFwaC5BeGlzLlggPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0dmFyIHNlbGYgPSB0aGlzO1xuXHR2YXIgYmVydGhSYXRlID0gMC4xMDtcblxuXHR0aGlzLmluaXRpYWxpemUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHR0aGlzLmdyYXBoID0gYXJncy5ncmFwaDtcblx0XHR0aGlzLm9yaWVudGF0aW9uID0gYXJncy5vcmllbnRhdGlvbiB8fCAndG9wJztcblxuXHRcdHRoaXMucGl4ZWxzUGVyVGljayA9IGFyZ3MucGl4ZWxzUGVyVGljayB8fCA3NTtcblx0XHRpZiAoYXJncy50aWNrcykgdGhpcy5zdGF0aWNUaWNrcyA9IGFyZ3MudGlja3M7XG5cdFx0aWYgKGFyZ3MudGlja1ZhbHVlcykgdGhpcy50aWNrVmFsdWVzID0gYXJncy50aWNrVmFsdWVzO1xuXG5cdFx0dGhpcy50aWNrU2l6ZSA9IGFyZ3MudGlja1NpemUgfHwgNDtcblx0XHR0aGlzLnRpY2tzVHJlYXRtZW50ID0gYXJncy50aWNrc1RyZWF0bWVudCB8fCAncGxhaW4nO1xuXG5cdFx0aWYgKGFyZ3MuZWxlbWVudCkge1xuXG5cdFx0XHR0aGlzLmVsZW1lbnQgPSBhcmdzLmVsZW1lbnQ7XG5cdFx0XHR0aGlzLl9kaXNjb3ZlclNpemUoYXJncy5lbGVtZW50LCBhcmdzKTtcblxuXHRcdFx0dGhpcy52aXMgPSBkMy5zZWxlY3QoYXJncy5lbGVtZW50KVxuXHRcdFx0XHQuYXBwZW5kKFwic3ZnOnN2Z1wiKVxuXHRcdFx0XHQuYXR0cignaGVpZ2h0JywgdGhpcy5oZWlnaHQpXG5cdFx0XHRcdC5hdHRyKCd3aWR0aCcsIHRoaXMud2lkdGgpXG5cdFx0XHRcdC5hdHRyKCdjbGFzcycsICdyaWNrc2hhd19ncmFwaCB4X2F4aXNfZDMnKTtcblxuXHRcdFx0dGhpcy5lbGVtZW50ID0gdGhpcy52aXNbMF1bMF07XG5cdFx0XHR0aGlzLmVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuXG5cdFx0XHR0aGlzLnNldFNpemUoeyB3aWR0aDogYXJncy53aWR0aCwgaGVpZ2h0OiBhcmdzLmhlaWdodCB9KTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnZpcyA9IHRoaXMuZ3JhcGgudmlzO1xuXHRcdH1cblxuXHRcdHRoaXMuZ3JhcGgub25VcGRhdGUoIGZ1bmN0aW9uKCkgeyBzZWxmLnJlbmRlcigpIH0gKTtcblx0fTtcblxuXHR0aGlzLnNldFNpemUgPSBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHRhcmdzID0gYXJncyB8fCB7fTtcblx0XHRpZiAoIXRoaXMuZWxlbWVudCkgcmV0dXJuO1xuXG5cdFx0dGhpcy5fZGlzY292ZXJTaXplKHRoaXMuZWxlbWVudC5wYXJlbnROb2RlLCBhcmdzKTtcblxuXHRcdHRoaXMudmlzXG5cdFx0XHQuYXR0cignaGVpZ2h0JywgdGhpcy5oZWlnaHQpXG5cdFx0XHQuYXR0cignd2lkdGgnLCB0aGlzLndpZHRoICogKDEgKyBiZXJ0aFJhdGUpKTtcblxuXHRcdHZhciBiZXJ0aCA9IE1hdGguZmxvb3IodGhpcy53aWR0aCAqIGJlcnRoUmF0ZSAvIDIpO1xuXHRcdHRoaXMuZWxlbWVudC5zdHlsZS5sZWZ0ID0gLTEgKiBiZXJ0aCArICdweCc7XG5cdH07XG5cblx0dGhpcy5yZW5kZXIgPSBmdW5jdGlvbigpIHtcblxuXHRcdGlmICh0aGlzLl9yZW5kZXJXaWR0aCAhPT0gdW5kZWZpbmVkICYmIHRoaXMuZ3JhcGgud2lkdGggIT09IHRoaXMuX3JlbmRlcldpZHRoKSB0aGlzLnNldFNpemUoeyBhdXRvOiB0cnVlIH0pO1xuXG5cdFx0dmFyIGF4aXMgPSBkMy5zdmcuYXhpcygpLnNjYWxlKHRoaXMuZ3JhcGgueCkub3JpZW50KHRoaXMub3JpZW50YXRpb24pO1xuXHRcdGF4aXMudGlja0Zvcm1hdCggYXJncy50aWNrRm9ybWF0IHx8IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHggfSApO1xuXHRcdGlmICh0aGlzLnRpY2tWYWx1ZXMpIGF4aXMudGlja1ZhbHVlcyh0aGlzLnRpY2tWYWx1ZXMpO1xuXG5cdFx0dGhpcy50aWNrcyA9IHRoaXMuc3RhdGljVGlja3MgfHwgTWF0aC5mbG9vcih0aGlzLmdyYXBoLndpZHRoIC8gdGhpcy5waXhlbHNQZXJUaWNrKTtcblxuXHRcdHZhciBiZXJ0aCA9IE1hdGguZmxvb3IodGhpcy53aWR0aCAqIGJlcnRoUmF0ZSAvIDIpIHx8IDA7XG5cdFx0dmFyIHRyYW5zZm9ybTtcblxuXHRcdGlmICh0aGlzLm9yaWVudGF0aW9uID09ICd0b3AnKSB7XG5cdFx0XHR2YXIgeU9mZnNldCA9IHRoaXMuaGVpZ2h0IHx8IHRoaXMuZ3JhcGguaGVpZ2h0O1xuXHRcdFx0dHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgYmVydGggKyAnLCcgKyB5T2Zmc2V0ICsgJyknO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0cmFuc2Zvcm0gPSAndHJhbnNsYXRlKCcgKyBiZXJ0aCArICcsIDApJztcblx0XHR9XG5cblx0XHRpZiAodGhpcy5lbGVtZW50KSB7XG5cdFx0XHR0aGlzLnZpcy5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblx0XHR9XG5cblx0XHR0aGlzLnZpc1xuXHRcdFx0LmFwcGVuZChcInN2ZzpnXCIpXG5cdFx0XHQuYXR0cihcImNsYXNzXCIsIFtcInhfdGlja3NfZDNcIiwgdGhpcy50aWNrc1RyZWF0bWVudF0uam9pbihcIiBcIikpXG5cdFx0XHQuYXR0cihcInRyYW5zZm9ybVwiLCB0cmFuc2Zvcm0pXG5cdFx0XHQuY2FsbChheGlzLnRpY2tzKHRoaXMudGlja3MpLnRpY2tTdWJkaXZpZGUoMCkudGlja1NpemUodGhpcy50aWNrU2l6ZSkpO1xuXG5cdFx0dmFyIGdyaWRTaXplID0gKHRoaXMub3JpZW50YXRpb24gPT0gJ2JvdHRvbScgPyAxIDogLTEpICogdGhpcy5ncmFwaC5oZWlnaHQ7XG5cblx0XHR0aGlzLmdyYXBoLnZpc1xuXHRcdFx0LmFwcGVuZChcInN2ZzpnXCIpXG5cdFx0XHQuYXR0cihcImNsYXNzXCIsIFwieF9ncmlkX2QzXCIpXG5cdFx0XHQuY2FsbChheGlzLnRpY2tzKHRoaXMudGlja3MpLnRpY2tTdWJkaXZpZGUoMCkudGlja1NpemUoZ3JpZFNpemUpKVxuXHRcdFx0LnNlbGVjdEFsbCgndGV4dCcpXG5cdFx0XHQuZWFjaChmdW5jdGlvbigpIHsgdGhpcy5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgnZGF0YS14LXZhbHVlJywgdGhpcy50ZXh0Q29udGVudCkgfSk7XG5cblx0XHR0aGlzLl9yZW5kZXJIZWlnaHQgPSB0aGlzLmdyYXBoLmhlaWdodDtcblx0fTtcblxuXHR0aGlzLl9kaXNjb3ZlclNpemUgPSBmdW5jdGlvbihlbGVtZW50LCBhcmdzKSB7XG5cblx0XHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcblxuXHRcdFx0dmFyIHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgbnVsbCk7XG5cdFx0XHR2YXIgZWxlbWVudEhlaWdodCA9IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpLCAxMCk7XG5cblx0XHRcdGlmICghYXJncy5hdXRvKSB7XG5cdFx0XHRcdHZhciBlbGVtZW50V2lkdGggPSBwYXJzZUludChzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCd3aWR0aCcpLCAxMCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhpcy53aWR0aCA9IChhcmdzLndpZHRoIHx8IGVsZW1lbnRXaWR0aCB8fCB0aGlzLmdyYXBoLndpZHRoKSAqICgxICsgYmVydGhSYXRlKTtcblx0XHR0aGlzLmhlaWdodCA9IGFyZ3MuaGVpZ2h0IHx8IGVsZW1lbnRIZWlnaHQgfHwgNDA7XG5cdH07XG5cblx0dGhpcy5pbml0aWFsaXplKGFyZ3MpO1xufTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5BeGlzLlknKTtcblxuUmlja3NoYXcuR3JhcGguQXhpcy5ZID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCB7XG5cblx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oYXJncykge1xuXG5cdFx0dGhpcy5ncmFwaCA9IGFyZ3MuZ3JhcGg7XG5cdFx0dGhpcy5vcmllbnRhdGlvbiA9IGFyZ3Mub3JpZW50YXRpb24gfHwgJ3JpZ2h0JztcblxuXHRcdHRoaXMucGl4ZWxzUGVyVGljayA9IGFyZ3MucGl4ZWxzUGVyVGljayB8fCA3NTtcblx0XHRpZiAoYXJncy50aWNrcykgdGhpcy5zdGF0aWNUaWNrcyA9IGFyZ3MudGlja3M7XG5cdFx0aWYgKGFyZ3MudGlja1ZhbHVlcykgdGhpcy50aWNrVmFsdWVzID0gYXJncy50aWNrVmFsdWVzO1xuXG5cdFx0dGhpcy50aWNrU2l6ZSA9IGFyZ3MudGlja1NpemUgfHwgNDtcblx0XHR0aGlzLnRpY2tzVHJlYXRtZW50ID0gYXJncy50aWNrc1RyZWF0bWVudCB8fCAncGxhaW4nO1xuXG5cdFx0dGhpcy50aWNrRm9ybWF0ID0gYXJncy50aWNrRm9ybWF0IHx8IGZ1bmN0aW9uKHkpIHsgcmV0dXJuIHkgfTtcblxuXHRcdHRoaXMuYmVydGhSYXRlID0gMC4xMDtcblxuXHRcdGlmIChhcmdzLmVsZW1lbnQpIHtcblxuXHRcdFx0dGhpcy5lbGVtZW50ID0gYXJncy5lbGVtZW50O1xuXHRcdFx0dGhpcy52aXMgPSBkMy5zZWxlY3QoYXJncy5lbGVtZW50KVxuXHRcdFx0XHQuYXBwZW5kKFwic3ZnOnN2Z1wiKVxuXHRcdFx0XHQuYXR0cignY2xhc3MnLCAncmlja3NoYXdfZ3JhcGggeV9heGlzJyk7XG5cblx0XHRcdHRoaXMuZWxlbWVudCA9IHRoaXMudmlzWzBdWzBdO1xuXHRcdFx0dGhpcy5lbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcblxuXHRcdFx0dGhpcy5zZXRTaXplKHsgd2lkdGg6IGFyZ3Mud2lkdGgsIGhlaWdodDogYXJncy5oZWlnaHQgfSk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy52aXMgPSB0aGlzLmdyYXBoLnZpcztcblx0XHR9XG5cblx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0dGhpcy5ncmFwaC5vblVwZGF0ZSggZnVuY3Rpb24oKSB7IHNlbGYucmVuZGVyKCkgfSApO1xuXHR9LFxuXG5cdHNldFNpemU6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdGFyZ3MgPSBhcmdzIHx8IHt9O1xuXG5cdFx0aWYgKCF0aGlzLmVsZW1lbnQpIHJldHVybjtcblxuXHRcdGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuXG5cdFx0XHR2YXIgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsZW1lbnQucGFyZW50Tm9kZSwgbnVsbCk7XG5cdFx0XHR2YXIgZWxlbWVudFdpZHRoID0gcGFyc2VJbnQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnd2lkdGgnKSwgMTApO1xuXG5cdFx0XHRpZiAoIWFyZ3MuYXV0bykge1xuXHRcdFx0XHR2YXIgZWxlbWVudEhlaWdodCA9IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpLCAxMCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhpcy53aWR0aCA9IGFyZ3Mud2lkdGggfHwgZWxlbWVudFdpZHRoIHx8IHRoaXMuZ3JhcGgud2lkdGggKiB0aGlzLmJlcnRoUmF0ZTtcblx0XHR0aGlzLmhlaWdodCA9IGFyZ3MuaGVpZ2h0IHx8IGVsZW1lbnRIZWlnaHQgfHwgdGhpcy5ncmFwaC5oZWlnaHQ7XG5cblx0XHR0aGlzLnZpc1xuXHRcdFx0LmF0dHIoJ3dpZHRoJywgdGhpcy53aWR0aClcblx0XHRcdC5hdHRyKCdoZWlnaHQnLCB0aGlzLmhlaWdodCAqICgxICsgdGhpcy5iZXJ0aFJhdGUpKTtcblxuXHRcdHZhciBiZXJ0aCA9IHRoaXMuaGVpZ2h0ICogdGhpcy5iZXJ0aFJhdGU7XG5cblx0XHRpZiAodGhpcy5vcmllbnRhdGlvbiA9PSAnbGVmdCcpIHtcblx0XHRcdHRoaXMuZWxlbWVudC5zdHlsZS50b3AgPSAtMSAqIGJlcnRoICsgJ3B4Jztcblx0XHR9XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblxuXHRcdGlmICh0aGlzLl9yZW5kZXJIZWlnaHQgIT09IHVuZGVmaW5lZCAmJiB0aGlzLmdyYXBoLmhlaWdodCAhPT0gdGhpcy5fcmVuZGVySGVpZ2h0KSB0aGlzLnNldFNpemUoeyBhdXRvOiB0cnVlIH0pO1xuXG5cdFx0dGhpcy50aWNrcyA9IHRoaXMuc3RhdGljVGlja3MgfHwgTWF0aC5mbG9vcih0aGlzLmdyYXBoLmhlaWdodCAvIHRoaXMucGl4ZWxzUGVyVGljayk7XG5cblx0XHR2YXIgYXhpcyA9IHRoaXMuX2RyYXdBeGlzKHRoaXMuZ3JhcGgueSk7XG5cblx0XHR0aGlzLl9kcmF3R3JpZChheGlzKTtcblxuXHRcdHRoaXMuX3JlbmRlckhlaWdodCA9IHRoaXMuZ3JhcGguaGVpZ2h0O1xuXHR9LFxuXG5cdF9kcmF3QXhpczogZnVuY3Rpb24oc2NhbGUpIHtcblx0XHR2YXIgYXhpcyA9IGQzLnN2Zy5heGlzKCkuc2NhbGUoc2NhbGUpLm9yaWVudCh0aGlzLm9yaWVudGF0aW9uKTtcblx0XHRheGlzLnRpY2tGb3JtYXQodGhpcy50aWNrRm9ybWF0KTtcblx0XHRpZiAodGhpcy50aWNrVmFsdWVzKSBheGlzLnRpY2tWYWx1ZXModGhpcy50aWNrVmFsdWVzKTtcblxuXHRcdGlmICh0aGlzLm9yaWVudGF0aW9uID09ICdsZWZ0Jykge1xuXHRcdFx0dmFyIGJlcnRoID0gdGhpcy5oZWlnaHQgKiB0aGlzLmJlcnRoUmF0ZTtcblx0XHRcdHZhciB0cmFuc2Zvcm0gPSAndHJhbnNsYXRlKCcgKyB0aGlzLndpZHRoICsgJywgJyArIGJlcnRoICsgJyknO1xuXHRcdH1cblxuXHRcdGlmICh0aGlzLmVsZW1lbnQpIHtcblx0XHRcdHRoaXMudmlzLnNlbGVjdEFsbCgnKicpLnJlbW92ZSgpO1xuXHRcdH1cblxuXHRcdHRoaXMudmlzXG5cdFx0XHQuYXBwZW5kKFwic3ZnOmdcIilcblx0XHRcdC5hdHRyKFwiY2xhc3NcIiwgW1wieV90aWNrc1wiLCB0aGlzLnRpY2tzVHJlYXRtZW50XS5qb2luKFwiIFwiKSlcblx0XHRcdC5hdHRyKFwidHJhbnNmb3JtXCIsIHRyYW5zZm9ybSlcblx0XHRcdC5jYWxsKGF4aXMudGlja3ModGhpcy50aWNrcykudGlja1N1YmRpdmlkZSgwKS50aWNrU2l6ZSh0aGlzLnRpY2tTaXplKSk7XG5cblx0XHRyZXR1cm4gYXhpcztcblx0fSxcblxuXHRfZHJhd0dyaWQ6IGZ1bmN0aW9uKGF4aXMpIHtcblx0XHR2YXIgZ3JpZFNpemUgPSAodGhpcy5vcmllbnRhdGlvbiA9PSAncmlnaHQnID8gMSA6IC0xKSAqIHRoaXMuZ3JhcGgud2lkdGg7XG5cblx0XHR0aGlzLmdyYXBoLnZpc1xuXHRcdFx0LmFwcGVuZChcInN2ZzpnXCIpXG5cdFx0XHQuYXR0cihcImNsYXNzXCIsIFwieV9ncmlkXCIpXG5cdFx0XHQuY2FsbChheGlzLnRpY2tzKHRoaXMudGlja3MpLnRpY2tTdWJkaXZpZGUoMCkudGlja1NpemUoZ3JpZFNpemUpKVxuXHRcdFx0LnNlbGVjdEFsbCgndGV4dCcpXG5cdFx0XHQuZWFjaChmdW5jdGlvbigpIHsgdGhpcy5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgnZGF0YS15LXZhbHVlJywgdGhpcy50ZXh0Q29udGVudCkgfSk7XG5cdH1cbn0gKTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguQXhpcy5ZLlNjYWxlZCcpO1xuXG5SaWNrc2hhdy5HcmFwaC5BeGlzLlkuU2NhbGVkID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCBSaWNrc2hhdy5HcmFwaC5BeGlzLlksIHtcblxuICBpbml0aWFsaXplOiBmdW5jdGlvbigkc3VwZXIsIGFyZ3MpIHtcblxuICAgIGlmICh0eXBlb2YoYXJncy5zY2FsZSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NjYWxlZCByZXF1aXJlcyBzY2FsZScpO1xuICAgIH1cblxuICAgIHRoaXMuc2NhbGUgPSBhcmdzLnNjYWxlO1xuXG4gICAgaWYgKHR5cGVvZihhcmdzLmdyaWQpID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5ncmlkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ncmlkID0gYXJncy5ncmlkO1xuICAgIH1cblxuICAgICRzdXBlcihhcmdzKTtcblxuICB9LFxuXG4gIF9kcmF3QXhpczogZnVuY3Rpb24oJHN1cGVyLCBzY2FsZSkge1xuICAgIC8vIEFkanVzdCBzY2FsZSdzIGRvbWFpbiB0byBjb21wZW5zYXRlIGZvciBhZGp1c3RtZW50cyB0byB0aGVcbiAgICAvLyByZW5kZXJlcidzIGRvbWFpbiAoZS5nLiBwYWRkaW5nKS5cbiAgICB2YXIgZG9tYWluID0gdGhpcy5zY2FsZS5kb21haW4oKTtcbiAgICB2YXIgcmVuZGVyRG9tYWluID0gdGhpcy5ncmFwaC5yZW5kZXJlci5kb21haW4oKS55O1xuXG4gICAgdmFyIGV4dGVudHMgPSBbXG4gICAgICBNYXRoLm1pbi5hcHBseShNYXRoLCBkb21haW4pLFxuICAgICAgTWF0aC5tYXguYXBwbHkoTWF0aCwgZG9tYWluKV07XG5cbiAgICAvLyBBIG1hcHBpbmcgZnJvbSB0aGUgaWRlYWwgcmVuZGVyIGRvbWFpbiBbMCwgMV0gdG8gdGhlIGV4dGVudFxuICAgIC8vIG9mIHRoZSBvcmlnaW5hbCBzY2FsZSdzIGRvbWFpbi4gIFRoaXMgaXMgdXNlZCB0byBjYWxjdWxhdGVcbiAgICAvLyB0aGUgZXh0ZW50cyBvZiB0aGUgYWRqdXN0ZWQgZG9tYWluLlxuICAgIHZhciBleHRlbnRNYXAgPSBkMy5zY2FsZS5saW5lYXIoKS5kb21haW4oWzAsIDFdKS5yYW5nZShleHRlbnRzKTtcblxuICAgIHZhciBhZGpFeHRlbnRzID0gW1xuICAgICAgZXh0ZW50TWFwKHJlbmRlckRvbWFpblswXSksXG4gICAgICBleHRlbnRNYXAocmVuZGVyRG9tYWluWzFdKV07XG5cbiAgICAvLyBBIG1hcHBpbmcgZnJvbSB0aGUgb3JpZ2luYWwgZG9tYWluIHRvIHRoZSBhZGp1c3RlZCBkb21haW4uXG4gICAgdmFyIGFkanVzdG1lbnQgPSBkMy5zY2FsZS5saW5lYXIoKS5kb21haW4oZXh0ZW50cykucmFuZ2UoYWRqRXh0ZW50cyk7XG5cbiAgICAvLyBNYWtlIGEgY29weSBvZiB0aGUgY3VzdG9tIHNjYWxlLCBhcHBseSB0aGUgYWRqdXN0ZWQgZG9tYWluLCBhbmRcbiAgICAvLyBjb3B5IHRoZSByYW5nZSB0byBtYXRjaCB0aGUgZ3JhcGgncyBzY2FsZS5cbiAgICB2YXIgYWRqdXN0ZWRTY2FsZSA9IHRoaXMuc2NhbGUuY29weSgpXG4gICAgICAuZG9tYWluKGRvbWFpbi5tYXAoYWRqdXN0bWVudCkpXG4gICAgICAucmFuZ2Uoc2NhbGUucmFuZ2UoKSk7XG5cbiAgICByZXR1cm4gJHN1cGVyKGFkanVzdGVkU2NhbGUpO1xuICB9LFxuXG4gIF9kcmF3R3JpZDogZnVuY3Rpb24oJHN1cGVyLCBheGlzKSB7XG4gICAgaWYgKHRoaXMuZ3JpZCkge1xuICAgICAgLy8gb25seSBkcmF3IHRoZSBheGlzIGlmIHRoZSBncmlkIG9wdGlvbiBpcyB0cnVlXG4gICAgICAkc3VwZXIoYXhpcyk7XG4gICAgfVxuICB9XG59ICk7XG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkdyYXBoLkJlaGF2aW9yLlNlcmllcy5IaWdobGlnaHQnKTtcblxuUmlja3NoYXcuR3JhcGguQmVoYXZpb3IuU2VyaWVzLkhpZ2hsaWdodCA9IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHR0aGlzLmdyYXBoID0gYXJncy5ncmFwaDtcblx0dGhpcy5sZWdlbmQgPSBhcmdzLmxlZ2VuZDtcblxuXHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0dmFyIGNvbG9yU2FmZSA9IHt9O1xuXHR2YXIgYWN0aXZlTGluZSA9IG51bGw7XG5cblx0dmFyIGRpc2FibGVkQ29sb3IgPSBhcmdzLmRpc2FibGVkQ29sb3IgfHwgZnVuY3Rpb24oc2VyaWVzQ29sb3IpIHtcblx0XHRyZXR1cm4gZDMuaW50ZXJwb2xhdGVSZ2Ioc2VyaWVzQ29sb3IsIGQzLnJnYignI2Q4ZDhkOCcpKSgwLjgpLnRvU3RyaW5nKCk7XG5cdH07XG5cblx0dGhpcy5hZGRIaWdobGlnaHRFdmVudHMgPSBmdW5jdGlvbiAobCkge1xuXG5cdFx0bC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdtb3VzZW92ZXInLCBmdW5jdGlvbihlKSB7XG5cblx0XHRcdGlmIChhY3RpdmVMaW5lKSByZXR1cm47XG5cdFx0XHRlbHNlIGFjdGl2ZUxpbmUgPSBsO1xuXG5cdFx0XHRzZWxmLmxlZ2VuZC5saW5lcy5mb3JFYWNoKCBmdW5jdGlvbihsaW5lKSB7XG5cblx0XHRcdFx0aWYgKGwgPT09IGxpbmUpIHtcblxuXHRcdFx0XHRcdC8vIGlmIHdlJ3JlIG5vdCBpbiBhIHN0YWNrZWQgcmVuZGVyZXIgYnJpbmcgYWN0aXZlIGxpbmUgdG8gdGhlIHRvcFxuXHRcdFx0XHRcdGlmIChzZWxmLmdyYXBoLnJlbmRlcmVyLnVuc3RhY2sgJiYgKGxpbmUuc2VyaWVzLnJlbmRlcmVyID8gbGluZS5zZXJpZXMucmVuZGVyZXIudW5zdGFjayA6IHRydWUpKSB7XG5cblx0XHRcdFx0XHRcdHZhciBzZXJpZXNJbmRleCA9IHNlbGYuZ3JhcGguc2VyaWVzLmluZGV4T2YobGluZS5zZXJpZXMpO1xuXHRcdFx0XHRcdFx0bGluZS5vcmlnaW5hbEluZGV4ID0gc2VyaWVzSW5kZXg7XG5cblx0XHRcdFx0XHRcdHZhciBzZXJpZXMgPSBzZWxmLmdyYXBoLnNlcmllcy5zcGxpY2Uoc2VyaWVzSW5kZXgsIDEpWzBdO1xuXHRcdFx0XHRcdFx0c2VsZi5ncmFwaC5zZXJpZXMucHVzaChzZXJpZXMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjb2xvclNhZmVbbGluZS5zZXJpZXMubmFtZV0gPSBjb2xvclNhZmVbbGluZS5zZXJpZXMubmFtZV0gfHwgbGluZS5zZXJpZXMuY29sb3I7XG5cdFx0XHRcdGxpbmUuc2VyaWVzLmNvbG9yID0gZGlzYWJsZWRDb2xvcihsaW5lLnNlcmllcy5jb2xvcik7XG5cblx0XHRcdH0gKTtcblxuXHRcdFx0c2VsZi5ncmFwaC51cGRhdGUoKTtcblxuXHRcdH0sIGZhbHNlICk7XG5cblx0XHRsLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggJ21vdXNlb3V0JywgZnVuY3Rpb24oZSkge1xuXG5cdFx0XHRpZiAoIWFjdGl2ZUxpbmUpIHJldHVybjtcblx0XHRcdGVsc2UgYWN0aXZlTGluZSA9IG51bGw7XG5cblx0XHRcdHNlbGYubGVnZW5kLmxpbmVzLmZvckVhY2goIGZ1bmN0aW9uKGxpbmUpIHtcblxuXHRcdFx0XHQvLyByZXR1cm4gcmVvcmRlcmVkIHNlcmllcyB0byBpdHMgb3JpZ2luYWwgcGxhY2Vcblx0XHRcdFx0aWYgKGwgPT09IGxpbmUgJiYgbGluZS5oYXNPd25Qcm9wZXJ0eSgnb3JpZ2luYWxJbmRleCcpKSB7XG5cblx0XHRcdFx0XHR2YXIgc2VyaWVzID0gc2VsZi5ncmFwaC5zZXJpZXMucG9wKCk7XG5cdFx0XHRcdFx0c2VsZi5ncmFwaC5zZXJpZXMuc3BsaWNlKGxpbmUub3JpZ2luYWxJbmRleCwgMCwgc2VyaWVzKTtcblx0XHRcdFx0XHRkZWxldGUgbGluZS5vcmlnaW5hbEluZGV4O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGNvbG9yU2FmZVtsaW5lLnNlcmllcy5uYW1lXSkge1xuXHRcdFx0XHRcdGxpbmUuc2VyaWVzLmNvbG9yID0gY29sb3JTYWZlW2xpbmUuc2VyaWVzLm5hbWVdO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cblx0XHRcdHNlbGYuZ3JhcGgudXBkYXRlKCk7XG5cblx0XHR9LCBmYWxzZSApO1xuXHR9O1xuXG5cdGlmICh0aGlzLmxlZ2VuZCkge1xuXHRcdHRoaXMubGVnZW5kLmxpbmVzLmZvckVhY2goIGZ1bmN0aW9uKGwpIHtcblx0XHRcdHNlbGYuYWRkSGlnaGxpZ2h0RXZlbnRzKGwpO1xuXHRcdH0gKTtcblx0fVxuXG59O1xuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5CZWhhdmlvci5TZXJpZXMuT3JkZXInKTtcblxuUmlja3NoYXcuR3JhcGguQmVoYXZpb3IuU2VyaWVzLk9yZGVyID0gZnVuY3Rpb24oYXJncykge1xuXG5cdHRoaXMuZ3JhcGggPSBhcmdzLmdyYXBoO1xuXHR0aGlzLmxlZ2VuZCA9IGFyZ3MubGVnZW5kO1xuXG5cdHZhciBzZWxmID0gdGhpcztcblxuXHRpZiAodHlwZW9mIHdpbmRvdy5qUXVlcnkgPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHR0aHJvdyBcImNvdWxkbid0IGZpbmQgalF1ZXJ5IGF0IHdpbmRvdy5qUXVlcnlcIjtcblx0fVxuXG5cdGlmICh0eXBlb2Ygd2luZG93LmpRdWVyeS51aSA9PSAndW5kZWZpbmVkJykge1xuXHRcdHRocm93IFwiY291bGRuJ3QgZmluZCBqUXVlcnkgVUkgYXQgd2luZG93LmpRdWVyeS51aVwiO1xuXHR9XG5cblx0alF1ZXJ5KGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeShzZWxmLmxlZ2VuZC5saXN0KS5zb3J0YWJsZSgge1xuXHRcdFx0Y29udGFpbm1lbnQ6ICdwYXJlbnQnLFxuXHRcdFx0dG9sZXJhbmNlOiAncG9pbnRlcicsXG5cdFx0XHR1cGRhdGU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG5cdFx0XHRcdHZhciBzZXJpZXMgPSBbXTtcblx0XHRcdFx0alF1ZXJ5KHNlbGYubGVnZW5kLmxpc3QpLmZpbmQoJ2xpJykuZWFjaCggZnVuY3Rpb24oaW5kZXgsIGl0ZW0pIHtcblx0XHRcdFx0XHRpZiAoIWl0ZW0uc2VyaWVzKSByZXR1cm47XG5cdFx0XHRcdFx0c2VyaWVzLnB1c2goaXRlbS5zZXJpZXMpO1xuXHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Zm9yICh2YXIgaSA9IHNlbGYuZ3JhcGguc2VyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdFx0c2VsZi5ncmFwaC5zZXJpZXNbaV0gPSBzZXJpZXMuc2hpZnQoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHNlbGYuZ3JhcGgudXBkYXRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdGpRdWVyeShzZWxmLmxlZ2VuZC5saXN0KS5kaXNhYmxlU2VsZWN0aW9uKCk7XG5cdH0pO1xuXG5cdC8vaGFjayB0byBtYWtlIGpxdWVyeS11aSBzb3J0YWJsZSBiZWhhdmVcblx0dGhpcy5ncmFwaC5vblVwZGF0ZSggZnVuY3Rpb24oKSB7IFxuXHRcdHZhciBoID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoc2VsZi5sZWdlbmQuZWxlbWVudCkuaGVpZ2h0O1xuXHRcdHNlbGYubGVnZW5kLmVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gaDtcblx0fSApO1xufTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguQmVoYXZpb3IuU2VyaWVzLlRvZ2dsZScpO1xuXG5SaWNrc2hhdy5HcmFwaC5CZWhhdmlvci5TZXJpZXMuVG9nZ2xlID0gZnVuY3Rpb24oYXJncykge1xuXG5cdHRoaXMuZ3JhcGggPSBhcmdzLmdyYXBoO1xuXHR0aGlzLmxlZ2VuZCA9IGFyZ3MubGVnZW5kO1xuXG5cdHZhciBzZWxmID0gdGhpcztcblxuXHR0aGlzLmFkZEFuY2hvciA9IGZ1bmN0aW9uKGxpbmUpIHtcblxuXHRcdHZhciBhbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG5cdFx0YW5jaG9yLmlubmVySFRNTCA9ICcmIzEwMDA0Oyc7XG5cdFx0YW5jaG9yLmNsYXNzTGlzdC5hZGQoJ2FjdGlvbicpO1xuXHRcdGxpbmUuZWxlbWVudC5pbnNlcnRCZWZvcmUoYW5jaG9yLCBsaW5lLmVsZW1lbnQuZmlyc3RDaGlsZCk7XG5cblx0XHRhbmNob3Iub25jbGljayA9IGZ1bmN0aW9uKGUpIHtcblx0XHRcdGlmIChsaW5lLnNlcmllcy5kaXNhYmxlZCkge1xuXHRcdFx0XHRsaW5lLnNlcmllcy5lbmFibGUoKTtcblx0XHRcdFx0bGluZS5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc2FibGVkJyk7XG5cdFx0XHR9IGVsc2UgeyBcblx0XHRcdFx0aWYgKHRoaXMuZ3JhcGguc2VyaWVzLmZpbHRlcihmdW5jdGlvbihzKSB7IHJldHVybiAhcy5kaXNhYmxlZCB9KS5sZW5ndGggPD0gMSkgcmV0dXJuO1xuXHRcdFx0XHRsaW5lLnNlcmllcy5kaXNhYmxlKCk7XG5cdFx0XHRcdGxpbmUuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdkaXNhYmxlZCcpO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxmLmdyYXBoLnVwZGF0ZSgpO1xuXG5cdFx0fS5iaW5kKHRoaXMpO1xuXHRcdFxuICAgICAgICAgICAgICAgIHZhciBsYWJlbCA9IGxpbmUuZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3BhbicpWzBdO1xuICAgICAgICAgICAgICAgIGxhYmVsLm9uY2xpY2sgPSBmdW5jdGlvbihlKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpc2FibGVBbGxPdGhlckxpbmVzID0gbGluZS5zZXJpZXMuZGlzYWJsZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoICEgZGlzYWJsZUFsbE90aGVyTGluZXMgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoIHZhciBpID0gMDsgaSA8IHNlbGYubGVnZW5kLmxpbmVzLmxlbmd0aDsgaSsrICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsID0gc2VsZi5sZWdlbmQubGluZXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCBsaW5lLnNlcmllcyA9PT0gbC5zZXJpZXMgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub29wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICggbC5zZXJpZXMuZGlzYWJsZWQgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub29wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVBbGxPdGhlckxpbmVzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzaG93IGFsbCBvciBub25lXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIGRpc2FibGVBbGxPdGhlckxpbmVzICkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZXNlIG11c3QgaGFwcGVuIGZpcnN0IG9yIGVsc2Ugd2UgdHJ5ICggYW5kIHByb2JhYmx5IGZhaWwgKSB0byBtYWtlIGEgbm8gbGluZSBncmFwaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLnNlcmllcy5lbmFibGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc2FibGVkJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5sZWdlbmQubGluZXMuZm9yRWFjaChmdW5jdGlvbihsKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIGxpbmUuc2VyaWVzID09PSBsLnNlcmllcyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbC5zZXJpZXMuZGlzYWJsZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbC5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmxlZ2VuZC5saW5lcy5mb3JFYWNoKGZ1bmN0aW9uKGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwuc2VyaWVzLmVuYWJsZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmdyYXBoLnVwZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgfTtcblxuXHR9O1xuXG5cdGlmICh0aGlzLmxlZ2VuZCkge1xuXG5cdFx0dmFyICQgPSBqUXVlcnk7XG5cdFx0aWYgKHR5cGVvZiAkICE9ICd1bmRlZmluZWQnICYmICQodGhpcy5sZWdlbmQubGlzdCkuc29ydGFibGUpIHtcblxuXHRcdFx0JCh0aGlzLmxlZ2VuZC5saXN0KS5zb3J0YWJsZSgge1xuXHRcdFx0XHRzdGFydDogZnVuY3Rpb24oZXZlbnQsIHVpKSB7XG5cdFx0XHRcdFx0dWkuaXRlbS5iaW5kKCduby5vbmNsaWNrJyxcblx0XHRcdFx0XHRcdGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fSxcblx0XHRcdFx0c3RvcDogZnVuY3Rpb24oZXZlbnQsIHVpKSB7XG5cdFx0XHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0dWkuaXRlbS51bmJpbmQoJ25vLm9uY2xpY2snKTtcblx0XHRcdFx0XHR9LCAyNTApO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHR0aGlzLmxlZ2VuZC5saW5lcy5mb3JFYWNoKCBmdW5jdGlvbihsKSB7XG5cdFx0XHRzZWxmLmFkZEFuY2hvcihsKTtcblx0XHR9ICk7XG5cdH1cblxuXHR0aGlzLl9hZGRCZWhhdmlvciA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0dGhpcy5ncmFwaC5zZXJpZXMuZm9yRWFjaCggZnVuY3Rpb24ocykge1xuXHRcdFx0XG5cdFx0XHRzLmRpc2FibGUgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRpZiAoc2VsZi5ncmFwaC5zZXJpZXMubGVuZ3RoIDw9IDEpIHtcblx0XHRcdFx0XHR0aHJvdygnb25seSBvbmUgc2VyaWVzIGxlZnQnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdFx0cy5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHR9O1xuXG5cdFx0XHRzLmVuYWJsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzLmRpc2FibGVkID0gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0gKTtcblx0fTtcblx0dGhpcy5fYWRkQmVoYXZpb3IoKTtcblxuXHR0aGlzLnVwZGF0ZUJlaGF2aW91ciA9IGZ1bmN0aW9uICgpIHsgdGhpcy5fYWRkQmVoYXZpb3IoKSB9O1xuXG59O1xuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5Ib3ZlckRldGFpbCcpO1xuXG5SaWNrc2hhdy5HcmFwaC5Ib3ZlckRldGFpbCA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSh7XG5cblx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oYXJncykge1xuXG5cdFx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaCA9IGFyZ3MuZ3JhcGg7XG5cblx0XHR0aGlzLnhGb3JtYXR0ZXIgPSBhcmdzLnhGb3JtYXR0ZXIgfHwgZnVuY3Rpb24oeCkge1xuXHRcdFx0cmV0dXJuIG5ldyBEYXRlKCB4ICogMTAwMCApLnRvVVRDU3RyaW5nKCk7XG5cdFx0fTtcblxuXHRcdHRoaXMueUZvcm1hdHRlciA9IGFyZ3MueUZvcm1hdHRlciB8fCBmdW5jdGlvbih5KSB7XG5cdFx0XHRyZXR1cm4geSA9PT0gbnVsbCA/IHkgOiB5LnRvRml4ZWQoMik7XG5cdFx0fTtcblxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0ZWxlbWVudC5jbGFzc05hbWUgPSAnZGV0YWlsJztcblxuXHRcdHRoaXMudmlzaWJsZSA9IHRydWU7XG5cdFx0Z3JhcGguZWxlbWVudC5hcHBlbmRDaGlsZChlbGVtZW50KTtcblxuXHRcdHRoaXMubGFzdEV2ZW50ID0gbnVsbDtcblx0XHR0aGlzLl9hZGRMaXN0ZW5lcnMoKTtcblxuXHRcdHRoaXMub25TaG93ID0gYXJncy5vblNob3c7XG5cdFx0dGhpcy5vbkhpZGUgPSBhcmdzLm9uSGlkZTtcblx0XHR0aGlzLm9uUmVuZGVyID0gYXJncy5vblJlbmRlcjtcblxuXHRcdHRoaXMuZm9ybWF0dGVyID0gYXJncy5mb3JtYXR0ZXIgfHwgdGhpcy5mb3JtYXR0ZXI7XG5cblx0fSxcblxuXHRmb3JtYXR0ZXI6IGZ1bmN0aW9uKHNlcmllcywgeCwgeSwgZm9ybWF0dGVkWCwgZm9ybWF0dGVkWSwgZCkge1xuXHRcdHJldHVybiBzZXJpZXMubmFtZSArICc6Jm5ic3A7JyArIGZvcm1hdHRlZFk7XG5cdH0sXG5cblx0dXBkYXRlOiBmdW5jdGlvbihlKSB7XG5cblx0XHRlID0gZSB8fCB0aGlzLmxhc3RFdmVudDtcblx0XHRpZiAoIWUpIHJldHVybjtcblx0XHR0aGlzLmxhc3RFdmVudCA9IGU7XG5cblx0XHRpZiAoIWUudGFyZ2V0Lm5vZGVOYW1lLm1hdGNoKC9eKHBhdGh8c3ZnfHJlY3R8Y2lyY2xlKSQvKSkgcmV0dXJuO1xuXG5cdFx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaDtcblxuXHRcdHZhciBldmVudFggPSBlLm9mZnNldFggfHwgZS5sYXllclg7XG5cdFx0dmFyIGV2ZW50WSA9IGUub2Zmc2V0WSB8fCBlLmxheWVyWTtcblxuXHRcdHZhciBqID0gMDtcblx0XHR2YXIgcG9pbnRzID0gW107XG5cdFx0dmFyIG5lYXJlc3RQb2ludDtcblxuXHRcdHRoaXMuZ3JhcGguc2VyaWVzLmFjdGl2ZSgpLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXG5cdFx0XHR2YXIgZGF0YSA9IHRoaXMuZ3JhcGguc3RhY2tlZERhdGFbaisrXTtcblxuXHRcdFx0aWYgKCFkYXRhLmxlbmd0aClcblx0XHRcdFx0cmV0dXJuO1xuXG5cdFx0XHR2YXIgZG9tYWluWCA9IGdyYXBoLnguaW52ZXJ0KGV2ZW50WCk7XG5cblx0XHRcdHZhciBkb21haW5JbmRleFNjYWxlID0gZDMuc2NhbGUubGluZWFyKClcblx0XHRcdFx0LmRvbWFpbihbZGF0YVswXS54LCBkYXRhLnNsaWNlKC0xKVswXS54XSlcblx0XHRcdFx0LnJhbmdlKFswLCBkYXRhLmxlbmd0aCAtIDFdKTtcblxuXHRcdFx0dmFyIGFwcHJveGltYXRlSW5kZXggPSBNYXRoLnJvdW5kKGRvbWFpbkluZGV4U2NhbGUoZG9tYWluWCkpO1xuXHRcdFx0aWYgKGFwcHJveGltYXRlSW5kZXggPT0gZGF0YS5sZW5ndGggLSAxKSBhcHByb3hpbWF0ZUluZGV4LS07XG5cblx0XHRcdHZhciBkYXRhSW5kZXggPSBNYXRoLm1pbihhcHByb3hpbWF0ZUluZGV4IHx8IDAsIGRhdGEubGVuZ3RoIC0gMSk7XG5cblx0XHRcdGZvciAodmFyIGkgPSBhcHByb3hpbWF0ZUluZGV4OyBpIDwgZGF0YS5sZW5ndGggLSAxOykge1xuXG5cdFx0XHRcdGlmICghZGF0YVtpXSB8fCAhZGF0YVtpICsgMV0pIGJyZWFrO1xuXG5cdFx0XHRcdGlmIChkYXRhW2ldLnggPD0gZG9tYWluWCAmJiBkYXRhW2kgKyAxXS54ID4gZG9tYWluWCkge1xuXHRcdFx0XHRcdGRhdGFJbmRleCA9IE1hdGguYWJzKGRvbWFpblggLSBkYXRhW2ldLngpIDwgTWF0aC5hYnMoZG9tYWluWCAtIGRhdGFbaSArIDFdLngpID8gaSA6IGkgKyAxO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGRhdGFbaSArIDFdLnggPD0gZG9tYWluWCkgeyBpKysgfSBlbHNlIHsgaS0tIH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKGRhdGFJbmRleCA8IDApIGRhdGFJbmRleCA9IDA7XG5cdFx0XHR2YXIgdmFsdWUgPSBkYXRhW2RhdGFJbmRleF07XG5cblx0XHRcdHZhciBkaXN0YW5jZSA9IE1hdGguc3FydChcblx0XHRcdFx0TWF0aC5wb3coTWF0aC5hYnMoZ3JhcGgueCh2YWx1ZS54KSAtIGV2ZW50WCksIDIpICtcblx0XHRcdFx0TWF0aC5wb3coTWF0aC5hYnMoZ3JhcGgueSh2YWx1ZS55ICsgdmFsdWUueTApIC0gZXZlbnRZKSwgMilcblx0XHRcdCk7XG5cblx0XHRcdHZhciB4Rm9ybWF0dGVyID0gc2VyaWVzLnhGb3JtYXR0ZXIgfHwgdGhpcy54Rm9ybWF0dGVyO1xuXHRcdFx0dmFyIHlGb3JtYXR0ZXIgPSBzZXJpZXMueUZvcm1hdHRlciB8fCB0aGlzLnlGb3JtYXR0ZXI7XG5cblx0XHRcdHZhciBwb2ludCA9IHtcblx0XHRcdFx0Zm9ybWF0dGVkWFZhbHVlOiB4Rm9ybWF0dGVyKHZhbHVlLngpLFxuXHRcdFx0XHRmb3JtYXR0ZWRZVmFsdWU6IHlGb3JtYXR0ZXIoc2VyaWVzLnNjYWxlID8gc2VyaWVzLnNjYWxlLmludmVydCh2YWx1ZS55KSA6IHZhbHVlLnkpLFxuXHRcdFx0XHRzZXJpZXM6IHNlcmllcyxcblx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRkaXN0YW5jZTogZGlzdGFuY2UsXG5cdFx0XHRcdG9yZGVyOiBqLFxuXHRcdFx0XHRuYW1lOiBzZXJpZXMubmFtZVxuXHRcdFx0fTtcblxuXHRcdFx0aWYgKCFuZWFyZXN0UG9pbnQgfHwgZGlzdGFuY2UgPCBuZWFyZXN0UG9pbnQuZGlzdGFuY2UpIHtcblx0XHRcdFx0bmVhcmVzdFBvaW50ID0gcG9pbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHBvaW50cy5wdXNoKHBvaW50KTtcblxuXHRcdH0sIHRoaXMgKTtcblxuXHRcdGlmICghbmVhcmVzdFBvaW50KVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0bmVhcmVzdFBvaW50LmFjdGl2ZSA9IHRydWU7XG5cblx0XHR2YXIgZG9tYWluWCA9IG5lYXJlc3RQb2ludC52YWx1ZS54O1xuXHRcdHZhciBmb3JtYXR0ZWRYVmFsdWUgPSBuZWFyZXN0UG9pbnQuZm9ybWF0dGVkWFZhbHVlO1xuXG5cdFx0dGhpcy5lbGVtZW50LmlubmVySFRNTCA9ICcnO1xuXHRcdHRoaXMuZWxlbWVudC5zdHlsZS5sZWZ0ID0gZ3JhcGgueChkb21haW5YKSArICdweCc7XG5cblx0XHR0aGlzLnZpc2libGUgJiYgdGhpcy5yZW5kZXIoIHtcblx0XHRcdHBvaW50czogcG9pbnRzLFxuXHRcdFx0ZGV0YWlsOiBwb2ludHMsIC8vIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuXHRcdFx0bW91c2VYOiBldmVudFgsXG5cdFx0XHRtb3VzZVk6IGV2ZW50WSxcblx0XHRcdGZvcm1hdHRlZFhWYWx1ZTogZm9ybWF0dGVkWFZhbHVlLFxuXHRcdFx0ZG9tYWluWDogZG9tYWluWFxuXHRcdH0gKTtcblx0fSxcblxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLnZpc2libGUgPSBmYWxzZTtcblx0XHR0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaW5hY3RpdmUnKTtcblxuXHRcdGlmICh0eXBlb2YgdGhpcy5vbkhpZGUgPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5vbkhpZGUoKTtcblx0XHR9XG5cdH0sXG5cblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy52aXNpYmxlID0gdHJ1ZTtcblx0XHR0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaW5hY3RpdmUnKTtcblxuXHRcdGlmICh0eXBlb2YgdGhpcy5vblNob3cgPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5vblNob3coKTtcblx0XHR9XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXHRcdHZhciBwb2ludHMgPSBhcmdzLnBvaW50cztcblx0XHR2YXIgcG9pbnQgPSBwb2ludHMuZmlsdGVyKCBmdW5jdGlvbihwKSB7IHJldHVybiBwLmFjdGl2ZSB9ICkuc2hpZnQoKTtcblxuXHRcdGlmIChwb2ludC52YWx1ZS55ID09PSBudWxsKSByZXR1cm47XG5cblx0XHR2YXIgZm9ybWF0dGVkWFZhbHVlID0gcG9pbnQuZm9ybWF0dGVkWFZhbHVlO1xuXHRcdHZhciBmb3JtYXR0ZWRZVmFsdWUgPSBwb2ludC5mb3JtYXR0ZWRZVmFsdWU7XG5cblx0XHR0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG5cdFx0dGhpcy5lbGVtZW50LnN0eWxlLmxlZnQgPSBncmFwaC54KHBvaW50LnZhbHVlLngpICsgJ3B4JztcblxuXHRcdHZhciB4TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuXHRcdHhMYWJlbC5jbGFzc05hbWUgPSAneF9sYWJlbCc7XG5cdFx0eExhYmVsLmlubmVySFRNTCA9IGZvcm1hdHRlZFhWYWx1ZTtcblx0XHR0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoeExhYmVsKTtcblxuXHRcdHZhciBpdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cblx0XHRpdGVtLmNsYXNzTmFtZSA9ICdpdGVtJztcblxuXHRcdC8vIGludmVydCB0aGUgc2NhbGUgaWYgdGhpcyBzZXJpZXMgZGlzcGxheXMgdXNpbmcgYSBzY2FsZVxuXHRcdHZhciBzZXJpZXMgPSBwb2ludC5zZXJpZXM7XG5cdFx0dmFyIGFjdHVhbFkgPSBzZXJpZXMuc2NhbGUgPyBzZXJpZXMuc2NhbGUuaW52ZXJ0KHBvaW50LnZhbHVlLnkpIDogcG9pbnQudmFsdWUueTtcblxuXHRcdGl0ZW0uaW5uZXJIVE1MID0gdGhpcy5mb3JtYXR0ZXIoc2VyaWVzLCBwb2ludC52YWx1ZS54LCBhY3R1YWxZLCBmb3JtYXR0ZWRYVmFsdWUsIGZvcm1hdHRlZFlWYWx1ZSwgcG9pbnQpO1xuXHRcdGl0ZW0uc3R5bGUudG9wID0gdGhpcy5ncmFwaC55KHBvaW50LnZhbHVlLnkwICsgcG9pbnQudmFsdWUueSkgKyAncHgnO1xuXG5cdFx0dGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGl0ZW0pO1xuXG5cdFx0dmFyIGRvdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdFx0ZG90LmNsYXNzTmFtZSA9ICdkb3QnO1xuXHRcdGRvdC5zdHlsZS50b3AgPSBpdGVtLnN0eWxlLnRvcDtcblx0XHRkb3Quc3R5bGUuYm9yZGVyQ29sb3IgPSBzZXJpZXMuY29sb3I7XG5cblx0XHR0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZG90KTtcblxuXHRcdGlmIChwb2ludC5hY3RpdmUpIHtcblx0XHRcdGl0ZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cdFx0XHRkb3QuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cdFx0fVxuXG5cdFx0Ly8gQXNzdW1lIGxlZnQgYWxpZ25tZW50IHVudGlsIHRoZSBlbGVtZW50IGhhcyBiZWVuIGRpc3BsYXllZCBhbmRcblx0XHQvLyBib3VuZGluZyBib3ggY2FsY3VsYXRpb25zIGFyZSBwb3NzaWJsZS5cblx0XHR2YXIgYWxpZ25hYmxlcyA9IFt4TGFiZWwsIGl0ZW1dO1xuXHRcdGFsaWduYWJsZXMuZm9yRWFjaChmdW5jdGlvbihlbCkge1xuXHRcdFx0ZWwuY2xhc3NMaXN0LmFkZCgnbGVmdCcpO1xuXHRcdH0pO1xuXG5cdFx0dGhpcy5zaG93KCk7XG5cblx0XHQvLyBJZiBsZWZ0LWFsaWdubWVudCByZXN1bHRzIGluIGFueSBlcnJvciwgdHJ5IHJpZ2h0LWFsaWdubWVudC5cblx0XHR2YXIgbGVmdEFsaWduRXJyb3IgPSB0aGlzLl9jYWxjTGF5b3V0RXJyb3IoYWxpZ25hYmxlcyk7XG5cdFx0aWYgKGxlZnRBbGlnbkVycm9yID4gMCkge1xuXHRcdFx0YWxpZ25hYmxlcy5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7XG5cdFx0XHRcdGVsLmNsYXNzTGlzdC5yZW1vdmUoJ2xlZnQnKTtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0LmFkZCgncmlnaHQnKTtcblx0XHRcdH0pO1xuXG5cdFx0XHQvLyBJZiByaWdodC1hbGlnbm1lbnQgaXMgd29yc2UgdGhhbiBsZWZ0IGFsaWdubWVudCwgc3dpdGNoIGJhY2suXG5cdFx0XHR2YXIgcmlnaHRBbGlnbkVycm9yID0gdGhpcy5fY2FsY0xheW91dEVycm9yKGFsaWduYWJsZXMpO1xuXHRcdFx0aWYgKHJpZ2h0QWxpZ25FcnJvciA+IGxlZnRBbGlnbkVycm9yKSB7XG5cdFx0XHRcdGFsaWduYWJsZXMuZm9yRWFjaChmdW5jdGlvbihlbCkge1xuXHRcdFx0XHRcdGVsLmNsYXNzTGlzdC5yZW1vdmUoJ3JpZ2h0Jyk7XG5cdFx0XHRcdFx0ZWwuY2xhc3NMaXN0LmFkZCgnbGVmdCcpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAodHlwZW9mIHRoaXMub25SZW5kZXIgPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5vblJlbmRlcihhcmdzKTtcblx0XHR9XG5cdH0sXG5cblx0X2NhbGNMYXlvdXRFcnJvcjogZnVuY3Rpb24oYWxpZ25hYmxlcykge1xuXHRcdC8vIExheW91dCBlcnJvciBpcyBjYWxjdWxhdGVkIGFzIHRoZSBudW1iZXIgb2YgbGluZWFyIHBpeGVscyBieSB3aGljaFxuXHRcdC8vIGFuIGFsaWduYWJsZSBleHRlbmRzIHBhc3QgdGhlIGxlZnQgb3IgcmlnaHQgZWRnZSBvZiB0aGUgcGFyZW50LlxuXHRcdHZhciBwYXJlbnRSZWN0ID0gdGhpcy5lbGVtZW50LnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR2YXIgZXJyb3IgPSAwO1xuXHRcdHZhciBhbGlnblJpZ2h0ID0gYWxpZ25hYmxlcy5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7XG5cdFx0XHR2YXIgcmVjdCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdFx0aWYgKCFyZWN0LndpZHRoKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHJlY3QucmlnaHQgPiBwYXJlbnRSZWN0LnJpZ2h0KSB7XG5cdFx0XHRcdGVycm9yICs9IHJlY3QucmlnaHQgLSBwYXJlbnRSZWN0LnJpZ2h0O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAocmVjdC5sZWZ0IDwgcGFyZW50UmVjdC5sZWZ0KSB7XG5cdFx0XHRcdGVycm9yICs9IHBhcmVudFJlY3QubGVmdCAtIHJlY3QubGVmdDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRyZXR1cm4gZXJyb3I7XG5cdH0sXG5cblx0X2FkZExpc3RlbmVyczogZnVuY3Rpb24oKSB7XG5cblx0XHR0aGlzLmdyYXBoLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcdCdtb3VzZW1vdmUnLFxuXHRcdFx0ZnVuY3Rpb24oZSkge1xuXHRcdFx0XHR0aGlzLnZpc2libGUgPSB0cnVlO1xuXHRcdFx0XHR0aGlzLnVwZGF0ZShlKTtcblx0XHRcdH0uYmluZCh0aGlzKSxcblx0XHRcdGZhbHNlXG5cdFx0KTtcblxuXHRcdHRoaXMuZ3JhcGgub25VcGRhdGUoIGZ1bmN0aW9uKCkgeyB0aGlzLnVwZGF0ZSgpIH0uYmluZCh0aGlzKSApO1xuXG5cdFx0dGhpcy5ncmFwaC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0XHQnbW91c2VvdXQnLFxuXHRcdFx0ZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRpZiAoZS5yZWxhdGVkVGFyZ2V0ICYmICEoZS5yZWxhdGVkVGFyZ2V0LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHRoaXMuZ3JhcGguZWxlbWVudCkgJiBOb2RlLkRPQ1VNRU5UX1BPU0lUSU9OX0NPTlRBSU5TKSkge1xuXHRcdFx0XHRcdHRoaXMuaGlkZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9LmJpbmQodGhpcyksXG5cdFx0XHRmYWxzZVxuXHRcdCk7XG5cdH1cbn0pO1xuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5KU09OUCcpO1xuXG5SaWNrc2hhdy5HcmFwaC5KU09OUCA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSggUmlja3NoYXcuR3JhcGguQWpheCwge1xuXG5cdHJlcXVlc3Q6IGZ1bmN0aW9uKCkge1xuXG5cdFx0alF1ZXJ5LmFqYXgoIHtcblx0XHRcdHVybDogdGhpcy5kYXRhVVJMLFxuXHRcdFx0ZGF0YVR5cGU6ICdqc29ucCcsXG5cdFx0XHRzdWNjZXNzOiB0aGlzLnN1Y2Nlc3MuYmluZCh0aGlzKSxcblx0XHRcdGVycm9yOiB0aGlzLmVycm9yLmJpbmQodGhpcylcblx0XHR9ICk7XG5cdH1cbn0gKTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguTGVnZW5kJyk7XG5cblJpY2tzaGF3LkdyYXBoLkxlZ2VuZCA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSgge1xuXG5cdGNsYXNzTmFtZTogJ3JpY2tzaGF3X2xlZ2VuZCcsXG5cblx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oYXJncykge1xuXHRcdHRoaXMuZWxlbWVudCA9IGFyZ3MuZWxlbWVudDtcblx0XHR0aGlzLmdyYXBoID0gYXJncy5ncmFwaDtcblx0XHR0aGlzLm5hdHVyYWxPcmRlciA9IGFyZ3MubmF0dXJhbE9yZGVyO1xuXG5cdFx0dGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc05hbWUpO1xuXG5cdFx0dGhpcy5saXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcblx0XHR0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5saXN0KTtcblxuXHRcdHRoaXMucmVuZGVyKCk7XG5cblx0XHQvLyB3ZSBjb3VsZCBiaW5kIHRoaXMucmVuZGVyLmJpbmQodGhpcykgaGVyZVxuXHRcdC8vIGJ1dCB0cmlnZ2VyaW5nIHRoZSByZS1yZW5kZXIgd291bGQgbG9zZSB0aGUgYWRkZWRcblx0XHQvLyBiZWhhdmlvciBvZiB0aGUgc2VyaWVzIHRvZ2dsZVxuXHRcdHRoaXMuZ3JhcGgub25VcGRhdGUoIGZ1bmN0aW9uKCkge30gKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdHdoaWxlICggdGhpcy5saXN0LmZpcnN0Q2hpbGQgKSB7XG5cdFx0XHR0aGlzLmxpc3QucmVtb3ZlQ2hpbGQoIHRoaXMubGlzdC5maXJzdENoaWxkICk7XG5cdFx0fVxuXHRcdHRoaXMubGluZXMgPSBbXTtcblxuXHRcdHZhciBzZXJpZXMgPSB0aGlzLmdyYXBoLnNlcmllc1xuXHRcdFx0Lm1hcCggZnVuY3Rpb24ocykgeyByZXR1cm4gcyB9ICk7XG5cblx0XHRpZiAoIXRoaXMubmF0dXJhbE9yZGVyKSB7XG5cdFx0XHRzZXJpZXMgPSBzZXJpZXMucmV2ZXJzZSgpO1xuXHRcdH1cblxuXHRcdHNlcmllcy5mb3JFYWNoKCBmdW5jdGlvbihzKSB7XG5cdFx0XHRzZWxmLmFkZExpbmUocyk7XG5cdFx0fSApO1xuXG5cblx0fSxcblxuXHRhZGRMaW5lOiBmdW5jdGlvbiAoc2VyaWVzKSB7XG5cdFx0dmFyIGxpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXHRcdGxpbmUuY2xhc3NOYW1lID0gJ2xpbmUnO1xuXHRcdGlmIChzZXJpZXMuZGlzYWJsZWQpIHtcblx0XHRcdGxpbmUuY2xhc3NOYW1lICs9ICcgZGlzYWJsZWQnO1xuXHRcdH1cblx0XHRpZiAoc2VyaWVzLmNsYXNzTmFtZSkge1xuXHRcdFx0ZDMuc2VsZWN0KGxpbmUpLmNsYXNzZWQoc2VyaWVzLmNsYXNzTmFtZSwgdHJ1ZSk7XG5cdFx0fVxuXHRcdHZhciBzd2F0Y2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRzd2F0Y2guY2xhc3NOYW1lID0gJ3N3YXRjaCc7XG5cdFx0c3dhdGNoLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHNlcmllcy5jb2xvcjtcblxuXHRcdGxpbmUuYXBwZW5kQ2hpbGQoc3dhdGNoKTtcblxuXHRcdHZhciBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblx0XHRsYWJlbC5jbGFzc05hbWUgPSAnbGFiZWwnO1xuXHRcdGxhYmVsLmlubmVySFRNTCA9IHNlcmllcy5uYW1lO1xuXG5cdFx0bGluZS5hcHBlbmRDaGlsZChsYWJlbCk7XG5cdFx0dGhpcy5saXN0LmFwcGVuZENoaWxkKGxpbmUpO1xuXG5cdFx0bGluZS5zZXJpZXMgPSBzZXJpZXM7XG5cblx0XHRpZiAoc2VyaWVzLm5vTGVnZW5kKSB7XG5cdFx0XHRsaW5lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdFx0fVxuXG5cdFx0dmFyIF9saW5lID0geyBlbGVtZW50OiBsaW5lLCBzZXJpZXM6IHNlcmllcyB9O1xuXHRcdGlmICh0aGlzLnNoZWx2aW5nKSB7XG5cdFx0XHR0aGlzLnNoZWx2aW5nLmFkZEFuY2hvcihfbGluZSk7XG5cdFx0XHR0aGlzLnNoZWx2aW5nLnVwZGF0ZUJlaGF2aW91cigpO1xuXHRcdH1cblx0XHRpZiAodGhpcy5oaWdobGlnaHRlcikge1xuXHRcdFx0dGhpcy5oaWdobGlnaHRlci5hZGRIaWdobGlnaHRFdmVudHMoX2xpbmUpO1xuXHRcdH1cblx0XHR0aGlzLmxpbmVzLnB1c2goX2xpbmUpO1xuXHRcdHJldHVybiBsaW5lO1xuXHR9XG59ICk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguUmFuZ2VTbGlkZXInKTtcblxuUmlja3NoYXcuR3JhcGguUmFuZ2VTbGlkZXIgPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoe1xuXG5cdGluaXRpYWxpemU6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50ID0gYXJncy5lbGVtZW50O1xuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGggPSBhcmdzLmdyYXBoO1xuXG5cdFx0dGhpcy5zbGlkZUNhbGxiYWNrcyA9IFtdO1xuXG5cdFx0dGhpcy5idWlsZCgpO1xuXG5cdFx0Z3JhcGgub25VcGRhdGUoIGZ1bmN0aW9uKCkgeyB0aGlzLnVwZGF0ZSgpIH0uYmluZCh0aGlzKSApO1xuXHR9LFxuXG5cdGJ1aWxkOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50O1xuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGg7XG5cdFx0dmFyICQgPSBqUXVlcnk7XG5cblx0XHR2YXIgZG9tYWluID0gZ3JhcGguZGF0YURvbWFpbigpO1xuXHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdCQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0JChlbGVtZW50KS5zbGlkZXIoIHtcblx0XHRcdFx0cmFuZ2U6IHRydWUsXG5cdFx0XHRcdG1pbjogZG9tYWluWzBdLFxuXHRcdFx0XHRtYXg6IGRvbWFpblsxXSxcblx0XHRcdFx0dmFsdWVzOiBbIFxuXHRcdFx0XHRcdGRvbWFpblswXSxcblx0XHRcdFx0XHRkb21haW5bMV1cblx0XHRcdFx0XSxcblx0XHRcdFx0c2xpZGU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG5cblx0XHRcdFx0XHRpZiAodWkudmFsdWVzWzFdIDw9IHVpLnZhbHVlc1swXSkgcmV0dXJuO1xuXG5cdFx0XHRcdFx0Z3JhcGgud2luZG93LnhNaW4gPSB1aS52YWx1ZXNbMF07XG5cdFx0XHRcdFx0Z3JhcGgud2luZG93LnhNYXggPSB1aS52YWx1ZXNbMV07XG5cdFx0XHRcdFx0Z3JhcGgudXBkYXRlKCk7XG5cblx0XHRcdFx0XHR2YXIgZG9tYWluID0gZ3JhcGguZGF0YURvbWFpbigpO1xuXG5cdFx0XHRcdFx0Ly8gaWYgd2UncmUgYXQgYW4gZXh0cmVtZSwgc3RpY2sgdGhlcmVcblx0XHRcdFx0XHRpZiAoZG9tYWluWzBdID09IHVpLnZhbHVlc1swXSkge1xuXHRcdFx0XHRcdFx0Z3JhcGgud2luZG93LnhNaW4gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKGRvbWFpblsxXSA9PSB1aS52YWx1ZXNbMV0pIHtcblx0XHRcdFx0XHRcdGdyYXBoLndpbmRvdy54TWF4ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHNlbGYuc2xpZGVDYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2soZ3JhcGgsIGdyYXBoLndpbmRvdy54TWluLCBncmFwaC53aW5kb3cueE1heCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cblx0XHQkKGVsZW1lbnQpWzBdLnN0eWxlLndpZHRoID0gZ3JhcGgud2lkdGggKyAncHgnO1xuXG5cdH0sXG5cblx0dXBkYXRlOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50O1xuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGg7XG5cdFx0dmFyICQgPSBqUXVlcnk7XG5cblx0XHR2YXIgdmFsdWVzID0gJChlbGVtZW50KS5zbGlkZXIoJ29wdGlvbicsICd2YWx1ZXMnKTtcblxuXHRcdHZhciBkb21haW4gPSBncmFwaC5kYXRhRG9tYWluKCk7XG5cblx0XHQkKGVsZW1lbnQpLnNsaWRlcignb3B0aW9uJywgJ21pbicsIGRvbWFpblswXSk7XG5cdFx0JChlbGVtZW50KS5zbGlkZXIoJ29wdGlvbicsICdtYXgnLCBkb21haW5bMV0pO1xuXG5cdFx0aWYgKGdyYXBoLndpbmRvdy54TWluID09IG51bGwpIHtcblx0XHRcdHZhbHVlc1swXSA9IGRvbWFpblswXTtcblx0XHR9XG5cdFx0aWYgKGdyYXBoLndpbmRvdy54TWF4ID09IG51bGwpIHtcblx0XHRcdHZhbHVlc1sxXSA9IGRvbWFpblsxXTtcblx0XHR9XG5cblx0XHQkKGVsZW1lbnQpLnNsaWRlcignb3B0aW9uJywgJ3ZhbHVlcycsIHZhbHVlcyk7XG5cdH0sXG5cblx0b25TbGlkZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLnNsaWRlQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuXHR9XG59KTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5SYW5nZVNsaWRlci5QcmV2aWV3Jyk7XG5cblJpY2tzaGF3LkdyYXBoLlJhbmdlU2xpZGVyLlByZXZpZXcgPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoe1xuXG5cdGluaXRpYWxpemU6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdGlmICghYXJncy5lbGVtZW50KSB0aHJvdyBcIlJpY2tzaGF3LkdyYXBoLlJhbmdlU2xpZGVyLlByZXZpZXcgbmVlZHMgYSByZWZlcmVuY2UgdG8gYW4gZWxlbWVudFwiO1xuXHRcdGlmICghYXJncy5ncmFwaCAmJiAhYXJncy5ncmFwaHMpIHRocm93IFwiUmlja3NoYXcuR3JhcGguUmFuZ2VTbGlkZXIuUHJldmlldyBuZWVkcyBhIHJlZmVyZW5jZSB0byBhbiBncmFwaCBvciBhbiBhcnJheSBvZiBncmFwaHNcIjtcblxuXHRcdHRoaXMuZWxlbWVudCA9IGFyZ3MuZWxlbWVudDtcblx0XHR0aGlzLmVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuXG5cdFx0dGhpcy5ncmFwaHMgPSBhcmdzLmdyYXBoID8gWyBhcmdzLmdyYXBoIF0gOiBhcmdzLmdyYXBocztcblxuXHRcdHRoaXMuZGVmYXVsdHMgPSB7XG5cdFx0XHRoZWlnaHQ6IDc1LFxuXHRcdFx0d2lkdGg6IDQwMCxcblx0XHRcdGdyaXBwZXJDb2xvcjogdW5kZWZpbmVkLFxuXHRcdFx0ZnJhbWVUb3BUaGlja25lc3M6IDMsXG5cdFx0XHRmcmFtZUhhbmRsZVRoaWNrbmVzczogMTAsXG5cdFx0XHRmcmFtZUNvbG9yOiBcIiNkNGQ0ZDRcIixcblx0XHRcdGZyYW1lT3BhY2l0eTogMSxcblx0XHRcdG1pbmltdW1GcmFtZVdpZHRoOiAwLFxuXHRcdFx0aGVpZ2h0UmF0aW86IDAuMlxuXHRcdH07XG5cblx0XHR0aGlzLmhlaWdodFJhdGlvID0gYXJncy5oZWlnaHRSYXRpbyB8fCB0aGlzLmRlZmF1bHRzLmhlaWdodFJhdGlvO1xuXHRcdHRoaXMuZGVmYXVsdHMuZ3JpcHBlckNvbG9yID0gZDMucmdiKHRoaXMuZGVmYXVsdHMuZnJhbWVDb2xvcikuZGFya2VyKCkudG9TdHJpbmcoKTsgXG5cblx0XHR0aGlzLmNvbmZpZ3VyZUNhbGxiYWNrcyA9IFtdO1xuXHRcdHRoaXMuc2xpZGVDYWxsYmFja3MgPSBbXTtcblxuXHRcdHRoaXMucHJldmlld3MgPSBbXTtcblxuXHRcdGlmICghYXJncy53aWR0aCkgdGhpcy53aWR0aEZyb21HcmFwaCA9IHRydWU7XG5cdFx0aWYgKCFhcmdzLmhlaWdodCkgdGhpcy5oZWlnaHRGcm9tR3JhcGggPSB0cnVlO1xuXG5cdFx0aWYgKHRoaXMud2lkdGhGcm9tR3JhcGggfHwgdGhpcy5oZWlnaHRGcm9tR3JhcGgpIHtcblx0XHRcdHRoaXMuZ3JhcGhzWzBdLm9uQ29uZmlndXJlKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhpcy5jb25maWd1cmUoYXJncyk7IHRoaXMucmVuZGVyKCk7XG5cdFx0XHR9LmJpbmQodGhpcykpO1xuXHRcdH1cblxuXHRcdGFyZ3Mud2lkdGggPSBhcmdzLndpZHRoIHx8IHRoaXMuZ3JhcGhzWzBdLndpZHRoIHx8IHRoaXMuZGVmYXVsdHMud2lkdGg7XG5cdFx0YXJncy5oZWlnaHQgPSBhcmdzLmhlaWdodCB8fCB0aGlzLmdyYXBoc1swXS5oZWlnaHQgKiB0aGlzLmhlaWdodFJhdGlvIHx8IHRoaXMuZGVmYXVsdHMuaGVpZ2h0O1xuXG5cdFx0dGhpcy5jb25maWd1cmUoYXJncyk7XG5cdFx0dGhpcy5yZW5kZXIoKTtcblx0fSxcblxuXHRvblNsaWRlOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMuc2xpZGVDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG5cdH0sXG5cblx0b25Db25maWd1cmU6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5jb25maWd1cmVDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG5cdH0sXG5cblx0Y29uZmlndXJlOiBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHR0aGlzLmNvbmZpZyA9IHRoaXMuY29uZmlnIHx8IHt9O1xuXG5cdFx0dGhpcy5jb25maWd1cmVDYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdFx0Y2FsbGJhY2soYXJncyk7XG5cdFx0fSk7XG5cblx0XHRSaWNrc2hhdy5rZXlzKHRoaXMuZGVmYXVsdHMpLmZvckVhY2goZnVuY3Rpb24oaykge1xuXHRcdFx0dGhpcy5jb25maWdba10gPSBrIGluIGFyZ3MgPyBhcmdzW2tdXG5cdFx0XHRcdDogayBpbiB0aGlzLmNvbmZpZyA/IHRoaXMuY29uZmlnW2tdXG5cdFx0XHRcdDogdGhpcy5kZWZhdWx0c1trXTtcblx0XHR9LCB0aGlzKTtcblxuXHRcdGlmICgnd2lkdGgnIGluIGFyZ3MgfHwgJ2hlaWdodCcgaW4gYXJncykge1xuXG5cdFx0XHRpZiAodGhpcy53aWR0aEZyb21HcmFwaCkge1xuXHRcdFx0XHR0aGlzLmNvbmZpZy53aWR0aCA9IHRoaXMuZ3JhcGhzWzBdLndpZHRoO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5oZWlnaHRGcm9tR3JhcGgpIHtcblx0XHRcdFx0dGhpcy5jb25maWcuaGVpZ2h0ID0gdGhpcy5ncmFwaHNbMF0uaGVpZ2h0ICogdGhpcy5oZWlnaHRSYXRpbztcblx0XHRcdFx0dGhpcy5wcmV2aWV3SGVpZ2h0ID0gdGhpcy5jb25maWcuaGVpZ2h0O1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnByZXZpZXdzLmZvckVhY2goZnVuY3Rpb24ocHJldmlldykge1xuXG5cdFx0XHRcdHZhciBoZWlnaHQgPSB0aGlzLnByZXZpZXdIZWlnaHQgLyB0aGlzLmdyYXBocy5sZW5ndGggLSB0aGlzLmNvbmZpZy5mcmFtZVRvcFRoaWNrbmVzcyAqIDI7XG5cdFx0XHRcdHZhciB3aWR0aCA9IHRoaXMuY29uZmlnLndpZHRoIC0gdGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MgKiAyO1xuXHRcdFx0XHRwcmV2aWV3LnNldFNpemUoeyB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0IH0pO1xuXG5cdFx0XHRcdGlmICh0aGlzLnN2Zykge1xuXHRcdFx0XHRcdHZhciBzdmdIZWlnaHQgPSBoZWlnaHQgKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyAqIDI7XG5cdFx0XHRcdFx0dmFyIHN2Z1dpZHRoID0gd2lkdGggKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyAqIDI7XG5cdFx0XHRcdFx0dGhpcy5zdmcuc3R5bGUoXCJ3aWR0aFwiLCBzdmdXaWR0aCArIFwicHhcIik7XG5cdFx0XHRcdFx0dGhpcy5zdmcuc3R5bGUoXCJoZWlnaHRcIiwgc3ZnSGVpZ2h0ICsgXCJweFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fSwgdGhpcyk7XG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHR0aGlzLnN2ZyA9IGQzLnNlbGVjdCh0aGlzLmVsZW1lbnQpXG5cdFx0XHQuc2VsZWN0QWxsKFwic3ZnLnJpY2tzaGF3X3JhbmdlX3NsaWRlcl9wcmV2aWV3XCIpXG5cdFx0XHQuZGF0YShbbnVsbF0pO1xuXG5cdFx0dGhpcy5wcmV2aWV3SGVpZ2h0ID0gdGhpcy5jb25maWcuaGVpZ2h0IC0gKHRoaXMuY29uZmlnLmZyYW1lVG9wVGhpY2tuZXNzICogMik7XG5cdFx0dGhpcy5wcmV2aWV3V2lkdGggPSB0aGlzLmNvbmZpZy53aWR0aCAtICh0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyAqIDIpO1xuXG5cdFx0dGhpcy5jdXJyZW50RnJhbWUgPSBbMCwgdGhpcy5wcmV2aWV3V2lkdGhdO1xuXG5cdFx0dmFyIGJ1aWxkR3JhcGggPSBmdW5jdGlvbihwYXJlbnQsIGluZGV4KSB7XG5cblx0XHRcdHZhciBncmFwaEFyZ3MgPSBSaWNrc2hhdy5leHRlbmQoe30sIHBhcmVudC5jb25maWcpO1xuXHRcdFx0dmFyIGhlaWdodCA9IHNlbGYucHJldmlld0hlaWdodCAvIHNlbGYuZ3JhcGhzLmxlbmd0aDtcblx0XHRcdHZhciByZW5kZXJlciA9IHBhcmVudC5yZW5kZXJlci5uYW1lO1xuXG5cdFx0XHRSaWNrc2hhdy5leHRlbmQoZ3JhcGhBcmdzLCB7XG5cdFx0XHRcdGVsZW1lbnQ6IHRoaXMuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSksXG5cdFx0XHRcdGhlaWdodDogaGVpZ2h0LFxuXHRcdFx0XHR3aWR0aDogc2VsZi5wcmV2aWV3V2lkdGgsXG5cdFx0XHRcdHNlcmllczogcGFyZW50LnNlcmllcyxcblx0XHRcdFx0cmVuZGVyZXI6IHJlbmRlcmVyXG5cdFx0XHR9KTtcblxuXHRcdFx0dmFyIGdyYXBoID0gbmV3IFJpY2tzaGF3LkdyYXBoKGdyYXBoQXJncyk7XG5cdFx0XHRzZWxmLnByZXZpZXdzLnB1c2goZ3JhcGgpO1xuXG5cdFx0XHRwYXJlbnQub25VcGRhdGUoZnVuY3Rpb24oKSB7IGdyYXBoLnJlbmRlcigpOyBzZWxmLnJlbmRlcigpIH0pO1xuXG5cdFx0XHRwYXJlbnQub25Db25maWd1cmUoZnVuY3Rpb24oYXJncykgeyBcblx0XHRcdFx0Ly8gZG9uJ3QgcHJvcGFnYXRlIGhlaWdodFxuXHRcdFx0XHRkZWxldGUgYXJncy5oZWlnaHQ7XG5cdFx0XHRcdGFyZ3Mud2lkdGggPSBhcmdzLndpZHRoIC0gc2VsZi5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MgKiAyO1xuXHRcdFx0XHRncmFwaC5jb25maWd1cmUoYXJncyk7XG5cdFx0XHRcdGdyYXBoLnJlbmRlcigpO1xuXHRcdFx0fSk7XG5cblx0XHRcdGdyYXBoLnJlbmRlcigpO1xuXHRcdH07XG5cblx0XHR2YXIgZ3JhcGhDb250YWluZXIgPSBkMy5zZWxlY3QodGhpcy5lbGVtZW50KVxuXHRcdFx0LnNlbGVjdEFsbChcImRpdi5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld19jb250YWluZXJcIilcblx0XHRcdC5kYXRhKHRoaXMuZ3JhcGhzKTtcblxuXHRcdHZhciB0cmFuc2xhdGVDb21tYW5kID0gXCJ0cmFuc2xhdGUoXCIgK1xuXHRcdFx0dGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MgKyBcInB4LCBcIiArXG5cdFx0XHR0aGlzLmNvbmZpZy5mcmFtZVRvcFRoaWNrbmVzcyArIFwicHgpXCI7XG5cblx0XHRncmFwaENvbnRhaW5lci5lbnRlcigpXG5cdFx0XHQuYXBwZW5kKFwiZGl2XCIpXG5cdFx0XHQuY2xhc3NlZChcInJpY2tzaGF3X3JhbmdlX3NsaWRlcl9wcmV2aWV3X2NvbnRhaW5lclwiLCB0cnVlKVxuXHRcdFx0LnN0eWxlKFwiLXdlYmtpdC10cmFuc2Zvcm1cIiwgdHJhbnNsYXRlQ29tbWFuZClcblx0XHRcdC5zdHlsZShcIi1tb3otdHJhbnNmb3JtXCIsIHRyYW5zbGF0ZUNvbW1hbmQpXG5cdFx0XHQuc3R5bGUoXCItbXMtdHJhbnNmb3JtXCIsIHRyYW5zbGF0ZUNvbW1hbmQpXG5cdFx0XHQuc3R5bGUoXCJ0cmFuc2Zvcm1cIiwgdHJhbnNsYXRlQ29tbWFuZClcblx0XHRcdC5lYWNoKGJ1aWxkR3JhcGgpO1xuXG5cdFx0Z3JhcGhDb250YWluZXIuZXhpdCgpXG5cdFx0XHQucmVtb3ZlKCk7XG5cblx0XHQvLyBVc2UgdGhlIGZpcnN0IGdyYXBoIGFzIHRoZSBcIm1hc3RlclwiIGZvciB0aGUgZnJhbWUgc3RhdGVcblx0XHR2YXIgbWFzdGVyR3JhcGggPSB0aGlzLmdyYXBoc1swXTtcblxuXHRcdHZhciBkb21haW5TY2FsZSA9IGQzLnNjYWxlLmxpbmVhcigpXG5cdFx0XHQuZG9tYWluKFswLCB0aGlzLnByZXZpZXdXaWR0aF0pXG5cdFx0XHQucmFuZ2UobWFzdGVyR3JhcGguZGF0YURvbWFpbigpKTtcblxuXHRcdHZhciBjdXJyZW50V2luZG93ID0gW21hc3RlckdyYXBoLndpbmRvdy54TWluLCBtYXN0ZXJHcmFwaC53aW5kb3cueE1heF07XG5cblx0XHR0aGlzLmN1cnJlbnRGcmFtZVswXSA9IGN1cnJlbnRXaW5kb3dbMF0gPT09IHVuZGVmaW5lZCA/IFxuXHRcdFx0MCA6IE1hdGgucm91bmQoZG9tYWluU2NhbGUuaW52ZXJ0KGN1cnJlbnRXaW5kb3dbMF0pKTtcblxuXHRcdGlmICh0aGlzLmN1cnJlbnRGcmFtZVswXSA8IDApIHRoaXMuY3VycmVudEZyYW1lWzBdID0gMDtcblxuXHRcdHRoaXMuY3VycmVudEZyYW1lWzFdID0gY3VycmVudFdpbmRvd1sxXSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMucHJldmlld1dpZHRoIDogZG9tYWluU2NhbGUuaW52ZXJ0KGN1cnJlbnRXaW5kb3dbMV0pO1xuXG5cdFx0aWYgKHRoaXMuY3VycmVudEZyYW1lWzFdIC0gdGhpcy5jdXJyZW50RnJhbWVbMF0gPCBzZWxmLmNvbmZpZy5taW5pbXVtRnJhbWVXaWR0aCkge1xuXHRcdFx0dGhpcy5jdXJyZW50RnJhbWVbMV0gPSAodGhpcy5jdXJyZW50RnJhbWVbMF0gfHwgMCkgKyBzZWxmLmNvbmZpZy5taW5pbXVtRnJhbWVXaWR0aDtcblx0XHR9XG5cblx0XHR0aGlzLnN2Zy5lbnRlcigpXG5cdFx0XHQuYXBwZW5kKFwic3ZnXCIpXG5cdFx0XHQuY2xhc3NlZChcInJpY2tzaGF3X3JhbmdlX3NsaWRlcl9wcmV2aWV3XCIsIHRydWUpXG5cdFx0XHQuc3R5bGUoXCJoZWlnaHRcIiwgdGhpcy5jb25maWcuaGVpZ2h0ICsgXCJweFwiKVxuXHRcdFx0LnN0eWxlKFwid2lkdGhcIiwgdGhpcy5jb25maWcud2lkdGggKyBcInB4XCIpXG5cdFx0XHQuc3R5bGUoXCJwb3NpdGlvblwiLCBcImFic29sdXRlXCIpXG5cdFx0XHQuc3R5bGUoXCJ0b3BcIiwgMCk7XG5cblx0XHR0aGlzLl9yZW5kZXJEaW1taW5nKCk7XG5cdFx0dGhpcy5fcmVuZGVyRnJhbWUoKTtcblx0XHR0aGlzLl9yZW5kZXJHcmlwcGVycygpO1xuXHRcdHRoaXMuX3JlbmRlckhhbmRsZXMoKTtcblx0XHR0aGlzLl9yZW5kZXJNaWRkbGUoKTtcblxuXHRcdHRoaXMuX3JlZ2lzdGVyTW91c2VFdmVudHMoKTtcblx0fSxcblxuXHRfcmVuZGVyRGltbWluZzogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZWxlbWVudCA9IHRoaXMuc3ZnXG5cdFx0XHQuc2VsZWN0QWxsKFwicGF0aC5kaW1taW5nXCIpXG5cdFx0XHQuZGF0YShbbnVsbF0pO1xuXG5cdFx0ZWxlbWVudC5lbnRlcigpXG5cdFx0XHQuYXBwZW5kKFwicGF0aFwiKVxuXHRcdFx0LmF0dHIoXCJmaWxsXCIsIFwid2hpdGVcIilcblx0XHRcdC5hdHRyKFwiZmlsbC1vcGFjaXR5XCIsIFwiMC43XCIpXG5cdFx0XHQuYXR0cihcImZpbGwtcnVsZVwiLCBcImV2ZW5vZGRcIilcblx0XHRcdC5jbGFzc2VkKFwiZGltbWluZ1wiLCB0cnVlKTtcblxuXHRcdHZhciBwYXRoID0gXCJcIjtcblx0XHRwYXRoICs9IFwiIE0gXCIgKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyArIFwiIFwiICsgdGhpcy5jb25maWcuZnJhbWVUb3BUaGlja25lc3M7XG5cdFx0cGF0aCArPSBcIiBoIFwiICsgdGhpcy5wcmV2aWV3V2lkdGg7XG5cdFx0cGF0aCArPSBcIiB2IFwiICsgdGhpcy5wcmV2aWV3SGVpZ2h0O1xuXHRcdHBhdGggKz0gXCIgaCBcIiArIC10aGlzLnByZXZpZXdXaWR0aDtcblx0XHRwYXRoICs9IFwiIHogXCI7XG5cdFx0cGF0aCArPSBcIiBNIFwiICsgTWF0aC5tYXgodGhpcy5jdXJyZW50RnJhbWVbMF0sIHRoaXMuY29uZmlnLmZyYW1lSGFuZGxlVGhpY2tuZXNzKSArIFwiIFwiICsgdGhpcy5jb25maWcuZnJhbWVUb3BUaGlja25lc3M7XG5cdFx0cGF0aCArPSBcIiBIIFwiICsgTWF0aC5taW4odGhpcy5jdXJyZW50RnJhbWVbMV0gKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyAqIDIsIHRoaXMucHJldmlld1dpZHRoICsgdGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MpO1xuXHRcdHBhdGggKz0gXCIgdiBcIiArIHRoaXMucHJldmlld0hlaWdodDtcblx0XHRwYXRoICs9IFwiIEggXCIgKyBNYXRoLm1heCh0aGlzLmN1cnJlbnRGcmFtZVswXSwgdGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MpO1xuXHRcdHBhdGggKz0gXCIgelwiO1xuXG5cdFx0ZWxlbWVudC5hdHRyKFwiZFwiLCBwYXRoKTtcblx0fSxcblxuXHRfcmVuZGVyRnJhbWU6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIGVsZW1lbnQgPSB0aGlzLnN2Z1xuXHRcdFx0LnNlbGVjdEFsbChcInBhdGguZnJhbWVcIilcblx0XHRcdC5kYXRhKFtudWxsXSk7XG5cblx0XHRlbGVtZW50LmVudGVyKClcblx0XHRcdC5hcHBlbmQoXCJwYXRoXCIpXG5cdFx0XHQuYXR0cihcInN0cm9rZVwiLCBcIndoaXRlXCIpXG5cdFx0XHQuYXR0cihcInN0cm9rZS13aWR0aFwiLCBcIjFweFwiKVxuXHRcdFx0LmF0dHIoXCJzdHJva2UtbGluZWpvaW5cIiwgXCJyb3VuZFwiKVxuXHRcdFx0LmF0dHIoXCJmaWxsXCIsIHRoaXMuY29uZmlnLmZyYW1lQ29sb3IpXG5cdFx0XHQuYXR0cihcImZpbGwtb3BhY2l0eVwiLCB0aGlzLmNvbmZpZy5mcmFtZU9wYWNpdHkpXG5cdFx0XHQuYXR0cihcImZpbGwtcnVsZVwiLCBcImV2ZW5vZGRcIilcblx0XHRcdC5jbGFzc2VkKFwiZnJhbWVcIiwgdHJ1ZSk7XG5cblx0XHR2YXIgcGF0aCA9IFwiXCI7XG5cdFx0cGF0aCArPSBcIiBNIFwiICsgdGhpcy5jdXJyZW50RnJhbWVbMF0gKyBcIiAwXCI7XG5cdFx0cGF0aCArPSBcIiBIIFwiICsgKHRoaXMuY3VycmVudEZyYW1lWzFdICsgKHRoaXMuY29uZmlnLmZyYW1lSGFuZGxlVGhpY2tuZXNzICogMikpO1xuXHRcdHBhdGggKz0gXCIgViBcIiArIHRoaXMuY29uZmlnLmhlaWdodDtcblx0XHRwYXRoICs9IFwiIEggXCIgKyAodGhpcy5jdXJyZW50RnJhbWVbMF0pO1xuXHRcdHBhdGggKz0gXCIgelwiO1xuXHRcdHBhdGggKz0gXCIgTSBcIiArICh0aGlzLmN1cnJlbnRGcmFtZVswXSArIHRoaXMuY29uZmlnLmZyYW1lSGFuZGxlVGhpY2tuZXNzKSArIFwiIFwiICsgdGhpcy5jb25maWcuZnJhbWVUb3BUaGlja25lc3M7XG5cdFx0cGF0aCArPSBcIiBIIFwiICsgKHRoaXMuY3VycmVudEZyYW1lWzFdICsgdGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MpO1xuXHRcdHBhdGggKz0gXCIgdiBcIiArIHRoaXMucHJldmlld0hlaWdodDtcblx0XHRwYXRoICs9IFwiIEggXCIgKyAodGhpcy5jdXJyZW50RnJhbWVbMF0gKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyk7XG5cdFx0cGF0aCArPSBcIiB6XCI7XG5cblx0XHRlbGVtZW50LmF0dHIoXCJkXCIsIHBhdGgpO1xuXHR9LFxuXG5cdF9yZW5kZXJHcmlwcGVyczogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZ3JpcHBlciA9IHRoaXMuc3ZnLnNlbGVjdEFsbChcInBhdGguZ3JpcHBlclwiKVxuXHRcdFx0LmRhdGEoW251bGxdKTtcblxuXHRcdGdyaXBwZXIuZW50ZXIoKVxuXHRcdFx0LmFwcGVuZChcInBhdGhcIilcblx0XHRcdC5hdHRyKFwic3Ryb2tlXCIsIHRoaXMuY29uZmlnLmdyaXBwZXJDb2xvcilcblx0XHRcdC5jbGFzc2VkKFwiZ3JpcHBlclwiLCB0cnVlKTtcblxuXHRcdHZhciBwYXRoID0gXCJcIjtcblxuXHRcdFswLjQsIDAuNl0uZm9yRWFjaChmdW5jdGlvbihzcGFjaW5nKSB7XG5cdFx0XHRwYXRoICs9IFwiIE0gXCIgKyBNYXRoLnJvdW5kKCh0aGlzLmN1cnJlbnRGcmFtZVswXSArICh0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcyAqIHNwYWNpbmcpKSkgKyBcIiBcIiArIE1hdGgucm91bmQodGhpcy5jb25maWcuaGVpZ2h0ICogMC4zKTtcblx0XHRcdHBhdGggKz0gXCIgViBcIiArIE1hdGgucm91bmQodGhpcy5jb25maWcuaGVpZ2h0ICogMC43KTtcblx0XHRcdHBhdGggKz0gXCIgTSBcIiArIE1hdGgucm91bmQoKHRoaXMuY3VycmVudEZyYW1lWzFdICsgKHRoaXMuY29uZmlnLmZyYW1lSGFuZGxlVGhpY2tuZXNzICogKDEgKyBzcGFjaW5nKSkpKSArIFwiIFwiICsgTWF0aC5yb3VuZCh0aGlzLmNvbmZpZy5oZWlnaHQgKiAwLjMpO1xuXHRcdFx0cGF0aCArPSBcIiBWIFwiICsgTWF0aC5yb3VuZCh0aGlzLmNvbmZpZy5oZWlnaHQgKiAwLjcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cblx0XHRncmlwcGVyLmF0dHIoXCJkXCIsIHBhdGgpO1xuXHR9LFxuXG5cdF9yZW5kZXJIYW5kbGVzOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBsZWZ0SGFuZGxlID0gdGhpcy5zdmcuc2VsZWN0QWxsKFwicmVjdC5sZWZ0X2hhbmRsZVwiKVxuXHRcdFx0LmRhdGEoW251bGxdKTtcblxuXHRcdGxlZnRIYW5kbGUuZW50ZXIoKVxuXHRcdFx0LmFwcGVuZChcInJlY3RcIilcblx0XHRcdC5hdHRyKCd3aWR0aCcsIHRoaXMuY29uZmlnLmZyYW1lSGFuZGxlVGhpY2tuZXNzKVxuXHRcdFx0LnN0eWxlKFwiY3Vyc29yXCIsIFwiZXctcmVzaXplXCIpXG5cdFx0XHQuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwgXCIwXCIpXG5cdFx0XHQuY2xhc3NlZChcImxlZnRfaGFuZGxlXCIsIHRydWUpO1xuXG5cdFx0bGVmdEhhbmRsZVxuXHRcdFx0LmF0dHIoJ3gnLCB0aGlzLmN1cnJlbnRGcmFtZVswXSlcblx0XHRcdC5hdHRyKCdoZWlnaHQnLCB0aGlzLmNvbmZpZy5oZWlnaHQpO1xuXG5cdFx0dmFyIHJpZ2h0SGFuZGxlID0gdGhpcy5zdmcuc2VsZWN0QWxsKFwicmVjdC5yaWdodF9oYW5kbGVcIilcblx0XHRcdC5kYXRhKFtudWxsXSk7XG5cblx0XHRyaWdodEhhbmRsZS5lbnRlcigpXG5cdFx0XHQuYXBwZW5kKFwicmVjdFwiKVxuXHRcdFx0LmF0dHIoJ3dpZHRoJywgdGhpcy5jb25maWcuZnJhbWVIYW5kbGVUaGlja25lc3MpXG5cdFx0XHQuc3R5bGUoXCJjdXJzb3JcIiwgXCJldy1yZXNpemVcIilcblx0XHRcdC5zdHlsZShcImZpbGwtb3BhY2l0eVwiLCBcIjBcIilcblx0XHRcdC5jbGFzc2VkKFwicmlnaHRfaGFuZGxlXCIsIHRydWUpO1xuXG5cdFx0cmlnaHRIYW5kbGVcblx0XHRcdC5hdHRyKCd4JywgdGhpcy5jdXJyZW50RnJhbWVbMV0gKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcylcblx0XHRcdC5hdHRyKCdoZWlnaHQnLCB0aGlzLmNvbmZpZy5oZWlnaHQpO1xuXHR9LFxuXG5cdF9yZW5kZXJNaWRkbGU6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIG1pZGRsZUhhbmRsZSA9IHRoaXMuc3ZnLnNlbGVjdEFsbChcInJlY3QubWlkZGxlX2hhbmRsZVwiKVxuXHRcdFx0LmRhdGEoW251bGxdKTtcblxuXHRcdG1pZGRsZUhhbmRsZS5lbnRlcigpXG5cdFx0XHQuYXBwZW5kKFwicmVjdFwiKVxuXHRcdFx0LnN0eWxlKFwiY3Vyc29yXCIsIFwibW92ZVwiKVxuXHRcdFx0LnN0eWxlKFwiZmlsbC1vcGFjaXR5XCIsIFwiMFwiKVxuXHRcdFx0LmNsYXNzZWQoXCJtaWRkbGVfaGFuZGxlXCIsIHRydWUpO1xuXG5cdFx0bWlkZGxlSGFuZGxlXG5cdFx0XHQuYXR0cignd2lkdGgnLCBNYXRoLm1heCgwLCB0aGlzLmN1cnJlbnRGcmFtZVsxXSAtIHRoaXMuY3VycmVudEZyYW1lWzBdKSlcblx0XHRcdC5hdHRyKCd4JywgdGhpcy5jdXJyZW50RnJhbWVbMF0gKyB0aGlzLmNvbmZpZy5mcmFtZUhhbmRsZVRoaWNrbmVzcylcblx0XHRcdC5hdHRyKCdoZWlnaHQnLCB0aGlzLmNvbmZpZy5oZWlnaHQpO1xuXHR9LFxuXG5cdF9yZWdpc3Rlck1vdXNlRXZlbnRzOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBlbGVtZW50ID0gZDMuc2VsZWN0KHRoaXMuZWxlbWVudCk7XG5cblx0XHR2YXIgZHJhZyA9IHtcblx0XHRcdHRhcmdldDogbnVsbCxcblx0XHRcdHN0YXJ0OiBudWxsLFxuXHRcdFx0c3RvcDogbnVsbCxcblx0XHRcdGxlZnQ6IGZhbHNlLFxuXHRcdFx0cmlnaHQ6IGZhbHNlLFxuXHRcdFx0cmlnaWQ6IGZhbHNlXG5cdFx0fTtcblxuXHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdGZ1bmN0aW9uIG9uTW91c2Vtb3ZlKGRhdHVtLCBpbmRleCkge1xuXG5cdFx0XHRkcmFnLnN0b3AgPSBzZWxmLl9nZXRDbGllbnRYRnJvbUV2ZW50KGQzLmV2ZW50LCBkcmFnKTtcblx0XHRcdHZhciBkaXN0YW5jZVRyYXZlbGVkID0gZHJhZy5zdG9wIC0gZHJhZy5zdGFydDtcblx0XHRcdHZhciBmcmFtZUFmdGVyRHJhZyA9IHNlbGYuZnJhbWVCZWZvcmVEcmFnLnNsaWNlKDApO1xuXHRcdFx0dmFyIG1pbmltdW1GcmFtZVdpZHRoID0gc2VsZi5jb25maWcubWluaW11bUZyYW1lV2lkdGg7XG5cblx0XHRcdGlmIChkcmFnLnJpZ2lkKSB7XG5cdFx0XHRcdG1pbmltdW1GcmFtZVdpZHRoID0gc2VsZi5mcmFtZUJlZm9yZURyYWdbMV0gLSBzZWxmLmZyYW1lQmVmb3JlRHJhZ1swXTtcblx0XHRcdH1cblx0XHRcdGlmIChkcmFnLmxlZnQpIHtcblx0XHRcdFx0ZnJhbWVBZnRlckRyYWdbMF0gPSBNYXRoLm1heChmcmFtZUFmdGVyRHJhZ1swXSArIGRpc3RhbmNlVHJhdmVsZWQsIDApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRyYWcucmlnaHQpIHtcblx0XHRcdFx0ZnJhbWVBZnRlckRyYWdbMV0gPSBNYXRoLm1pbihmcmFtZUFmdGVyRHJhZ1sxXSArIGRpc3RhbmNlVHJhdmVsZWQsIHNlbGYucHJldmlld1dpZHRoKTtcblx0XHRcdH1cblxuXHRcdFx0dmFyIGN1cnJlbnRGcmFtZVdpZHRoID0gZnJhbWVBZnRlckRyYWdbMV0gLSBmcmFtZUFmdGVyRHJhZ1swXTtcblxuXHRcdFx0aWYgKGN1cnJlbnRGcmFtZVdpZHRoIDw9IG1pbmltdW1GcmFtZVdpZHRoKSB7XG5cblx0XHRcdFx0aWYgKGRyYWcubGVmdCkge1xuXHRcdFx0XHRcdGZyYW1lQWZ0ZXJEcmFnWzBdID0gZnJhbWVBZnRlckRyYWdbMV0gLSBtaW5pbXVtRnJhbWVXaWR0aDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZHJhZy5yaWdodCkge1xuXHRcdFx0XHRcdGZyYW1lQWZ0ZXJEcmFnWzFdID0gZnJhbWVBZnRlckRyYWdbMF0gKyBtaW5pbXVtRnJhbWVXaWR0aDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZnJhbWVBZnRlckRyYWdbMF0gPD0gMCkge1xuXHRcdFx0XHRcdGZyYW1lQWZ0ZXJEcmFnWzFdIC09IGZyYW1lQWZ0ZXJEcmFnWzBdO1xuXHRcdFx0XHRcdGZyYW1lQWZ0ZXJEcmFnWzBdID0gMDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZnJhbWVBZnRlckRyYWdbMV0gPj0gc2VsZi5wcmV2aWV3V2lkdGgpIHtcblx0XHRcdFx0XHRmcmFtZUFmdGVyRHJhZ1swXSAtPSAoZnJhbWVBZnRlckRyYWdbMV0gLSBzZWxmLnByZXZpZXdXaWR0aCk7XG5cdFx0XHRcdFx0ZnJhbWVBZnRlckRyYWdbMV0gPSBzZWxmLnByZXZpZXdXaWR0aDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRzZWxmLmdyYXBocy5mb3JFYWNoKGZ1bmN0aW9uKGdyYXBoKSB7XG5cblx0XHRcdFx0dmFyIGRvbWFpblNjYWxlID0gZDMuc2NhbGUubGluZWFyKClcblx0XHRcdFx0XHQuaW50ZXJwb2xhdGUoZDMuaW50ZXJwb2xhdGVOdW1iZXIpXG5cdFx0XHRcdFx0LmRvbWFpbihbMCwgc2VsZi5wcmV2aWV3V2lkdGhdKVxuXHRcdFx0XHRcdC5yYW5nZShncmFwaC5kYXRhRG9tYWluKCkpO1xuXG5cdFx0XHRcdHZhciB3aW5kb3dBZnRlckRyYWcgPSBbXG5cdFx0XHRcdFx0ZG9tYWluU2NhbGUoZnJhbWVBZnRlckRyYWdbMF0pLFxuXHRcdFx0XHRcdGRvbWFpblNjYWxlKGZyYW1lQWZ0ZXJEcmFnWzFdKVxuXHRcdFx0XHRdO1xuXG5cdFx0XHRcdHNlbGYuc2xpZGVDYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdFx0XHRcdGNhbGxiYWNrKGdyYXBoLCB3aW5kb3dBZnRlckRyYWdbMF0sIHdpbmRvd0FmdGVyRHJhZ1sxXSk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGlmIChmcmFtZUFmdGVyRHJhZ1swXSA9PT0gMCkge1xuXHRcdFx0XHRcdHdpbmRvd0FmdGVyRHJhZ1swXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZnJhbWVBZnRlckRyYWdbMV0gPT09IHNlbGYucHJldmlld1dpZHRoKSB7XG5cdFx0XHRcdFx0d2luZG93QWZ0ZXJEcmFnWzFdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGdyYXBoLndpbmRvdy54TWluID0gd2luZG93QWZ0ZXJEcmFnWzBdO1xuXHRcdFx0XHRncmFwaC53aW5kb3cueE1heCA9IHdpbmRvd0FmdGVyRHJhZ1sxXTtcblxuXHRcdFx0XHRncmFwaC51cGRhdGUoKTtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIG9uTW91c2Vkb3duKCkge1xuXHRcdFx0ZHJhZy50YXJnZXQgPSBkMy5ldmVudC50YXJnZXQ7XG5cdFx0XHRkcmFnLnN0YXJ0ID0gc2VsZi5fZ2V0Q2xpZW50WEZyb21FdmVudChkMy5ldmVudCwgZHJhZyk7XG5cdFx0XHRzZWxmLmZyYW1lQmVmb3JlRHJhZyA9IHNlbGYuY3VycmVudEZyYW1lLnNsaWNlKCk7XG5cdFx0XHRkMy5ldmVudC5wcmV2ZW50RGVmYXVsdCA/IGQzLmV2ZW50LnByZXZlbnREZWZhdWx0KCkgOiBkMy5ldmVudC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuXHRcdFx0ZDMuc2VsZWN0KGRvY3VtZW50KS5vbihcIm1vdXNlbW92ZS5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBvbk1vdXNlbW92ZSk7XG5cdFx0XHRkMy5zZWxlY3QoZG9jdW1lbnQpLm9uKFwibW91c2V1cC5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBvbk1vdXNldXApO1xuXHRcdFx0ZDMuc2VsZWN0KGRvY3VtZW50KS5vbihcInRvdWNobW92ZS5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBvbk1vdXNlbW92ZSk7XG5cdFx0XHRkMy5zZWxlY3QoZG9jdW1lbnQpLm9uKFwidG91Y2hlbmQucmlja3NoYXdfcmFuZ2Vfc2xpZGVyX3ByZXZpZXdcIiwgb25Nb3VzZXVwKTtcblx0XHRcdGQzLnNlbGVjdChkb2N1bWVudCkub24oXCJ0b3VjaGNhbmNlbC5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBvbk1vdXNldXApO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIG9uTW91c2Vkb3duTGVmdEhhbmRsZShkYXR1bSwgaW5kZXgpIHtcblx0XHRcdGRyYWcubGVmdCA9IHRydWU7XG5cdFx0XHRvbk1vdXNlZG93bigpO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIG9uTW91c2Vkb3duUmlnaHRIYW5kbGUoZGF0dW0sIGluZGV4KSB7XG5cdFx0XHRkcmFnLnJpZ2h0ID0gdHJ1ZTtcblx0XHRcdG9uTW91c2Vkb3duKCk7XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gb25Nb3VzZWRvd25NaWRkbGVIYW5kbGUoZGF0dW0sIGluZGV4KSB7XG5cdFx0XHRkcmFnLmxlZnQgPSB0cnVlO1xuXHRcdFx0ZHJhZy5yaWdodCA9IHRydWU7XG5cdFx0XHRkcmFnLnJpZ2lkID0gdHJ1ZTtcblx0XHRcdG9uTW91c2Vkb3duKCk7XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gb25Nb3VzZXVwKGRhdHVtLCBpbmRleCkge1xuXHRcdFx0ZDMuc2VsZWN0KGRvY3VtZW50KS5vbihcIm1vdXNlbW92ZS5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBudWxsKTtcblx0XHRcdGQzLnNlbGVjdChkb2N1bWVudCkub24oXCJtb3VzZXVwLnJpY2tzaGF3X3JhbmdlX3NsaWRlcl9wcmV2aWV3XCIsIG51bGwpO1xuXHRcdFx0ZDMuc2VsZWN0KGRvY3VtZW50KS5vbihcInRvdWNobW92ZS5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBudWxsKTtcblx0XHRcdGQzLnNlbGVjdChkb2N1bWVudCkub24oXCJ0b3VjaGVuZC5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBudWxsKTtcblx0XHRcdGQzLnNlbGVjdChkb2N1bWVudCkub24oXCJ0b3VjaGNhbmNlbC5yaWNrc2hhd19yYW5nZV9zbGlkZXJfcHJldmlld1wiLCBudWxsKTtcblx0XHRcdGRlbGV0ZSBzZWxmLmZyYW1lQmVmb3JlRHJhZztcblx0XHRcdGRyYWcubGVmdCA9IGZhbHNlO1xuXHRcdFx0ZHJhZy5yaWdodCA9IGZhbHNlO1xuXHRcdFx0ZHJhZy5yaWdpZCA9IGZhbHNlO1xuXHRcdH1cblxuXHRcdGVsZW1lbnQuc2VsZWN0KFwicmVjdC5sZWZ0X2hhbmRsZVwiKS5vbihcIm1vdXNlZG93blwiLCBvbk1vdXNlZG93bkxlZnRIYW5kbGUpO1xuXHRcdGVsZW1lbnQuc2VsZWN0KFwicmVjdC5yaWdodF9oYW5kbGVcIikub24oXCJtb3VzZWRvd25cIiwgb25Nb3VzZWRvd25SaWdodEhhbmRsZSk7XG5cdFx0ZWxlbWVudC5zZWxlY3QoXCJyZWN0Lm1pZGRsZV9oYW5kbGVcIikub24oXCJtb3VzZWRvd25cIiwgb25Nb3VzZWRvd25NaWRkbGVIYW5kbGUpO1xuXHRcdGVsZW1lbnQuc2VsZWN0KFwicmVjdC5sZWZ0X2hhbmRsZVwiKS5vbihcInRvdWNoc3RhcnRcIiwgb25Nb3VzZWRvd25MZWZ0SGFuZGxlKTtcblx0XHRlbGVtZW50LnNlbGVjdChcInJlY3QucmlnaHRfaGFuZGxlXCIpLm9uKFwidG91Y2hzdGFydFwiLCBvbk1vdXNlZG93blJpZ2h0SGFuZGxlKTtcblx0XHRlbGVtZW50LnNlbGVjdChcInJlY3QubWlkZGxlX2hhbmRsZVwiKS5vbihcInRvdWNoc3RhcnRcIiwgb25Nb3VzZWRvd25NaWRkbGVIYW5kbGUpO1xuXHR9LFxuXG5cdF9nZXRDbGllbnRYRnJvbUV2ZW50OiBmdW5jdGlvbihldmVudCwgZHJhZykge1xuXG5cdFx0c3dpdGNoIChldmVudC50eXBlKSB7XG5cdFx0XHRjYXNlICd0b3VjaHN0YXJ0Jzpcblx0XHRcdGNhc2UgJ3RvdWNobW92ZSc6XG5cdFx0XHRcdHZhciB0b3VjaExpc3QgPSBldmVudC5jaGFuZ2VkVG91Y2hlcztcblx0XHRcdFx0dmFyIHRvdWNoID0gbnVsbDtcblx0XHRcdFx0Zm9yICh2YXIgdG91Y2hJbmRleCA9IDA7IHRvdWNoSW5kZXggPCB0b3VjaExpc3QubGVuZ3RoOyB0b3VjaEluZGV4KyspIHtcblx0XHRcdFx0XHRpZiAodG91Y2hMaXN0W3RvdWNoSW5kZXhdLnRhcmdldCA9PT0gZHJhZy50YXJnZXQpIHtcblx0XHRcdFx0XHRcdHRvdWNoID0gdG91Y2hMaXN0W3RvdWNoSW5kZXhdO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0b3VjaCAhPT0gbnVsbCA/IHRvdWNoLmNsaWVudFggOiB1bmRlZmluZWQ7XG5cblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHJldHVybiBldmVudC5jbGllbnRYO1xuXHRcdH1cblx0fVxufSk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZShcIlJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyXCIpO1xuXG5SaWNrc2hhdy5HcmFwaC5SZW5kZXJlciA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSgge1xuXG5cdGluaXRpYWxpemU6IGZ1bmN0aW9uKGFyZ3MpIHtcblx0XHR0aGlzLmdyYXBoID0gYXJncy5ncmFwaDtcblx0XHR0aGlzLnRlbnNpb24gPSBhcmdzLnRlbnNpb24gfHwgdGhpcy50ZW5zaW9uO1xuXHRcdHRoaXMuY29uZmlndXJlKGFyZ3MpO1xuXHR9LFxuXG5cdHNlcmllc1BhdGhGYWN0b3J5OiBmdW5jdGlvbigpIHtcblx0XHQvL2ltcGxlbWVudCBpbiBzdWJjbGFzc1xuXHR9LFxuXG5cdHNlcmllc1N0cm9rZUZhY3Rvcnk6IGZ1bmN0aW9uKCkge1xuXHRcdC8vIGltcGxlbWVudCBpbiBzdWJjbGFzc1xuXHR9LFxuXG5cdGRlZmF1bHRzOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0dGVuc2lvbjogMC44LFxuXHRcdFx0c3Ryb2tlV2lkdGg6IDIsXG5cdFx0XHR1bnN0YWNrOiB0cnVlLFxuXHRcdFx0cGFkZGluZzogeyB0b3A6IDAuMDEsIHJpZ2h0OiAwLCBib3R0b206IDAuMDEsIGxlZnQ6IDAgfSxcblx0XHRcdHN0cm9rZTogZmFsc2UsXG5cdFx0XHRmaWxsOiBmYWxzZSxcblx0XHRcdG9wYWNpdHk6IDFcblx0XHR9O1xuXHR9LFxuXG5cdGRvbWFpbjogZnVuY3Rpb24oZGF0YSkge1xuXHRcdC8vIFJlcXVpcmVzIHRoYXQgYXQgbGVhc3Qgb25lIHNlcmllcyBjb250YWlucyBzb21lIGRhdGFcblx0XHR2YXIgc3RhY2tlZERhdGEgPSBkYXRhIHx8IHRoaXMuZ3JhcGguc3RhY2tlZERhdGEgfHwgdGhpcy5ncmFwaC5zdGFja0RhdGEoKTtcblxuXHRcdHZhciB4TWluID0gK0luZmluaXR5O1xuXHRcdHZhciB4TWF4ID0gLUluZmluaXR5O1xuXG5cdFx0dmFyIHlNaW4gPSArSW5maW5pdHk7XG5cdFx0dmFyIHlNYXggPSAtSW5maW5pdHk7XG5cblx0XHRzdGFja2VkRGF0YS5mb3JFYWNoKCBmdW5jdGlvbihzZXJpZXMpIHtcblxuXHRcdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKGQpIHtcblxuXHRcdFx0XHRpZiAoZC55ID09IG51bGwpIHJldHVybjtcblxuXHRcdFx0XHR2YXIgeSA9IGQueSArIGQueTA7XG5cblx0XHRcdFx0aWYgKHkgPCB5TWluKSB5TWluID0geTtcblx0XHRcdFx0aWYgKHkgPiB5TWF4KSB5TWF4ID0geTtcblx0XHRcdH0gKTtcblxuXHRcdFx0aWYgKCFzZXJpZXMubGVuZ3RoKSByZXR1cm47XG5cblx0XHRcdGlmIChzZXJpZXNbMF0ueCA8IHhNaW4pIHhNaW4gPSBzZXJpZXNbMF0ueDtcblx0XHRcdGlmIChzZXJpZXNbc2VyaWVzLmxlbmd0aCAtIDFdLnggPiB4TWF4KSB4TWF4ID0gc2VyaWVzW3Nlcmllcy5sZW5ndGggLSAxXS54O1xuXHRcdH0gKTtcblxuXHRcdHhNaW4gLT0gKHhNYXggLSB4TWluKSAqIHRoaXMucGFkZGluZy5sZWZ0O1xuXHRcdHhNYXggKz0gKHhNYXggLSB4TWluKSAqIHRoaXMucGFkZGluZy5yaWdodDtcblxuXHRcdHlNaW4gPSB0aGlzLmdyYXBoLm1pbiA9PT0gJ2F1dG8nID8geU1pbiA6IHRoaXMuZ3JhcGgubWluIHx8IDA7XG5cdFx0eU1heCA9IHRoaXMuZ3JhcGgubWF4ID09PSB1bmRlZmluZWQgPyB5TWF4IDogdGhpcy5ncmFwaC5tYXg7XG5cblx0XHRpZiAodGhpcy5ncmFwaC5taW4gPT09ICdhdXRvJyB8fCB5TWluIDwgMCkge1xuXHRcdFx0eU1pbiAtPSAoeU1heCAtIHlNaW4pICogdGhpcy5wYWRkaW5nLmJvdHRvbTtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5ncmFwaC5tYXggPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0eU1heCArPSAoeU1heCAtIHlNaW4pICogdGhpcy5wYWRkaW5nLnRvcDtcblx0XHR9XG5cblx0XHRyZXR1cm4geyB4OiBbeE1pbiwgeE1heF0sIHk6IFt5TWluLCB5TWF4XSB9O1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oYXJncykge1xuXG5cdFx0YXJncyA9IGFyZ3MgfHwge307XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXHRcdHZhciBzZXJpZXMgPSBhcmdzLnNlcmllcyB8fCBncmFwaC5zZXJpZXM7XG5cblx0XHR2YXIgdmlzID0gYXJncy52aXMgfHwgZ3JhcGgudmlzO1xuXHRcdHZpcy5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblxuXHRcdHZhciBkYXRhID0gc2VyaWVzXG5cdFx0XHQuZmlsdGVyKGZ1bmN0aW9uKHMpIHsgcmV0dXJuICFzLmRpc2FibGVkIH0pXG5cdFx0XHQubWFwKGZ1bmN0aW9uKHMpIHsgcmV0dXJuIHMuc3RhY2sgfSk7XG5cblx0XHR2YXIgcGF0aE5vZGVzID0gdmlzLnNlbGVjdEFsbChcInBhdGgucGF0aFwiKVxuXHRcdFx0LmRhdGEoZGF0YSlcblx0XHRcdC5lbnRlcigpLmFwcGVuZChcInN2ZzpwYXRoXCIpXG5cdFx0XHQuY2xhc3NlZCgncGF0aCcsIHRydWUpXG5cdFx0XHQuYXR0cihcImRcIiwgdGhpcy5zZXJpZXNQYXRoRmFjdG9yeSgpKTtcblxuXHRcdGlmICh0aGlzLnN0cm9rZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0cm9rZU5vZGVzID0gdmlzLnNlbGVjdEFsbCgncGF0aC5zdHJva2UnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGF0YShkYXRhKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZW50ZXIoKS5hcHBlbmQoXCJzdmc6cGF0aFwiKVxuXHRcdFx0XHQuY2xhc3NlZCgnc3Ryb2tlJywgdHJ1ZSlcblx0XHRcdFx0LmF0dHIoXCJkXCIsIHRoaXMuc2VyaWVzU3Ryb2tlRmFjdG9yeSgpKTtcblx0XHR9XG5cblx0XHR2YXIgaSA9IDA7XG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXHRcdFx0aWYgKHNlcmllcy5kaXNhYmxlZCkgcmV0dXJuO1xuXHRcdFx0c2VyaWVzLnBhdGggPSBwYXRoTm9kZXNbMF1baV07XG5cdFx0XHRpZiAodGhpcy5zdHJva2UpIHNlcmllcy5zdHJva2UgPSBzdHJva2VOb2Rlc1swXVtpXTtcblx0XHRcdHRoaXMuX3N0eWxlU2VyaWVzKHNlcmllcyk7XG5cdFx0XHRpKys7XG5cdFx0fSwgdGhpcyApO1xuXG5cdH0sXG5cblx0X3N0eWxlU2VyaWVzOiBmdW5jdGlvbihzZXJpZXMpIHtcblxuXHRcdHZhciBmaWxsID0gdGhpcy5maWxsID8gc2VyaWVzLmNvbG9yIDogJ25vbmUnO1xuXHRcdHZhciBzdHJva2UgPSB0aGlzLnN0cm9rZSA/IHNlcmllcy5jb2xvciA6ICdub25lJztcblx0XHR2YXIgc3Ryb2tlV2lkdGggPSBzZXJpZXMuc3Ryb2tlV2lkdGggPyBzZXJpZXMuc3Ryb2tlV2lkdGggOiB0aGlzLnN0cm9rZVdpZHRoO1xuXHRcdHZhciBvcGFjaXR5ID0gc2VyaWVzLm9wYWNpdHkgPyBzZXJpZXMub3BhY2l0eSA6IHRoaXMub3BhY2l0eTtcblxuXHRcdHNlcmllcy5wYXRoLnNldEF0dHJpYnV0ZSgnZmlsbCcsIGZpbGwpO1xuXHRcdHNlcmllcy5wYXRoLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgc3Ryb2tlKTtcblx0XHRzZXJpZXMucGF0aC5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsIHN0cm9rZVdpZHRoKTtcblx0XHRzZXJpZXMucGF0aC5zZXRBdHRyaWJ1dGUoJ29wYWNpdHknLCBvcGFjaXR5KTtcblxuXHRcdGlmIChzZXJpZXMuY2xhc3NOYW1lKSB7XG5cdFx0XHRkMy5zZWxlY3Qoc2VyaWVzLnBhdGgpLmNsYXNzZWQoc2VyaWVzLmNsYXNzTmFtZSwgdHJ1ZSk7XG5cdFx0fVxuXHRcdGlmIChzZXJpZXMuY2xhc3NOYW1lICYmIHRoaXMuc3Ryb2tlKSB7XG5cdFx0XHRkMy5zZWxlY3Qoc2VyaWVzLnN0cm9rZSkuY2xhc3NlZChzZXJpZXMuY2xhc3NOYW1lLCB0cnVlKTtcblx0XHR9XG5cdH0sXG5cblx0Y29uZmlndXJlOiBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHRhcmdzID0gYXJncyB8fCB7fTtcblxuXHRcdFJpY2tzaGF3LmtleXModGhpcy5kZWZhdWx0cygpKS5mb3JFYWNoKCBmdW5jdGlvbihrZXkpIHtcblxuXHRcdFx0aWYgKCFhcmdzLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHRcdFx0dGhpc1trZXldID0gdGhpc1trZXldIHx8IHRoaXMuZ3JhcGhba2V5XSB8fCB0aGlzLmRlZmF1bHRzKClba2V5XTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodHlwZW9mIHRoaXMuZGVmYXVsdHMoKVtrZXldID09ICdvYmplY3QnKSB7XG5cblx0XHRcdFx0Umlja3NoYXcua2V5cyh0aGlzLmRlZmF1bHRzKClba2V5XSkuZm9yRWFjaCggZnVuY3Rpb24oaykge1xuXG5cdFx0XHRcdFx0dGhpc1trZXldW2tdID1cblx0XHRcdFx0XHRcdGFyZ3Nba2V5XVtrXSAhPT0gdW5kZWZpbmVkID8gYXJnc1trZXldW2tdIDpcblx0XHRcdFx0XHRcdHRoaXNba2V5XVtrXSAhPT0gdW5kZWZpbmVkID8gdGhpc1trZXldW2tdIDpcblx0XHRcdFx0XHRcdHRoaXMuZGVmYXVsdHMoKVtrZXldW2tdO1xuXHRcdFx0XHR9LCB0aGlzICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXNba2V5XSA9XG5cdFx0XHRcdFx0YXJnc1trZXldICE9PSB1bmRlZmluZWQgPyBhcmdzW2tleV0gOlxuXHRcdFx0XHRcdHRoaXNba2V5XSAhPT0gdW5kZWZpbmVkID8gdGhpc1trZXldIDpcblx0XHRcdFx0XHR0aGlzLmdyYXBoW2tleV0gIT09IHVuZGVmaW5lZCA/IHRoaXMuZ3JhcGhba2V5XSA6XG5cdFx0XHRcdFx0dGhpcy5kZWZhdWx0cygpW2tleV07XG5cdFx0XHR9XG5cblx0XHR9LCB0aGlzICk7XG5cdH0sXG5cblx0c2V0U3Ryb2tlV2lkdGg6IGZ1bmN0aW9uKHN0cm9rZVdpZHRoKSB7XG5cdFx0aWYgKHN0cm9rZVdpZHRoICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMuc3Ryb2tlV2lkdGggPSBzdHJva2VXaWR0aDtcblx0XHR9XG5cdH0sXG5cblx0c2V0VGVuc2lvbjogZnVuY3Rpb24odGVuc2lvbikge1xuXHRcdGlmICh0ZW5zaW9uICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMudGVuc2lvbiA9IHRlbnNpb247XG5cdFx0fVxuXHR9XG59ICk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguUmVuZGVyZXIuTGluZScpO1xuXG5SaWNrc2hhdy5HcmFwaC5SZW5kZXJlci5MaW5lID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCBSaWNrc2hhdy5HcmFwaC5SZW5kZXJlciwge1xuXG5cdG5hbWU6ICdsaW5lJyxcblxuXHRkZWZhdWx0czogZnVuY3Rpb24oJHN1cGVyKSB7XG5cblx0XHRyZXR1cm4gUmlja3NoYXcuZXh0ZW5kKCAkc3VwZXIoKSwge1xuXHRcdFx0dW5zdGFjazogdHJ1ZSxcblx0XHRcdGZpbGw6IGZhbHNlLFxuXHRcdFx0c3Ryb2tlOiB0cnVlXG5cdFx0fSApO1xuXHR9LFxuXG5cdHNlcmllc1BhdGhGYWN0b3J5OiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGg7XG5cblx0XHR2YXIgZmFjdG9yeSA9IGQzLnN2Zy5saW5lKClcblx0XHRcdC54KCBmdW5jdGlvbihkKSB7IHJldHVybiBncmFwaC54KGQueCkgfSApXG5cdFx0XHQueSggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueShkLnkpIH0gKVxuXHRcdFx0LmludGVycG9sYXRlKHRoaXMuZ3JhcGguaW50ZXJwb2xhdGlvbikudGVuc2lvbih0aGlzLnRlbnNpb24pO1xuXG5cdFx0ZmFjdG9yeS5kZWZpbmVkICYmIGZhY3RvcnkuZGVmaW5lZCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55ICE9PSBudWxsIH0gKTtcblx0XHRyZXR1cm4gZmFjdG9yeTtcblx0fVxufSApO1xuXG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLlN0YWNrJyk7XG5cblJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLlN0YWNrID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCBSaWNrc2hhdy5HcmFwaC5SZW5kZXJlciwge1xuXG5cdG5hbWU6ICdzdGFjaycsXG5cblx0ZGVmYXVsdHM6IGZ1bmN0aW9uKCRzdXBlcikge1xuXG5cdFx0cmV0dXJuIFJpY2tzaGF3LmV4dGVuZCggJHN1cGVyKCksIHtcblx0XHRcdGZpbGw6IHRydWUsXG5cdFx0XHRzdHJva2U6IGZhbHNlLFxuXHRcdFx0dW5zdGFjazogZmFsc2Vcblx0XHR9ICk7XG5cdH0sXG5cblx0c2VyaWVzUGF0aEZhY3Rvcnk6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaDtcblxuXHRcdHZhciBmYWN0b3J5ID0gZDMuc3ZnLmFyZWEoKVxuXHRcdFx0LngoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLngoZC54KSB9IClcblx0XHRcdC55MCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueShkLnkwKSB9IClcblx0XHRcdC55MSggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueShkLnkgKyBkLnkwKSB9IClcblx0XHRcdC5pbnRlcnBvbGF0ZSh0aGlzLmdyYXBoLmludGVycG9sYXRpb24pLnRlbnNpb24odGhpcy50ZW5zaW9uKTtcblxuXHRcdGZhY3RvcnkuZGVmaW5lZCAmJiBmYWN0b3J5LmRlZmluZWQoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueSAhPT0gbnVsbCB9ICk7XG5cdFx0cmV0dXJuIGZhY3Rvcnk7XG5cdH1cbn0gKTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5SZW5kZXJlci5CYXInKTtcblxuUmlja3NoYXcuR3JhcGguUmVuZGVyZXIuQmFyID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCBSaWNrc2hhdy5HcmFwaC5SZW5kZXJlciwge1xuXG5cdG5hbWU6ICdiYXInLFxuXG5cdGRlZmF1bHRzOiBmdW5jdGlvbigkc3VwZXIpIHtcblxuXHRcdHZhciBkZWZhdWx0cyA9IFJpY2tzaGF3LmV4dGVuZCggJHN1cGVyKCksIHtcblx0XHRcdGdhcFNpemU6IDAuMDUsXG5cdFx0XHR1bnN0YWNrOiBmYWxzZSxcblx0XHRcdG9wYWNpdHk6IDEuMFxuXHRcdH0gKTtcblxuXHRcdGRlbGV0ZSBkZWZhdWx0cy50ZW5zaW9uO1xuXHRcdHJldHVybiBkZWZhdWx0cztcblx0fSxcblxuXHRpbml0aWFsaXplOiBmdW5jdGlvbigkc3VwZXIsIGFyZ3MpIHtcblx0XHRhcmdzID0gYXJncyB8fCB7fTtcblx0XHR0aGlzLmdhcFNpemUgPSBhcmdzLmdhcFNpemUgfHwgdGhpcy5nYXBTaXplO1xuXHRcdCRzdXBlcihhcmdzKTtcblx0fSxcblxuXHRkb21haW46IGZ1bmN0aW9uKCRzdXBlcikge1xuXG5cdFx0dmFyIGRvbWFpbiA9ICRzdXBlcigpO1xuXG5cdFx0dmFyIGZyZXF1ZW50SW50ZXJ2YWwgPSB0aGlzLl9mcmVxdWVudEludGVydmFsKHRoaXMuZ3JhcGguc3RhY2tlZERhdGEuc2xpY2UoLTEpLnNoaWZ0KCkpO1xuXHRcdGRvbWFpbi54WzFdICs9IE51bWJlcihmcmVxdWVudEludGVydmFsLm1hZ25pdHVkZSk7XG5cblx0XHRyZXR1cm4gZG9tYWluO1xuXHR9LFxuXG5cdGJhcldpZHRoOiBmdW5jdGlvbihzZXJpZXMpIHtcblxuXHRcdHZhciBmcmVxdWVudEludGVydmFsID0gdGhpcy5fZnJlcXVlbnRJbnRlcnZhbChzZXJpZXMuc3RhY2spO1xuXHRcdHZhciBiYXJXaWR0aCA9IHRoaXMuZ3JhcGgueC5tYWduaXR1ZGUoZnJlcXVlbnRJbnRlcnZhbC5tYWduaXR1ZGUpICogKDEgLSB0aGlzLmdhcFNpemUpO1xuXG5cdFx0cmV0dXJuIGJhcldpZHRoO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oYXJncykge1xuXG5cdFx0YXJncyA9IGFyZ3MgfHwge307XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXHRcdHZhciBzZXJpZXMgPSBhcmdzLnNlcmllcyB8fCBncmFwaC5zZXJpZXM7XG5cblx0XHR2YXIgdmlzID0gYXJncy52aXMgfHwgZ3JhcGgudmlzO1xuXHRcdHZpcy5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblxuXHRcdHZhciBiYXJXaWR0aCA9IHRoaXMuYmFyV2lkdGgoc2VyaWVzLmFjdGl2ZSgpWzBdKTtcblx0XHR2YXIgYmFyWE9mZnNldCA9IDA7XG5cblx0XHR2YXIgYWN0aXZlU2VyaWVzQ291bnQgPSBzZXJpZXMuZmlsdGVyKCBmdW5jdGlvbihzKSB7IHJldHVybiAhcy5kaXNhYmxlZDsgfSApLmxlbmd0aDtcblx0XHR2YXIgc2VyaWVzQmFyV2lkdGggPSB0aGlzLnVuc3RhY2sgPyBiYXJXaWR0aCAvIGFjdGl2ZVNlcmllc0NvdW50IDogYmFyV2lkdGg7XG5cblx0XHR2YXIgdHJhbnNmb3JtID0gZnVuY3Rpb24oZCkge1xuXHRcdFx0Ly8gYWRkIGEgbWF0cml4IHRyYW5zZm9ybSBmb3IgbmVnYXRpdmUgdmFsdWVzXG5cdFx0XHR2YXIgbWF0cml4ID0gWyAxLCAwLCAwLCAoZC55IDwgMCA/IC0xIDogMSksIDAsIChkLnkgPCAwID8gZ3JhcGgueS5tYWduaXR1ZGUoTWF0aC5hYnMoZC55KSkgKiAyIDogMCkgXTtcblx0XHRcdHJldHVybiBcIm1hdHJpeChcIiArIG1hdHJpeC5qb2luKCcsJykgKyBcIilcIjtcblx0XHR9O1xuXG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXG5cdFx0XHRpZiAoc2VyaWVzLmRpc2FibGVkKSByZXR1cm47XG5cblx0XHRcdHZhciBiYXJXaWR0aCA9IHRoaXMuYmFyV2lkdGgoc2VyaWVzKTtcblxuXHRcdFx0dmFyIG5vZGVzID0gdmlzLnNlbGVjdEFsbChcInBhdGhcIilcblx0XHRcdFx0LmRhdGEoc2VyaWVzLnN0YWNrLmZpbHRlciggZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55ICE9PSBudWxsIH0gKSlcblx0XHRcdFx0LmVudGVyKCkuYXBwZW5kKFwic3ZnOnJlY3RcIilcblx0XHRcdFx0LmF0dHIoXCJ4XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLngoZC54KSArIGJhclhPZmZzZXQgfSlcblx0XHRcdFx0LmF0dHIoXCJ5XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIChncmFwaC55KGQueTAgKyBNYXRoLmFicyhkLnkpKSkgKiAoZC55IDwgMCA/IC0xIDogMSApIH0pXG5cdFx0XHRcdC5hdHRyKFwid2lkdGhcIiwgc2VyaWVzQmFyV2lkdGgpXG5cdFx0XHRcdC5hdHRyKFwiaGVpZ2h0XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLnkubWFnbml0dWRlKE1hdGguYWJzKGQueSkpIH0pXG5cdFx0XHRcdC5hdHRyKFwib3BhY2l0eVwiLCBzZXJpZXMub3BhY2l0eSlcblx0XHRcdFx0LmF0dHIoXCJ0cmFuc2Zvcm1cIiwgdHJhbnNmb3JtKTtcblxuXHRcdFx0QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChub2Rlc1swXSwgZnVuY3Rpb24obikge1xuXHRcdFx0XHRuLnNldEF0dHJpYnV0ZSgnZmlsbCcsIHNlcmllcy5jb2xvcik7XG5cdFx0XHR9ICk7XG5cblx0XHRcdGlmICh0aGlzLnVuc3RhY2spIGJhclhPZmZzZXQgKz0gc2VyaWVzQmFyV2lkdGg7XG5cblx0XHR9LCB0aGlzICk7XG5cdH0sXG5cblx0X2ZyZXF1ZW50SW50ZXJ2YWw6IGZ1bmN0aW9uKGRhdGEpIHtcblxuXHRcdHZhciBpbnRlcnZhbENvdW50cyA9IHt9O1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aCAtIDE7IGkrKykge1xuXHRcdFx0dmFyIGludGVydmFsID0gZGF0YVtpICsgMV0ueCAtIGRhdGFbaV0ueDtcblx0XHRcdGludGVydmFsQ291bnRzW2ludGVydmFsXSA9IGludGVydmFsQ291bnRzW2ludGVydmFsXSB8fCAwO1xuXHRcdFx0aW50ZXJ2YWxDb3VudHNbaW50ZXJ2YWxdKys7XG5cdFx0fVxuXG5cdFx0dmFyIGZyZXF1ZW50SW50ZXJ2YWwgPSB7IGNvdW50OiAwLCBtYWduaXR1ZGU6IDEgfTtcblxuXHRcdFJpY2tzaGF3LmtleXMoaW50ZXJ2YWxDb3VudHMpLmZvckVhY2goIGZ1bmN0aW9uKGkpIHtcblx0XHRcdGlmIChmcmVxdWVudEludGVydmFsLmNvdW50IDwgaW50ZXJ2YWxDb3VudHNbaV0pIHtcblx0XHRcdFx0ZnJlcXVlbnRJbnRlcnZhbCA9IHtcblx0XHRcdFx0XHRjb3VudDogaW50ZXJ2YWxDb3VudHNbaV0sXG5cdFx0XHRcdFx0bWFnbml0dWRlOiBpXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIGZyZXF1ZW50SW50ZXJ2YWw7XG5cdH1cbn0gKTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5SZW5kZXJlci5BcmVhJyk7XG5cblJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLkFyZWEgPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoIFJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLCB7XG5cblx0bmFtZTogJ2FyZWEnLFxuXG5cdGRlZmF1bHRzOiBmdW5jdGlvbigkc3VwZXIpIHtcblxuXHRcdHJldHVybiBSaWNrc2hhdy5leHRlbmQoICRzdXBlcigpLCB7XG5cdFx0XHR1bnN0YWNrOiBmYWxzZSxcblx0XHRcdGZpbGw6IGZhbHNlLFxuXHRcdFx0c3Ryb2tlOiBmYWxzZVxuXHRcdH0gKTtcblx0fSxcblxuXHRzZXJpZXNQYXRoRmFjdG9yeTogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXG5cdFx0dmFyIGZhY3RvcnkgPSBkMy5zdmcuYXJlYSgpXG5cdFx0XHQueCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueChkLngpIH0gKVxuXHRcdFx0LnkwKCBmdW5jdGlvbihkKSB7IHJldHVybiBncmFwaC55KGQueTApIH0gKVxuXHRcdFx0LnkxKCBmdW5jdGlvbihkKSB7IHJldHVybiBncmFwaC55KGQueSArIGQueTApIH0gKVxuXHRcdFx0LmludGVycG9sYXRlKGdyYXBoLmludGVycG9sYXRpb24pLnRlbnNpb24odGhpcy50ZW5zaW9uKTtcblxuXHRcdGZhY3RvcnkuZGVmaW5lZCAmJiBmYWN0b3J5LmRlZmluZWQoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueSAhPT0gbnVsbCB9ICk7XG5cdFx0cmV0dXJuIGZhY3Rvcnk7XG5cdH0sXG5cblx0c2VyaWVzU3Ryb2tlRmFjdG9yeTogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXG5cdFx0dmFyIGZhY3RvcnkgPSBkMy5zdmcubGluZSgpXG5cdFx0XHQueCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueChkLngpIH0gKVxuXHRcdFx0LnkoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLnkoZC55ICsgZC55MCkgfSApXG5cdFx0XHQuaW50ZXJwb2xhdGUoZ3JhcGguaW50ZXJwb2xhdGlvbikudGVuc2lvbih0aGlzLnRlbnNpb24pO1xuXG5cdFx0ZmFjdG9yeS5kZWZpbmVkICYmIGZhY3RvcnkuZGVmaW5lZCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55ICE9PSBudWxsIH0gKTtcblx0XHRyZXR1cm4gZmFjdG9yeTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdGFyZ3MgPSBhcmdzIHx8IHt9O1xuXG5cdFx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaDtcblx0XHR2YXIgc2VyaWVzID0gYXJncy5zZXJpZXMgfHwgZ3JhcGguc2VyaWVzO1xuXG5cdFx0dmFyIHZpcyA9IGFyZ3MudmlzIHx8IGdyYXBoLnZpcztcblx0XHR2aXMuc2VsZWN0QWxsKCcqJykucmVtb3ZlKCk7XG5cblx0XHQvLyBpbnNlcnQgb3Igc3RhY2tlZCBhcmVhcyBzbyBzdHJva2VzIGxheSBvbiB0b3Agb2YgYXJlYXNcblx0XHR2YXIgbWV0aG9kID0gdGhpcy51bnN0YWNrID8gJ2FwcGVuZCcgOiAnaW5zZXJ0JztcblxuXHRcdHZhciBkYXRhID0gc2VyaWVzXG5cdFx0XHQuZmlsdGVyKGZ1bmN0aW9uKHMpIHsgcmV0dXJuICFzLmRpc2FibGVkIH0pXG5cdFx0XHQubWFwKGZ1bmN0aW9uKHMpIHsgcmV0dXJuIHMuc3RhY2sgfSk7XG5cblx0XHR2YXIgbm9kZXMgPSB2aXMuc2VsZWN0QWxsKFwicGF0aFwiKVxuXHRcdFx0LmRhdGEoZGF0YSlcblx0XHRcdC5lbnRlcigpW21ldGhvZF0oXCJzdmc6Z1wiLCAnZycpO1xuXG5cdFx0bm9kZXMuYXBwZW5kKFwic3ZnOnBhdGhcIilcblx0XHRcdC5hdHRyKFwiZFwiLCB0aGlzLnNlcmllc1BhdGhGYWN0b3J5KCkpXG5cdFx0XHQuYXR0cihcImNsYXNzXCIsICdhcmVhJyk7XG5cblx0XHRpZiAodGhpcy5zdHJva2UpIHtcblx0XHRcdG5vZGVzLmFwcGVuZChcInN2ZzpwYXRoXCIpXG5cdFx0XHRcdC5hdHRyKFwiZFwiLCB0aGlzLnNlcmllc1N0cm9rZUZhY3RvcnkoKSlcblx0XHRcdFx0LmF0dHIoXCJjbGFzc1wiLCAnbGluZScpO1xuXHRcdH1cblxuXHRcdHZhciBpID0gMDtcblx0XHRzZXJpZXMuZm9yRWFjaCggZnVuY3Rpb24oc2VyaWVzKSB7XG5cdFx0XHRpZiAoc2VyaWVzLmRpc2FibGVkKSByZXR1cm47XG5cdFx0XHRzZXJpZXMucGF0aCA9IG5vZGVzWzBdW2krK107XG5cdFx0XHR0aGlzLl9zdHlsZVNlcmllcyhzZXJpZXMpO1xuXHRcdH0sIHRoaXMgKTtcblx0fSxcblxuXHRfc3R5bGVTZXJpZXM6IGZ1bmN0aW9uKHNlcmllcykge1xuXG5cdFx0aWYgKCFzZXJpZXMucGF0aCkgcmV0dXJuO1xuXG5cdFx0ZDMuc2VsZWN0KHNlcmllcy5wYXRoKS5zZWxlY3QoJy5hcmVhJylcblx0XHRcdC5hdHRyKCdmaWxsJywgc2VyaWVzLmNvbG9yKTtcblxuXHRcdGlmICh0aGlzLnN0cm9rZSkge1xuXHRcdFx0ZDMuc2VsZWN0KHNlcmllcy5wYXRoKS5zZWxlY3QoJy5saW5lJylcblx0XHRcdFx0LmF0dHIoJ2ZpbGwnLCAnbm9uZScpXG5cdFx0XHRcdC5hdHRyKCdzdHJva2UnLCBzZXJpZXMuc3Ryb2tlIHx8IGQzLmludGVycG9sYXRlUmdiKHNlcmllcy5jb2xvciwgJ2JsYWNrJykoMC4xMjUpKVxuXHRcdFx0XHQuYXR0cignc3Ryb2tlLXdpZHRoJywgdGhpcy5zdHJva2VXaWR0aCk7XG5cdFx0fVxuXG5cdFx0aWYgKHNlcmllcy5jbGFzc05hbWUpIHtcblx0XHRcdHNlcmllcy5wYXRoLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBzZXJpZXMuY2xhc3NOYW1lKTtcblx0XHR9XG5cdH1cbn0gKTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5HcmFwaC5SZW5kZXJlci5TY2F0dGVyUGxvdCcpO1xuXG5SaWNrc2hhdy5HcmFwaC5SZW5kZXJlci5TY2F0dGVyUGxvdCA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSggUmlja3NoYXcuR3JhcGguUmVuZGVyZXIsIHtcblxuXHRuYW1lOiAnc2NhdHRlcnBsb3QnLFxuXG5cdGRlZmF1bHRzOiBmdW5jdGlvbigkc3VwZXIpIHtcblxuXHRcdHJldHVybiBSaWNrc2hhdy5leHRlbmQoICRzdXBlcigpLCB7XG5cdFx0XHR1bnN0YWNrOiB0cnVlLFxuXHRcdFx0ZmlsbDogdHJ1ZSxcblx0XHRcdHN0cm9rZTogZmFsc2UsXG5cdFx0XHRwYWRkaW5nOnsgdG9wOiAwLjAxLCByaWdodDogMC4wMSwgYm90dG9tOiAwLjAxLCBsZWZ0OiAwLjAxIH0sXG5cdFx0XHRkb3RTaXplOiA0XG5cdFx0fSApO1xuXHR9LFxuXG5cdGluaXRpYWxpemU6IGZ1bmN0aW9uKCRzdXBlciwgYXJncykge1xuXHRcdCRzdXBlcihhcmdzKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdGFyZ3MgPSBhcmdzIHx8IHt9O1xuXG5cdFx0dmFyIGdyYXBoID0gdGhpcy5ncmFwaDtcblxuXHRcdHZhciBzZXJpZXMgPSBhcmdzLnNlcmllcyB8fCBncmFwaC5zZXJpZXM7XG5cdFx0dmFyIHZpcyA9IGFyZ3MudmlzIHx8IGdyYXBoLnZpcztcblxuXHRcdHZhciBkb3RTaXplID0gdGhpcy5kb3RTaXplO1xuXG5cdFx0dmlzLnNlbGVjdEFsbCgnKicpLnJlbW92ZSgpO1xuXG5cdFx0c2VyaWVzLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllcykge1xuXG5cdFx0XHRpZiAoc2VyaWVzLmRpc2FibGVkKSByZXR1cm47XG5cdFx0XHR2YXIgb3BhY2l0eSA9IHNlcmllcy5vcGFjaXR5ID8gc2VyaWVzLm9wYWNpdHkgOiAxO1xuXG5cdFx0XHR2YXIgbm9kZXMgPSB2aXMuc2VsZWN0QWxsKFwicGF0aFwiKVxuXHRcdFx0XHQuZGF0YShzZXJpZXMuc3RhY2suZmlsdGVyKCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnkgIT09IG51bGwgfSApKVxuXHRcdFx0XHQuZW50ZXIoKS5hcHBlbmQoXCJzdmc6Y2lyY2xlXCIpXG5cdFx0XHRcdFx0LmF0dHIoXCJjeFwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBncmFwaC54KGQueCkgfSlcblx0XHRcdFx0XHQuYXR0cihcImN5XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLnkoZC55KSB9KVxuXHRcdFx0XHRcdC5hdHRyKFwiclwiLCBmdW5jdGlvbihkKSB7IHJldHVybiAoXCJyXCIgaW4gZCkgPyBkLnIgOiBkb3RTaXplfSlcblx0XHRcdFx0XHQuYXR0cihcIm9wYWNpdHlcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gKFwib3BhY2l0eVwiIGluIGQpID8gZC5vcGFjaXR5IDogb3BhY2l0eX0pO1xuXHRcdFx0aWYgKHNlcmllcy5jbGFzc05hbWUpIHtcblx0XHRcdFx0bm9kZXMuY2xhc3NlZChzZXJpZXMuY2xhc3NOYW1lLCB0cnVlKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChub2Rlc1swXSwgZnVuY3Rpb24obikge1xuXHRcdFx0XHRuLnNldEF0dHJpYnV0ZSgnZmlsbCcsIHNlcmllcy5jb2xvcik7XG5cdFx0XHR9ICk7XG5cblx0XHR9LCB0aGlzICk7XG5cdH1cbn0gKTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguUmVuZGVyZXIuTXVsdGknKTtcblxuUmlja3NoYXcuR3JhcGguUmVuZGVyZXIuTXVsdGkgPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoIFJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLCB7XG5cblx0bmFtZTogJ211bHRpJyxcblxuXHRpbml0aWFsaXplOiBmdW5jdGlvbigkc3VwZXIsIGFyZ3MpIHtcblxuXHRcdCRzdXBlcihhcmdzKTtcblx0fSxcblxuXHRkZWZhdWx0czogZnVuY3Rpb24oJHN1cGVyKSB7XG5cblx0XHRyZXR1cm4gUmlja3NoYXcuZXh0ZW5kKCAkc3VwZXIoKSwge1xuXHRcdFx0dW5zdGFjazogdHJ1ZSxcblx0XHRcdGZpbGw6IGZhbHNlLFxuXHRcdFx0c3Ryb2tlOiB0cnVlIFxuXHRcdH0gKTtcblx0fSxcblxuXHRjb25maWd1cmU6IGZ1bmN0aW9uKCRzdXBlciwgYXJncykge1xuXG5cdFx0YXJncyA9IGFyZ3MgfHwge307XG5cdFx0dGhpcy5jb25maWcgPSBhcmdzO1xuXHRcdCRzdXBlcihhcmdzKTtcblx0fSxcblxuXHRkb21haW46IGZ1bmN0aW9uKCRzdXBlcikge1xuXG5cdFx0dGhpcy5ncmFwaC5zdGFja0RhdGEoKTtcblxuXHRcdHZhciBkb21haW5zID0gW107XG5cblx0XHR2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzKCk7XG5cdFx0dGhpcy5fc3RhY2soZ3JvdXBzKTtcblxuXHRcdGdyb3Vwcy5mb3JFYWNoKCBmdW5jdGlvbihncm91cCkge1xuXG5cdFx0XHR2YXIgZGF0YSA9IGdyb3VwLnNlcmllc1xuXHRcdFx0XHQuZmlsdGVyKCBmdW5jdGlvbihzKSB7IHJldHVybiAhcy5kaXNhYmxlZCB9IClcblx0XHRcdFx0Lm1hcCggZnVuY3Rpb24ocykgeyByZXR1cm4gcy5zdGFjayB9KTtcblxuXHRcdFx0aWYgKCFkYXRhLmxlbmd0aCkgcmV0dXJuO1xuXHRcdFx0XG5cdFx0XHR2YXIgZG9tYWluID0gbnVsbDtcblx0XHRcdGlmIChncm91cC5yZW5kZXJlciAmJiBncm91cC5yZW5kZXJlci5kb21haW4pIHtcblx0XHRcdFx0ZG9tYWluID0gZ3JvdXAucmVuZGVyZXIuZG9tYWluKGRhdGEpO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGRvbWFpbiA9ICRzdXBlcihkYXRhKTtcblx0XHRcdH1cblx0XHRcdGRvbWFpbnMucHVzaChkb21haW4pO1xuXHRcdH0pO1xuXG5cdFx0dmFyIHhNaW4gPSBkMy5taW4oZG9tYWlucy5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueFswXSB9ICkpO1xuXHRcdHZhciB4TWF4ID0gZDMubWF4KGRvbWFpbnMubWFwKCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnhbMV0gfSApKTtcblx0XHR2YXIgeU1pbiA9IGQzLm1pbihkb21haW5zLm1hcCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZC55WzBdIH0gKSk7XG5cdFx0dmFyIHlNYXggPSBkMy5tYXgoZG9tYWlucy5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueVsxXSB9ICkpO1xuXG5cdFx0cmV0dXJuIHsgeDogW3hNaW4sIHhNYXhdLCB5OiBbeU1pbiwgeU1heF0gfTtcblx0fSxcblxuXHRfZ3JvdXBzOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGg7XG5cblx0XHR2YXIgcmVuZGVyR3JvdXBzID0ge307XG5cblx0XHRncmFwaC5zZXJpZXMuZm9yRWFjaCggZnVuY3Rpb24oc2VyaWVzKSB7XG5cblx0XHRcdGlmIChzZXJpZXMuZGlzYWJsZWQpIHJldHVybjtcblxuXHRcdFx0aWYgKCFyZW5kZXJHcm91cHNbc2VyaWVzLnJlbmRlcmVyXSkge1xuXG5cdFx0XHRcdHZhciBucyA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcblx0XHRcdFx0dmFyIHZpcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhucywgJ2cnKTtcblxuXHRcdFx0XHRncmFwaC52aXNbMF1bMF0uYXBwZW5kQ2hpbGQodmlzKTtcblxuXHRcdFx0XHR2YXIgcmVuZGVyZXIgPSBncmFwaC5fcmVuZGVyZXJzW3Nlcmllcy5yZW5kZXJlcl07XG5cblx0XHRcdFx0dmFyIGNvbmZpZyA9IHt9O1xuXG5cdFx0XHRcdHZhciBkZWZhdWx0cyA9IFsgdGhpcy5kZWZhdWx0cygpLCByZW5kZXJlci5kZWZhdWx0cygpLCB0aGlzLmNvbmZpZywgdGhpcy5ncmFwaCBdO1xuXHRcdFx0XHRkZWZhdWx0cy5mb3JFYWNoKGZ1bmN0aW9uKGQpIHsgUmlja3NoYXcuZXh0ZW5kKGNvbmZpZywgZCkgfSk7XG5cblx0XHRcdFx0cmVuZGVyZXIuY29uZmlndXJlKGNvbmZpZyk7XG5cblx0XHRcdFx0cmVuZGVyR3JvdXBzW3Nlcmllcy5yZW5kZXJlcl0gPSB7XG5cdFx0XHRcdFx0cmVuZGVyZXI6IHJlbmRlcmVyLFxuXHRcdFx0XHRcdHNlcmllczogW10sXG5cdFx0XHRcdFx0dmlzOiBkMy5zZWxlY3QodmlzKVxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdHJlbmRlckdyb3Vwc1tzZXJpZXMucmVuZGVyZXJdLnNlcmllcy5wdXNoKHNlcmllcyk7XG5cblx0XHR9LCB0aGlzKTtcblxuXHRcdHZhciBncm91cHMgPSBbXTtcblxuXHRcdE9iamVjdC5rZXlzKHJlbmRlckdyb3VwcykuZm9yRWFjaCggZnVuY3Rpb24oa2V5KSB7XG5cdFx0XHR2YXIgZ3JvdXAgPSByZW5kZXJHcm91cHNba2V5XTtcblx0XHRcdGdyb3Vwcy5wdXNoKGdyb3VwKTtcblx0XHR9KTtcblxuXHRcdHJldHVybiBncm91cHM7XG5cdH0sXG5cblx0X3N0YWNrOiBmdW5jdGlvbihncm91cHMpIHtcblxuXHRcdGdyb3Vwcy5mb3JFYWNoKCBmdW5jdGlvbihncm91cCkge1xuXG5cdFx0XHR2YXIgc2VyaWVzID0gZ3JvdXAuc2VyaWVzXG5cdFx0XHRcdC5maWx0ZXIoIGZ1bmN0aW9uKHNlcmllcykgeyByZXR1cm4gIXNlcmllcy5kaXNhYmxlZCB9ICk7XG5cblx0XHRcdHZhciBkYXRhID0gc2VyaWVzXG5cdFx0XHRcdC5tYXAoIGZ1bmN0aW9uKHNlcmllcykgeyByZXR1cm4gc2VyaWVzLnN0YWNrIH0gKTtcblxuXHRcdFx0aWYgKCFncm91cC5yZW5kZXJlci51bnN0YWNrKSB7XG5cblx0XHRcdFx0dmFyIGxheW91dCA9IGQzLmxheW91dC5zdGFjaygpO1xuXHRcdFx0XHR2YXIgc3RhY2tlZERhdGEgPSBSaWNrc2hhdy5jbG9uZShsYXlvdXQoZGF0YSkpO1xuXG5cdFx0XHRcdHNlcmllcy5mb3JFYWNoKCBmdW5jdGlvbihzZXJpZXMsIGluZGV4KSB7XG5cdFx0XHRcdFx0c2VyaWVzLl9zdGFjayA9IFJpY2tzaGF3LmNsb25lKHN0YWNrZWREYXRhW2luZGV4XSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXG5cdFx0fSwgdGhpcyApO1xuXG5cdFx0cmV0dXJuIGdyb3VwcztcblxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHR0aGlzLmdyYXBoLnNlcmllcy5mb3JFYWNoKCBmdW5jdGlvbihzZXJpZXMpIHtcblx0XHRcdGlmICghc2VyaWVzLnJlbmRlcmVyKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIkVhY2ggc2VyaWVzIG5lZWRzIGEgcmVuZGVyZXIgZm9yIGdyYXBoICdtdWx0aScgcmVuZGVyZXJcIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLmdyYXBoLnZpcy5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblxuXHRcdHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMoKTtcblx0XHRncm91cHMgPSB0aGlzLl9zdGFjayhncm91cHMpO1xuXG5cdFx0Z3JvdXBzLmZvckVhY2goIGZ1bmN0aW9uKGdyb3VwKSB7XG5cblx0XHRcdHZhciBzZXJpZXMgPSBncm91cC5zZXJpZXNcblx0XHRcdFx0LmZpbHRlciggZnVuY3Rpb24oc2VyaWVzKSB7IHJldHVybiAhc2VyaWVzLmRpc2FibGVkIH0gKTtcblxuXHRcdFx0c2VyaWVzLmFjdGl2ZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc2VyaWVzIH07XG5cblx0XHRcdGdyb3VwLnJlbmRlcmVyLnJlbmRlcih7IHNlcmllczogc2VyaWVzLCB2aXM6IGdyb3VwLnZpcyB9KTtcblx0XHRcdHNlcmllcy5mb3JFYWNoKGZ1bmN0aW9uKHMpIHsgcy5zdGFjayA9IHMuX3N0YWNrIHx8IHMuc3RhY2sgfHwgcy5kYXRhOyB9KTtcblx0XHR9KTtcblx0fVxuXG59ICk7XG5SaWNrc2hhdy5uYW1lc3BhY2UoJ1JpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLkxpbmVQbG90Jyk7XG5cblJpY2tzaGF3LkdyYXBoLlJlbmRlcmVyLkxpbmVQbG90ID0gUmlja3NoYXcuQ2xhc3MuY3JlYXRlKCBSaWNrc2hhdy5HcmFwaC5SZW5kZXJlciwge1xuXG5cdG5hbWU6ICdsaW5lcGxvdCcsXG5cblx0ZGVmYXVsdHM6IGZ1bmN0aW9uKCRzdXBlcikge1xuXG5cdFx0cmV0dXJuIFJpY2tzaGF3LmV4dGVuZCggJHN1cGVyKCksIHtcblx0XHRcdHVuc3RhY2s6IHRydWUsXG5cdFx0XHRmaWxsOiBmYWxzZSxcblx0XHRcdHN0cm9rZTogdHJ1ZSxcblx0XHRcdHBhZGRpbmc6eyB0b3A6IDAuMDEsIHJpZ2h0OiAwLjAxLCBib3R0b206IDAuMDEsIGxlZnQ6IDAuMDEgfSxcblx0XHRcdGRvdFNpemU6IDMsXG5cdFx0XHRzdHJva2VXaWR0aDogMlxuXHRcdH0gKTtcblx0fSxcblxuXHRzZXJpZXNQYXRoRmFjdG9yeTogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZ3JhcGggPSB0aGlzLmdyYXBoO1xuXG5cdFx0dmFyIGZhY3RvcnkgPSBkMy5zdmcubGluZSgpXG5cdFx0XHQueCggZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueChkLngpIH0gKVxuXHRcdFx0LnkoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGdyYXBoLnkoZC55KSB9IClcblx0XHRcdC5pbnRlcnBvbGF0ZSh0aGlzLmdyYXBoLmludGVycG9sYXRpb24pLnRlbnNpb24odGhpcy50ZW5zaW9uKTtcblxuXHRcdGZhY3RvcnkuZGVmaW5lZCAmJiBmYWN0b3J5LmRlZmluZWQoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQueSAhPT0gbnVsbCB9ICk7XG5cdFx0cmV0dXJuIGZhY3Rvcnk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbihhcmdzKSB7XG5cblx0XHRhcmdzID0gYXJncyB8fCB7fTtcblxuXHRcdHZhciBncmFwaCA9IHRoaXMuZ3JhcGg7XG5cblx0XHR2YXIgc2VyaWVzID0gYXJncy5zZXJpZXMgfHwgZ3JhcGguc2VyaWVzO1xuXHRcdHZhciB2aXMgPSBhcmdzLnZpcyB8fCBncmFwaC52aXM7XG5cblx0XHR2YXIgZG90U2l6ZSA9IHRoaXMuZG90U2l6ZTtcblxuXHRcdHZpcy5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblxuXHRcdHZhciBkYXRhID0gc2VyaWVzXG5cdFx0XHQuZmlsdGVyKGZ1bmN0aW9uKHMpIHsgcmV0dXJuICFzLmRpc2FibGVkIH0pXG5cdFx0XHQubWFwKGZ1bmN0aW9uKHMpIHsgcmV0dXJuIHMuc3RhY2sgfSk7XG5cblx0XHR2YXIgbm9kZXMgPSB2aXMuc2VsZWN0QWxsKFwicGF0aFwiKVxuXHRcdFx0LmRhdGEoZGF0YSlcblx0XHRcdC5lbnRlcigpLmFwcGVuZChcInN2ZzpwYXRoXCIpXG5cdFx0XHQuYXR0cihcImRcIiwgdGhpcy5zZXJpZXNQYXRoRmFjdG9yeSgpKTtcblxuXHRcdHZhciBpID0gMDtcblx0XHRzZXJpZXMuZm9yRWFjaChmdW5jdGlvbihzZXJpZXMpIHtcblx0XHRcdGlmIChzZXJpZXMuZGlzYWJsZWQpIHJldHVybjtcblx0XHRcdHNlcmllcy5wYXRoID0gbm9kZXNbMF1baSsrXTtcblx0XHRcdHRoaXMuX3N0eWxlU2VyaWVzKHNlcmllcyk7XG5cdFx0fSwgdGhpcyk7XG5cblx0XHRzZXJpZXMuZm9yRWFjaChmdW5jdGlvbihzZXJpZXMpIHtcblxuXHRcdFx0aWYgKHNlcmllcy5kaXNhYmxlZCkgcmV0dXJuO1xuXG5cdFx0XHR2YXIgbm9kZXMgPSB2aXMuc2VsZWN0QWxsKFwieFwiKVxuXHRcdFx0XHQuZGF0YShzZXJpZXMuc3RhY2suZmlsdGVyKCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnkgIT09IG51bGwgfSApKVxuXHRcdFx0XHQuZW50ZXIoKS5hcHBlbmQoXCJzdmc6Y2lyY2xlXCIpXG5cdFx0XHRcdC5hdHRyKFwiY3hcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueChkLngpIH0pXG5cdFx0XHRcdC5hdHRyKFwiY3lcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZ3JhcGgueShkLnkpIH0pXG5cdFx0XHRcdC5hdHRyKFwiclwiLCBmdW5jdGlvbihkKSB7IHJldHVybiAoXCJyXCIgaW4gZCkgPyBkLnIgOiBkb3RTaXplfSk7XG5cblx0XHRcdEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwobm9kZXNbMF0sIGZ1bmN0aW9uKG4pIHtcblx0XHRcdFx0aWYgKCFuKSByZXR1cm47XG5cdFx0XHRcdG4uc2V0QXR0cmlidXRlKCdkYXRhLWNvbG9yJywgc2VyaWVzLmNvbG9yKTtcblx0XHRcdFx0bi5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnd2hpdGUnKTtcblx0XHRcdFx0bi5zZXRBdHRyaWJ1dGUoJ3N0cm9rZScsIHNlcmllcy5jb2xvcik7XG5cdFx0XHRcdG4uc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLCB0aGlzLnN0cm9rZVdpZHRoKTtcblxuXHRcdFx0fS5iaW5kKHRoaXMpKTtcblxuXHRcdH0sIHRoaXMpO1xuXHR9XG59ICk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguU21vb3RoZXInKTtcblxuUmlja3NoYXcuR3JhcGguU21vb3RoZXIgPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoe1xuXG5cdGluaXRpYWxpemU6IGZ1bmN0aW9uKGFyZ3MpIHtcblxuXHRcdHRoaXMuZ3JhcGggPSBhcmdzLmdyYXBoO1xuXHRcdHRoaXMuZWxlbWVudCA9IGFyZ3MuZWxlbWVudDtcblx0XHR0aGlzLmFnZ3JlZ2F0aW9uU2NhbGUgPSAxO1xuXG5cdFx0dGhpcy5idWlsZCgpO1xuXG5cdFx0dGhpcy5ncmFwaC5zdGFja0RhdGEuaG9va3MuZGF0YS5wdXNoKCB7XG5cdFx0XHRuYW1lOiAnc21vb3RoZXInLFxuXHRcdFx0b3JkZXJQb3NpdGlvbjogNTAsXG5cdFx0XHRmOiB0aGlzLnRyYW5zZm9ybWVyLmJpbmQodGhpcylcblx0XHR9ICk7XG5cdH0sXG5cblx0YnVpbGQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdHZhciAkID0galF1ZXJ5O1xuXG5cdFx0aWYgKHRoaXMuZWxlbWVudCkge1xuXHRcdFx0JCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdCQoc2VsZi5lbGVtZW50KS5zbGlkZXIoIHtcblx0XHRcdFx0XHRtaW46IDEsXG5cdFx0XHRcdFx0bWF4OiAxMDAsXG5cdFx0XHRcdFx0c2xpZGU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnNldFNjYWxlKHVpLnZhbHVlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cdH0sXG5cblx0c2V0U2NhbGU6IGZ1bmN0aW9uKHNjYWxlKSB7XG5cblx0XHRpZiAoc2NhbGUgPCAxKSB7XG5cdFx0XHR0aHJvdyBcInNjYWxlIG91dCBvZiByYW5nZTogXCIgKyBzY2FsZTtcblx0XHR9XG5cblx0XHR0aGlzLmFnZ3JlZ2F0aW9uU2NhbGUgPSBzY2FsZTtcblx0XHR0aGlzLmdyYXBoLnVwZGF0ZSgpO1xuXHR9LFxuXG5cdHRyYW5zZm9ybWVyOiBmdW5jdGlvbihkYXRhKSB7XG5cblx0XHRpZiAodGhpcy5hZ2dyZWdhdGlvblNjYWxlID09IDEpIHJldHVybiBkYXRhO1xuXG5cdFx0dmFyIGFnZ3JlZ2F0ZWREYXRhID0gW107XG5cblx0XHRkYXRhLmZvckVhY2goIGZ1bmN0aW9uKHNlcmllc0RhdGEpIHtcblxuXHRcdFx0dmFyIGFnZ3JlZ2F0ZWRTZXJpZXNEYXRhID0gW107XG5cblx0XHRcdHdoaWxlIChzZXJpZXNEYXRhLmxlbmd0aCkge1xuXG5cdFx0XHRcdHZhciBhdmdYID0gMCwgYXZnWSA9IDA7XG5cdFx0XHRcdHZhciBzbGljZSA9IHNlcmllc0RhdGEuc3BsaWNlKDAsIHRoaXMuYWdncmVnYXRpb25TY2FsZSk7XG5cblx0XHRcdFx0c2xpY2UuZm9yRWFjaCggZnVuY3Rpb24oZCkge1xuXHRcdFx0XHRcdGF2Z1ggKz0gZC54IC8gc2xpY2UubGVuZ3RoO1xuXHRcdFx0XHRcdGF2Z1kgKz0gZC55IC8gc2xpY2UubGVuZ3RoO1xuXHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0YWdncmVnYXRlZFNlcmllc0RhdGEucHVzaCggeyB4OiBhdmdYLCB5OiBhdmdZIH0gKTtcblx0XHRcdH1cblxuXHRcdFx0YWdncmVnYXRlZERhdGEucHVzaChhZ2dyZWdhdGVkU2VyaWVzRGF0YSk7XG5cblx0XHR9LmJpbmQodGhpcykgKTtcblxuXHRcdHJldHVybiBhZ2dyZWdhdGVkRGF0YTtcblx0fVxufSk7XG5cblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuR3JhcGguU29ja2V0aW8nKTtcblxuUmlja3NoYXcuR3JhcGguU29ja2V0aW8gPSBSaWNrc2hhdy5DbGFzcy5jcmVhdGUoIFJpY2tzaGF3LkdyYXBoLkFqYXgsIHtcblx0cmVxdWVzdDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHNvY2tldCA9IGlvLmNvbm5lY3QodGhpcy5kYXRhVVJMKTtcblx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0c29ja2V0Lm9uKCdyaWNrc2hhdycsIGZ1bmN0aW9uIChkYXRhKSB7XG5cdFx0XHRzZWxmLnN1Y2Nlc3MoZGF0YSk7XG5cdFx0fSk7XG5cdH1cbn0gKTtcblJpY2tzaGF3Lm5hbWVzcGFjZSgnUmlja3NoYXcuU2VyaWVzJyk7XG5cblJpY2tzaGF3LlNlcmllcyA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZSggQXJyYXksIHtcblxuXHRpbml0aWFsaXplOiBmdW5jdGlvbiAoZGF0YSwgcGFsZXR0ZSwgb3B0aW9ucykge1xuXG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR0aGlzLnBhbGV0dGUgPSBuZXcgUmlja3NoYXcuQ29sb3IuUGFsZXR0ZShwYWxldHRlKTtcblxuXHRcdHRoaXMudGltZUJhc2UgPSB0eXBlb2Yob3B0aW9ucy50aW1lQmFzZSkgPT09ICd1bmRlZmluZWQnID8gXG5cdFx0XHRNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMCkgOiBcblx0XHRcdG9wdGlvbnMudGltZUJhc2U7XG5cblx0XHR2YXIgdGltZUludGVydmFsID0gdHlwZW9mKG9wdGlvbnMudGltZUludGVydmFsKSA9PSAndW5kZWZpbmVkJyA/XG5cdFx0XHQxMDAwIDpcblx0XHRcdG9wdGlvbnMudGltZUludGVydmFsO1xuXG5cdFx0dGhpcy5zZXRUaW1lSW50ZXJ2YWwodGltZUludGVydmFsKTtcblxuXHRcdGlmIChkYXRhICYmICh0eXBlb2YoZGF0YSkgPT0gXCJvYmplY3RcIikgJiYgQXJyYXkuaXNBcnJheShkYXRhKSkge1xuXHRcdFx0ZGF0YS5mb3JFYWNoKCBmdW5jdGlvbihpdGVtKSB7IHRoaXMuYWRkSXRlbShpdGVtKSB9LCB0aGlzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGFkZEl0ZW06IGZ1bmN0aW9uKGl0ZW0pIHtcblxuXHRcdGlmICh0eXBlb2YoaXRlbS5uYW1lKSA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdHRocm93KCdhZGRJdGVtKCkgbmVlZHMgYSBuYW1lJyk7XG5cdFx0fVxuXG5cdFx0aXRlbS5jb2xvciA9IChpdGVtLmNvbG9yIHx8IHRoaXMucGFsZXR0ZS5jb2xvcihpdGVtLm5hbWUpKTtcblx0XHRpdGVtLmRhdGEgPSAoaXRlbS5kYXRhIHx8IFtdKTtcblxuXHRcdC8vIGJhY2tmaWxsLCBpZiBuZWNlc3Nhcnlcblx0XHRpZiAoKGl0ZW0uZGF0YS5sZW5ndGggPT09IDApICYmIHRoaXMubGVuZ3RoICYmICh0aGlzLmdldEluZGV4KCkgPiAwKSkge1xuXHRcdFx0dGhpc1swXS5kYXRhLmZvckVhY2goIGZ1bmN0aW9uKHBsb3QpIHtcblx0XHRcdFx0aXRlbS5kYXRhLnB1c2goeyB4OiBwbG90LngsIHk6IDAgfSk7XG5cdFx0XHR9ICk7XG5cdFx0fSBlbHNlIGlmIChpdGVtLmRhdGEubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRpdGVtLmRhdGEucHVzaCh7IHg6IHRoaXMudGltZUJhc2UgLSAodGhpcy50aW1lSW50ZXJ2YWwgfHwgMCksIHk6IDAgfSk7XG5cdFx0fSBcblxuXHRcdHRoaXMucHVzaChpdGVtKTtcblxuXHRcdGlmICh0aGlzLmxlZ2VuZCkge1xuXHRcdFx0dGhpcy5sZWdlbmQuYWRkTGluZSh0aGlzLml0ZW1CeU5hbWUoaXRlbS5uYW1lKSk7XG5cdFx0fVxuXHR9LFxuXG5cdGFkZERhdGE6IGZ1bmN0aW9uKGRhdGEsIHgpIHtcblxuXHRcdHZhciBpbmRleCA9IHRoaXMuZ2V0SW5kZXgoKTtcblxuXHRcdFJpY2tzaGF3LmtleXMoZGF0YSkuZm9yRWFjaCggZnVuY3Rpb24obmFtZSkge1xuXHRcdFx0aWYgKCEgdGhpcy5pdGVtQnlOYW1lKG5hbWUpKSB7XG5cdFx0XHRcdHRoaXMuYWRkSXRlbSh7IG5hbWU6IG5hbWUgfSk7XG5cdFx0XHR9XG5cdFx0fSwgdGhpcyApO1xuXG5cdFx0dGhpcy5mb3JFYWNoKCBmdW5jdGlvbihpdGVtKSB7XG5cdFx0XHRpdGVtLmRhdGEucHVzaCh7IFxuXHRcdFx0XHR4OiB4IHx8IChpbmRleCAqIHRoaXMudGltZUludGVydmFsIHx8IDEpICsgdGhpcy50aW1lQmFzZSwgXG5cdFx0XHRcdHk6IChkYXRhW2l0ZW0ubmFtZV0gfHwgMCkgXG5cdFx0XHR9KTtcblx0XHR9LCB0aGlzICk7XG5cdH0sXG5cblx0Z2V0SW5kZXg6IGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gKHRoaXNbMF0gJiYgdGhpc1swXS5kYXRhICYmIHRoaXNbMF0uZGF0YS5sZW5ndGgpID8gdGhpc1swXS5kYXRhLmxlbmd0aCA6IDA7XG5cdH0sXG5cblx0aXRlbUJ5TmFtZTogZnVuY3Rpb24obmFtZSkge1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAodGhpc1tpXS5uYW1lID09IG5hbWUpXG5cdFx0XHRcdHJldHVybiB0aGlzW2ldO1xuXHRcdH1cblx0fSxcblxuXHRzZXRUaW1lSW50ZXJ2YWw6IGZ1bmN0aW9uKGl2KSB7XG5cdFx0dGhpcy50aW1lSW50ZXJ2YWwgPSBpdiAvIDEwMDA7XG5cdH0sXG5cblx0c2V0VGltZUJhc2U6IGZ1bmN0aW9uICh0KSB7XG5cdFx0dGhpcy50aW1lQmFzZSA9IHQ7XG5cdH0sXG5cblx0ZHVtcDogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgZGF0YSA9IHtcblx0XHRcdHRpbWVCYXNlOiB0aGlzLnRpbWVCYXNlLFxuXHRcdFx0dGltZUludGVydmFsOiB0aGlzLnRpbWVJbnRlcnZhbCxcblx0XHRcdGl0ZW1zOiBbXVxuXHRcdH07XG5cblx0XHR0aGlzLmZvckVhY2goIGZ1bmN0aW9uKGl0ZW0pIHtcblxuXHRcdFx0dmFyIG5ld0l0ZW0gPSB7XG5cdFx0XHRcdGNvbG9yOiBpdGVtLmNvbG9yLFxuXHRcdFx0XHRuYW1lOiBpdGVtLm5hbWUsXG5cdFx0XHRcdGRhdGE6IFtdXG5cdFx0XHR9O1xuXG5cdFx0XHRpdGVtLmRhdGEuZm9yRWFjaCggZnVuY3Rpb24ocGxvdCkge1xuXHRcdFx0XHRuZXdJdGVtLmRhdGEucHVzaCh7IHg6IHBsb3QueCwgeTogcGxvdC55IH0pO1xuXHRcdFx0fSApO1xuXG5cdFx0XHRkYXRhLml0ZW1zLnB1c2gobmV3SXRlbSk7XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIGRhdGE7XG5cdH0sXG5cblx0bG9hZDogZnVuY3Rpb24oZGF0YSkge1xuXG5cdFx0aWYgKGRhdGEudGltZUludGVydmFsKSB7XG5cdFx0XHR0aGlzLnRpbWVJbnRlcnZhbCA9IGRhdGEudGltZUludGVydmFsO1xuXHRcdH1cblxuXHRcdGlmIChkYXRhLnRpbWVCYXNlKSB7XG5cdFx0XHR0aGlzLnRpbWVCYXNlID0gZGF0YS50aW1lQmFzZTtcblx0XHR9XG5cblx0XHRpZiAoZGF0YS5pdGVtcykge1xuXHRcdFx0ZGF0YS5pdGVtcy5mb3JFYWNoKCBmdW5jdGlvbihpdGVtKSB7XG5cdFx0XHRcdHRoaXMucHVzaChpdGVtKTtcblx0XHRcdFx0aWYgKHRoaXMubGVnZW5kKSB7XG5cdFx0XHRcdFx0dGhpcy5sZWdlbmQuYWRkTGluZSh0aGlzLml0ZW1CeU5hbWUoaXRlbS5uYW1lKSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSwgdGhpcyApO1xuXHRcdH1cblx0fVxufSApO1xuXG5SaWNrc2hhdy5TZXJpZXMuemVyb0ZpbGwgPSBmdW5jdGlvbihzZXJpZXMpIHtcblx0Umlja3NoYXcuU2VyaWVzLmZpbGwoc2VyaWVzLCAwKTtcbn07XG5cblJpY2tzaGF3LlNlcmllcy5maWxsID0gZnVuY3Rpb24oc2VyaWVzLCBmaWxsKSB7XG5cblx0dmFyIHg7XG5cdHZhciBpID0gMDtcblxuXHR2YXIgZGF0YSA9IHNlcmllcy5tYXAoIGZ1bmN0aW9uKHMpIHsgcmV0dXJuIHMuZGF0YSB9ICk7XG5cblx0d2hpbGUgKCBpIDwgTWF0aC5tYXguYXBwbHkobnVsbCwgZGF0YS5tYXAoIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQubGVuZ3RoIH0gKSkgKSB7XG5cblx0XHR4ID0gTWF0aC5taW4uYXBwbHkoIG51bGwsIFxuXHRcdFx0ZGF0YVxuXHRcdFx0XHQuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGRbaV0gfSlcblx0XHRcdFx0Lm1hcChmdW5jdGlvbihkKSB7IHJldHVybiBkW2ldLnggfSlcblx0XHQpO1xuXG5cdFx0ZGF0YS5mb3JFYWNoKCBmdW5jdGlvbihkKSB7XG5cdFx0XHRpZiAoIWRbaV0gfHwgZFtpXS54ICE9IHgpIHtcblx0XHRcdFx0ZC5zcGxpY2UoaSwgMCwgeyB4OiB4LCB5OiBmaWxsIH0pO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdGkrKztcblx0fVxufTtcblxuUmlja3NoYXcubmFtZXNwYWNlKCdSaWNrc2hhdy5TZXJpZXMuRml4ZWREdXJhdGlvbicpO1xuXG5SaWNrc2hhdy5TZXJpZXMuRml4ZWREdXJhdGlvbiA9IFJpY2tzaGF3LkNsYXNzLmNyZWF0ZShSaWNrc2hhdy5TZXJpZXMsIHtcblxuXHRpbml0aWFsaXplOiBmdW5jdGlvbiAoZGF0YSwgcGFsZXR0ZSwgb3B0aW9ucykge1xuXG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHRpZiAodHlwZW9mKG9wdGlvbnMudGltZUludGVydmFsKSA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignRml4ZWREdXJhdGlvbiBzZXJpZXMgcmVxdWlyZXMgdGltZUludGVydmFsJyk7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZihvcHRpb25zLm1heERhdGFQb2ludHMpID09PSAndW5kZWZpbmVkJykge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdGaXhlZER1cmF0aW9uIHNlcmllcyByZXF1aXJlcyBtYXhEYXRhUG9pbnRzJyk7XG5cdFx0fVxuXG5cdFx0dGhpcy5wYWxldHRlID0gbmV3IFJpY2tzaGF3LkNvbG9yLlBhbGV0dGUocGFsZXR0ZSk7XG5cdFx0dGhpcy50aW1lQmFzZSA9IHR5cGVvZihvcHRpb25zLnRpbWVCYXNlKSA9PT0gJ3VuZGVmaW5lZCcgPyBNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMCkgOiBvcHRpb25zLnRpbWVCYXNlO1xuXHRcdHRoaXMuc2V0VGltZUludGVydmFsKG9wdGlvbnMudGltZUludGVydmFsKTtcblxuXHRcdGlmICh0aGlzWzBdICYmIHRoaXNbMF0uZGF0YSAmJiB0aGlzWzBdLmRhdGEubGVuZ3RoKSB7XG5cdFx0XHR0aGlzLmN1cnJlbnRTaXplID0gdGhpc1swXS5kYXRhLmxlbmd0aDtcblx0XHRcdHRoaXMuY3VycmVudEluZGV4ID0gdGhpc1swXS5kYXRhLmxlbmd0aDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5jdXJyZW50U2l6ZSAgPSAwO1xuXHRcdFx0dGhpcy5jdXJyZW50SW5kZXggPSAwO1xuXHRcdH1cblxuXHRcdHRoaXMubWF4RGF0YVBvaW50cyA9IG9wdGlvbnMubWF4RGF0YVBvaW50cztcblxuXG5cdFx0aWYgKGRhdGEgJiYgKHR5cGVvZihkYXRhKSA9PSBcIm9iamVjdFwiKSAmJiBBcnJheS5pc0FycmF5KGRhdGEpKSB7XG5cdFx0XHRkYXRhLmZvckVhY2goIGZ1bmN0aW9uIChpdGVtKSB7IHRoaXMuYWRkSXRlbShpdGVtKSB9LCB0aGlzICk7XG5cdFx0XHR0aGlzLmN1cnJlbnRTaXplICArPSAxO1xuXHRcdFx0dGhpcy5jdXJyZW50SW5kZXggKz0gMTtcblx0XHR9XG5cblx0XHQvLyByZXNldCB0aW1lQmFzZSBmb3IgemVyby1maWxsZWQgdmFsdWVzIGlmIG5lZWRlZFxuXHRcdHRoaXMudGltZUJhc2UgLT0gKHRoaXMubWF4RGF0YVBvaW50cyAtIHRoaXMuY3VycmVudFNpemUpICogdGhpcy50aW1lSW50ZXJ2YWw7XG5cblx0XHQvLyB6ZXJvLWZpbGwgdXAgdG8gbWF4RGF0YVBvaW50cyBzaXplIGlmIHdlIGRvbid0IGhhdmUgdGhhdCBtdWNoIGRhdGEgeWV0XG5cdFx0aWYgKCh0eXBlb2YodGhpcy5tYXhEYXRhUG9pbnRzKSAhPT0gJ3VuZGVmaW5lZCcpICYmICh0aGlzLmN1cnJlbnRTaXplIDwgdGhpcy5tYXhEYXRhUG9pbnRzKSkge1xuXHRcdFx0Zm9yICh2YXIgaSA9IHRoaXMubWF4RGF0YVBvaW50cyAtIHRoaXMuY3VycmVudFNpemUgLSAxOyBpID4gMTsgaS0tKSB7XG5cdFx0XHRcdHRoaXMuY3VycmVudFNpemUgICs9IDE7XG5cdFx0XHRcdHRoaXMuY3VycmVudEluZGV4ICs9IDE7XG5cdFx0XHRcdHRoaXMuZm9yRWFjaCggZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdFx0XHRpdGVtLmRhdGEudW5zaGlmdCh7IHg6ICgoaS0xKSAqIHRoaXMudGltZUludGVydmFsIHx8IDEpICsgdGhpcy50aW1lQmFzZSwgeTogMCwgaTogaSB9KTtcblx0XHRcdFx0fSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRhZGREYXRhOiBmdW5jdGlvbigkc3VwZXIsIGRhdGEsIHgpIHtcblxuXHRcdCRzdXBlcihkYXRhLCB4KTtcblxuXHRcdHRoaXMuY3VycmVudFNpemUgKz0gMTtcblx0XHR0aGlzLmN1cnJlbnRJbmRleCArPSAxO1xuXG5cdFx0aWYgKHRoaXMubWF4RGF0YVBvaW50cyAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR3aGlsZSAodGhpcy5jdXJyZW50U2l6ZSA+IHRoaXMubWF4RGF0YVBvaW50cykge1xuXHRcdFx0XHR0aGlzLmRyb3BEYXRhKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdGRyb3BEYXRhOiBmdW5jdGlvbigpIHtcblxuXHRcdHRoaXMuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG5cdFx0XHRpdGVtLmRhdGEuc3BsaWNlKDAsIDEpO1xuXHRcdH0gKTtcblxuXHRcdHRoaXMuY3VycmVudFNpemUgLT0gMTtcblx0fSxcblxuXHRnZXRJbmRleDogZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiB0aGlzLmN1cnJlbnRJbmRleDtcblx0fVxufSApO1xuXG5cdHJldHVybiBSaWNrc2hhdztcbn0pKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JpY2tzaGF3L3JpY2tzaGF3LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9yaWNrc2hhdy9yaWNrc2hhdy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDQiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./node_modules/rickshaw/rickshaw.js\n");

/***/ }),

/***/ "./node_modules/webpack-raphael/raphael-min.js":
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Raphael) {var __WEBPACK_LOCAL_MODULE_0__, __WEBPACK_LOCAL_MODULE_0__module;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_1__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_2__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_3__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// ┌────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.1.4 - JavaScript Vector Library                          │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\n!function(a,b){ true?!(__WEBPACK_LOCAL_MODULE_0__module = { id: \"eve\", exports: {}, loaded: false }, __WEBPACK_LOCAL_MODULE_0__ = function(){return b()}.call(__WEBPACK_LOCAL_MODULE_0__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_0__module.exports, __WEBPACK_LOCAL_MODULE_0__module), __WEBPACK_LOCAL_MODULE_0__module.loaded = true, __WEBPACK_LOCAL_MODULE_0__ === undefined && (__WEBPACK_LOCAL_MODULE_0__ = __WEBPACK_LOCAL_MODULE_0__module.exports)):\"object\"==typeof exports?module.exports=b():a.eve=b()}(this,function(){var a,b,c=\"0.4.2\",d=\"hasOwnProperty\",e=/[\\.\\/]/,f=\"*\",g=function(){},h=function(a,b){return a-b},i={n:{}},j=function(c,d){c=String(c);var e,f=b,g=Array.prototype.slice.call(arguments,2),i=j.listeners(c),k=0,l=[],m={},n=[],o=a;a=c,b=0;for(var p=0,q=i.length;q>p;p++)\"zIndex\"in i[p]&&(l.push(i[p].zIndex),i[p].zIndex<0&&(m[i[p].zIndex]=i[p]));for(l.sort(h);l[k]<0;)if(e=m[l[k++]],n.push(e.apply(d,g)),b)return b=f,n;for(p=0;q>p;p++)if(e=i[p],\"zIndex\"in e)if(e.zIndex==l[k]){if(n.push(e.apply(d,g)),b)break;do if(k++,e=m[l[k]],e&&n.push(e.apply(d,g)),b)break;while(e)}else m[e.zIndex]=e;else if(n.push(e.apply(d,g)),b)break;return b=f,a=o,n.length?n:null};return j._events=i,j.listeners=function(a){var b,c,d,g,h,j,k,l,m=a.split(e),n=i,o=[n],p=[];for(g=0,h=m.length;h>g;g++){for(l=[],j=0,k=o.length;k>j;j++)for(n=o[j].n,c=[n[m[g]],n[f]],d=2;d--;)b=c[d],b&&(l.push(b),p=p.concat(b.f||[]));o=l}return p},j.on=function(a,b){if(a=String(a),\"function\"!=typeof b)return function(){};for(var c=a.split(e),d=i,f=0,h=c.length;h>f;f++)d=d.n,d=d.hasOwnProperty(c[f])&&d[c[f]]||(d[c[f]]={n:{}});for(d.f=d.f||[],f=0,h=d.f.length;h>f;f++)if(d.f[f]==b)return g;return d.f.push(b),function(a){+a==+a&&(b.zIndex=+a)}},j.f=function(a){var b=[].slice.call(arguments,1);return function(){j.apply(null,[a,null].concat(b).concat([].slice.call(arguments,0)))}},j.stop=function(){b=1},j.nt=function(b){return b?new RegExp(\"(?:\\\\.|\\\\/|^)\"+b+\"(?:\\\\.|\\\\/|$)\").test(a):a},j.nts=function(){return a.split(e)},j.off=j.unbind=function(a,b){if(!a)return void(j._events=i={n:{}});var c,g,h,k,l,m,n,o=a.split(e),p=[i];for(k=0,l=o.length;l>k;k++)for(m=0;m<p.length;m+=h.length-2){if(h=[m,1],c=p[m].n,o[k]!=f)c[o[k]]&&h.push(c[o[k]]);else for(g in c)c[d](g)&&h.push(c[g]);p.splice.apply(p,h)}for(k=0,l=p.length;l>k;k++)for(c=p[k];c.n;){if(b){if(c.f){for(m=0,n=c.f.length;n>m;m++)if(c.f[m]==b){c.f.splice(m,1);break}!c.f.length&&delete c.f}for(g in c.n)if(c.n[d](g)&&c.n[g].f){var q=c.n[g].f;for(m=0,n=q.length;n>m;m++)if(q[m]==b){q.splice(m,1);break}!q.length&&delete c.n[g].f}}else{delete c.f;for(g in c.n)c.n[d](g)&&c.n[g].f&&delete c.n[g].f}c=c.n}},j.once=function(a,b){var c=function(){return j.unbind(a,c),b.apply(this,arguments)};return j.on(a,c)},j.version=c,j.toString=function(){return\"You are running Eve \"+c},j}),function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_0__], __WEBPACK_LOCAL_MODULE_1__ = (function(a){return b(a)}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__))):\"object\"==typeof exports?module.exports=b(require(\"eve\")):a.Raphael=b(a.eve)}(this,function(a){function b(c){if(b.is(c,\"function\"))return t?c():a.on(\"raphael.DOMload\",c);if(b.is(c,U))return b._engine.create[C](b,c.splice(0,3+b.is(c[0],S))).add(c);var d=Array.prototype.slice.call(arguments,0);if(b.is(d[d.length-1],\"function\")){var e=d.pop();return t?e.call(b._engine.create[C](b,d)):a.on(\"raphael.DOMload\",function(){e.call(b._engine.create[C](b,d))})}return b._engine.create[C](b,arguments)}function c(a){if(\"function\"==typeof a||Object(a)!==a)return a;var b=new a.constructor;for(var d in a)a[y](d)&&(b[d]=c(a[d]));return b}function d(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return a.push(a.splice(c,1)[0])}function e(a,b,c){function e(){var f=Array.prototype.slice.call(arguments,0),g=f.join(\"␀\"),h=e.cache=e.cache||{},i=e.count=e.count||[];return h[y](g)?(d(i,g),c?c(h[g]):h[g]):(i.length>=1e3&&delete h[i.shift()],i.push(g),h[g]=a[C](b,f),c?c(h[g]):h[g])}return e}function f(){return this.hex}function g(a,b){for(var c=[],d=0,e=a.length;e-2*!b>d;d+=2){var f=[{x:+a[d-2],y:+a[d-1]},{x:+a[d],y:+a[d+1]},{x:+a[d+2],y:+a[d+3]},{x:+a[d+4],y:+a[d+5]}];b?d?e-4==d?f[3]={x:+a[0],y:+a[1]}:e-2==d&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[e-2],y:+a[e-1]}:e-4==d?f[3]=f[2]:d||(f[0]={x:+a[d],y:+a[d+1]}),c.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return c}function h(a,b,c,d,e){var f=-3*b+9*c-9*d+3*e,g=a*f+6*b-12*c+6*d;return a*g-3*b+3*c}function i(a,b,c,d,e,f,g,i,j){null==j&&(j=1),j=j>1?1:0>j?0:j;for(var k=j/2,l=12,m=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],n=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],o=0,p=0;l>p;p++){var q=k*m[p]+k,r=h(q,a,c,e,g),s=h(q,b,d,f,i),t=r*r+s*s;o+=n[p]*M.sqrt(t)}return k*o}function j(a,b,c,d,e,f,g,h,j){if(!(0>j||i(a,b,c,d,e,f,g,h)<j)){var k,l=1,m=l/2,n=l-m,o=.01;for(k=i(a,b,c,d,e,f,g,h,n);P(k-j)>o;)m/=2,n+=(j>k?1:-1)*m,k=i(a,b,c,d,e,f,g,h,n);return n}}function k(a,b,c,d,e,f,g,h){if(!(N(a,c)<O(e,g)||O(a,c)>N(e,g)||N(b,d)<O(f,h)||O(b,d)>N(f,h))){var i=(a*d-b*c)*(e-g)-(a-c)*(e*h-f*g),j=(a*d-b*c)*(f-h)-(b-d)*(e*h-f*g),k=(a-c)*(f-h)-(b-d)*(e-g);if(k){var l=i/k,m=j/k,n=+l.toFixed(2),o=+m.toFixed(2);if(!(n<+O(a,c).toFixed(2)||n>+N(a,c).toFixed(2)||n<+O(e,g).toFixed(2)||n>+N(e,g).toFixed(2)||o<+O(b,d).toFixed(2)||o>+N(b,d).toFixed(2)||o<+O(f,h).toFixed(2)||o>+N(f,h).toFixed(2)))return{x:l,y:m}}}}function l(a,c,d){var e=b.bezierBBox(a),f=b.bezierBBox(c);if(!b.isBBoxIntersect(e,f))return d?0:[];for(var g=i.apply(0,a),h=i.apply(0,c),j=N(~~(g/5),1),l=N(~~(h/5),1),m=[],n=[],o={},p=d?0:[],q=0;j+1>q;q++){var r=b.findDotsAtSegment.apply(b,a.concat(q/j));m.push({x:r.x,y:r.y,t:q/j})}for(q=0;l+1>q;q++)r=b.findDotsAtSegment.apply(b,c.concat(q/l)),n.push({x:r.x,y:r.y,t:q/l});for(q=0;j>q;q++)for(var s=0;l>s;s++){var t=m[q],u=m[q+1],v=n[s],w=n[s+1],x=P(u.x-t.x)<.001?\"y\":\"x\",y=P(w.x-v.x)<.001?\"y\":\"x\",z=k(t.x,t.y,u.x,u.y,v.x,v.y,w.x,w.y);if(z){if(o[z.x.toFixed(4)]==z.y.toFixed(4))continue;o[z.x.toFixed(4)]=z.y.toFixed(4);var A=t.t+P((z[x]-t[x])/(u[x]-t[x]))*(u.t-t.t),B=v.t+P((z[y]-v[y])/(w[y]-v[y]))*(w.t-v.t);A>=0&&1.001>=A&&B>=0&&1.001>=B&&(d?p++:p.push({x:z.x,y:z.y,t1:O(A,1),t2:O(B,1)}))}}return p}function m(a,c,d){a=b._path2curve(a),c=b._path2curve(c);for(var e,f,g,h,i,j,k,m,n,o,p=d?0:[],q=0,r=a.length;r>q;q++){var s=a[q];if(\"M\"==s[0])e=i=s[1],f=j=s[2];else{\"C\"==s[0]?(n=[e,f].concat(s.slice(1)),e=n[6],f=n[7]):(n=[e,f,e,f,i,j,i,j],e=i,f=j);for(var t=0,u=c.length;u>t;t++){var v=c[t];if(\"M\"==v[0])g=k=v[1],h=m=v[2];else{\"C\"==v[0]?(o=[g,h].concat(v.slice(1)),g=o[6],h=o[7]):(o=[g,h,g,h,k,m,k,m],g=k,h=m);var w=l(n,o,d);if(d)p+=w;else{for(var x=0,y=w.length;y>x;x++)w[x].segment1=q,w[x].segment2=t,w[x].bez1=n,w[x].bez2=o;p=p.concat(w)}}}}}return p}function n(a,b,c,d,e,f){null!=a?(this.a=+a,this.b=+b,this.c=+c,this.d=+d,this.e=+e,this.f=+f):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function o(){return this.x+G+this.y+G+this.width+\" × \"+this.height}function p(a,b,c,d,e,f){function g(a){return((l*a+k)*a+j)*a}function h(a,b){var c=i(a,b);return((o*c+n)*c+m)*c}function i(a,b){var c,d,e,f,h,i;for(e=a,i=0;8>i;i++){if(f=g(e)-a,P(f)<b)return e;if(h=(3*l*e+2*k)*e+j,P(h)<1e-6)break;e-=f/h}if(c=0,d=1,e=a,c>e)return c;if(e>d)return d;for(;d>c;){if(f=g(e),P(f-a)<b)return e;a>f?c=e:d=e,e=(d-c)/2+c}return e}var j=3*b,k=3*(d-b)-j,l=1-j-k,m=3*c,n=3*(e-c)-m,o=1-m-n;return h(a,1/(200*f))}function q(a,b){var c=[],d={};if(this.ms=b,this.times=1,a){for(var e in a)a[y](e)&&(d[$(e)]=a[e],c.push($(e)));c.sort(ka)}this.anim=d,this.top=c[c.length-1],this.percents=c}function r(c,d,e,f,g,h){e=$(e);var i,j,k,l,m,o,q=c.ms,r={},s={},t={};if(f)for(w=0,x=fb.length;x>w;w++){var u=fb[w];if(u.el.id==d.id&&u.anim==c){u.percent!=e?(fb.splice(w,1),k=1):j=u,d.attr(u.totalOrigin);break}}else f=+s;for(var w=0,x=c.percents.length;x>w;w++){if(c.percents[w]==e||c.percents[w]>f*c.top){e=c.percents[w],m=c.percents[w-1]||0,q=q/c.top*(e-m),l=c.percents[w+1],i=c.anim[e];break}f&&d.attr(c.anim[c.percents[w]])}if(i){if(j)j.initstatus=f,j.start=new Date-j.ms*f;else{for(var z in i)if(i[y](z)&&(ca[y](z)||d.paper.customAttributes[y](z)))switch(r[z]=d.attr(z),null==r[z]&&(r[z]=ba[z]),s[z]=i[z],ca[z]){case S:t[z]=(s[z]-r[z])/q;break;case\"colour\":r[z]=b.getRGB(r[z]);var A=b.getRGB(s[z]);t[z]={r:(A.r-r[z].r)/q,g:(A.g-r[z].g)/q,b:(A.b-r[z].b)/q};break;case\"path\":var B=Ia(r[z],s[z]),C=B[1];for(r[z]=B[0],t[z]=[],w=0,x=r[z].length;x>w;w++){t[z][w]=[0];for(var E=1,F=r[z][w].length;F>E;E++)t[z][w][E]=(C[w][E]-r[z][w][E])/q}break;case\"transform\":var G=d._,J=Na(G[z],s[z]);if(J)for(r[z]=J.from,s[z]=J.to,t[z]=[],t[z].real=!0,w=0,x=r[z].length;x>w;w++)for(t[z][w]=[r[z][w][0]],E=1,F=r[z][w].length;F>E;E++)t[z][w][E]=(s[z][w][E]-r[z][w][E])/q;else{var K=d.matrix||new n,L={_:{transform:G.transform},getBBox:function(){return d.getBBox(1)}};r[z]=[K.a,K.b,K.c,K.d,K.e,K.f],La(L,s[z]),s[z]=L._.transform,t[z]=[(L.matrix.a-K.a)/q,(L.matrix.b-K.b)/q,(L.matrix.c-K.c)/q,(L.matrix.d-K.d)/q,(L.matrix.e-K.e)/q,(L.matrix.f-K.f)/q]}break;case\"csv\":var M=H(i[z])[I](v),N=H(r[z])[I](v);if(\"clip-rect\"==z)for(r[z]=N,t[z]=[],w=N.length;w--;)t[z][w]=(M[w]-r[z][w])/q;s[z]=M;break;default:for(M=[][D](i[z]),N=[][D](r[z]),t[z]=[],w=d.paper.customAttributes[z].length;w--;)t[z][w]=((M[w]||0)-(N[w]||0))/q}var O=i.easing,P=b.easing_formulas[O];if(!P)if(P=H(O).match(Y),P&&5==P.length){var Q=P;P=function(a){return p(a,+Q[1],+Q[2],+Q[3],+Q[4],q)}}else P=la;if(o=i.start||c.start||+new Date,u={anim:c,percent:e,timestamp:o,start:o+(c.del||0),status:0,initstatus:f||0,stop:!1,ms:q,easing:P,from:r,diff:t,to:s,el:d,callback:i.callback,prev:m,next:l,repeat:h||c.times,origin:d.attr(),totalOrigin:g},fb.push(u),f&&!j&&!k&&(u.stop=!0,u.start=new Date-q*f,1==fb.length))return hb();k&&(u.start=new Date-u.ms*f),1==fb.length&&gb(hb)}a(\"raphael.anim.start.\"+d.id,d,c)}}function s(a){for(var b=0;b<fb.length;b++)fb[b].el.paper==a&&fb.splice(b--,1)}b.version=\"2.1.4\",b.eve=a;var t,u,v=/[, ]+/,w={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},x=/\\{(\\d+)\\}/g,y=\"hasOwnProperty\",z={doc:document,win:window},A={was:Object.prototype[y].call(z.win,\"Raphael\"),is:z.win.Raphael},B=function(){this.ca=this.customAttributes={}},C=\"apply\",D=\"concat\",E=\"ontouchstart\"in z.win||z.win.DocumentTouch&&z.doc instanceof DocumentTouch,F=\"\",G=\" \",H=String,I=\"split\",J=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[I](G),K={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},L=H.prototype.toLowerCase,M=Math,N=M.max,O=M.min,P=M.abs,Q=M.pow,R=M.PI,S=\"number\",T=\"string\",U=\"array\",V=Object.prototype.toString,W=(b._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i),X={NaN:1,Infinity:1,\"-Infinity\":1},Y=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,Z=M.round,$=parseFloat,_=parseInt,aa=H.prototype.toUpperCase,ba=b._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0},ca=b._availableAnimAttrs={blur:S,\"clip-rect\":\"csv\",cx:S,cy:S,fill:\"colour\",\"fill-opacity\":S,\"font-size\":S,height:S,opacity:S,path:\"path\",r:S,rx:S,ry:S,stroke:\"colour\",\"stroke-opacity\":S,\"stroke-width\":S,transform:\"transform\",width:S,x:S,y:S},da=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,ea={hs:1,rg:1},fa=/,?([achlmqrstvxz]),?/gi,ga=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,ha=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,ia=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,ja=(b._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,{}),ka=function(a,b){return $(a)-$(b)},la=function(a){return a},ma=b._rectPath=function(a,b,c,d,e){return e?[[\"M\",a+e,b],[\"l\",c-2*e,0],[\"a\",e,e,0,0,1,e,e],[\"l\",0,d-2*e],[\"a\",e,e,0,0,1,-e,e],[\"l\",2*e-c,0],[\"a\",e,e,0,0,1,-e,-e],[\"l\",0,2*e-d],[\"a\",e,e,0,0,1,e,-e],[\"z\"]]:[[\"M\",a,b],[\"l\",c,0],[\"l\",0,d],[\"l\",-c,0],[\"z\"]]},na=function(a,b,c,d){return null==d&&(d=c),[[\"M\",a,b],[\"m\",0,-d],[\"a\",c,d,0,1,1,0,2*d],[\"a\",c,d,0,1,1,0,-2*d],[\"z\"]]},oa=b._getPath={path:function(a){return a.attr(\"path\")},circle:function(a){var b=a.attrs;return na(b.cx,b.cy,b.r)},ellipse:function(a){var b=a.attrs;return na(b.cx,b.cy,b.rx,b.ry)},rect:function(a){var b=a.attrs;return ma(b.x,b.y,b.width,b.height,b.r)},image:function(a){var b=a.attrs;return ma(b.x,b.y,b.width,b.height)},text:function(a){var b=a._getBBox();return ma(b.x,b.y,b.width,b.height)},set:function(a){var b=a._getBBox();return ma(b.x,b.y,b.width,b.height)}},pa=b.mapPath=function(a,b){if(!b)return a;var c,d,e,f,g,h,i;for(a=Ia(a),e=0,g=a.length;g>e;e++)for(i=a[e],f=1,h=i.length;h>f;f+=2)c=b.x(i[f],i[f+1]),d=b.y(i[f],i[f+1]),i[f]=c,i[f+1]=d;return a};if(b._g=z,b.type=z.win.SVGAngle||z.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==b.type){var qa,ra=z.doc.createElement(\"div\");if(ra.innerHTML='<v:shape adj=\"1\"/>',qa=ra.firstChild,qa.style.behavior=\"url(#default#VML)\",!qa||\"object\"!=typeof qa.adj)return b.type=F;ra=null}b.svg=!(b.vml=\"VML\"==b.type),b._Paper=B,b.fn=u=B.prototype=b.prototype,b._id=0,b._oid=0,b.is=function(a,b){return b=L.call(b),\"finite\"==b?!X[y](+a):\"array\"==b?a instanceof Array:\"null\"==b&&null===a||b==typeof a&&null!==a||\"object\"==b&&a===Object(a)||\"array\"==b&&Array.isArray&&Array.isArray(a)||V.call(a).slice(8,-1).toLowerCase()==b},b.angle=function(a,c,d,e,f,g){if(null==f){var h=a-d,i=c-e;return h||i?(180+180*M.atan2(-i,-h)/R+360)%360:0}return b.angle(a,c,f,g)-b.angle(d,e,f,g)},b.rad=function(a){return a%360*R/180},b.deg=function(a){return Math.round(180*a/R%360*1e3)/1e3},b.snapTo=function(a,c,d){if(d=b.is(d,\"finite\")?d:10,b.is(a,U)){for(var e=a.length;e--;)if(P(a[e]-c)<=d)return a[e]}else{a=+a;var f=c%a;if(d>f)return c-f;if(f>a-d)return c-f+a}return c};b.createUUID=function(a,b){return function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(a,b).toUpperCase()}}(/[xy]/g,function(a){var b=16*M.random()|0,c=\"x\"==a?b:3&b|8;return c.toString(16)});b.setWindow=function(c){a(\"raphael.setWindow\",b,z.win,c),z.win=c,z.doc=z.win.document,b._engine.initWin&&b._engine.initWin(z.win)};var sa=function(a){if(b.vml){var c,d=/^\\s+|\\s+$/g;try{var f=new ActiveXObject(\"htmlfile\");f.write(\"<body>\"),f.close(),c=f.body}catch(g){c=createPopup().document.body}var h=c.createTextRange();sa=e(function(a){try{c.style.color=H(a).replace(d,F);var b=h.queryCommandValue(\"ForeColor\");return b=(255&b)<<16|65280&b|(16711680&b)>>>16,\"#\"+(\"000000\"+b.toString(16)).slice(-6)}catch(e){return\"none\"}})}else{var i=z.doc.createElement(\"i\");i.title=\"Raphaël Colour Picker\",i.style.display=\"none\",z.doc.body.appendChild(i),sa=e(function(a){return i.style.color=a,z.doc.defaultView.getComputedStyle(i,F).getPropertyValue(\"color\")})}return sa(a)},ta=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ua=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},va=function(){return this.hex},wa=function(a,c,d){if(null==c&&b.is(a,\"object\")&&\"r\"in a&&\"g\"in a&&\"b\"in a&&(d=a.b,c=a.g,a=a.r),null==c&&b.is(a,T)){var e=b.getRGB(a);a=e.r,c=e.g,d=e.b}return(a>1||c>1||d>1)&&(a/=255,c/=255,d/=255),[a,c,d]},xa=function(a,c,d,e){a*=255,c*=255,d*=255;var f={r:a,g:c,b:d,hex:b.rgb(a,c,d),toString:va};return b.is(e,\"finite\")&&(f.opacity=e),f};b.color=function(a){var c;return b.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"b\"in a?(c=b.hsb2rgb(a),a.r=c.r,a.g=c.g,a.b=c.b,a.hex=c.hex):b.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"l\"in a?(c=b.hsl2rgb(a),a.r=c.r,a.g=c.g,a.b=c.b,a.hex=c.hex):(b.is(a,\"string\")&&(a=b.getRGB(a)),b.is(a,\"object\")&&\"r\"in a&&\"g\"in a&&\"b\"in a?(c=b.rgb2hsl(a),a.h=c.h,a.s=c.s,a.l=c.l,c=b.rgb2hsb(a),a.v=c.b):(a={hex:\"none\"},a.r=a.g=a.b=a.h=a.s=a.v=a.l=-1)),a.toString=va,a},b.hsb2rgb=function(a,b,c,d){this.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"b\"in a&&(c=a.b,b=a.s,d=a.o,a=a.h),a*=360;var e,f,g,h,i;return a=a%360/60,i=c*b,h=i*(1-P(a%2-1)),e=f=g=c-i,a=~~a,e+=[i,h,0,0,h,i][a],f+=[h,i,i,h,0,0][a],g+=[0,0,h,i,i,h][a],xa(e,f,g,d)},b.hsl2rgb=function(a,b,c,d){this.is(a,\"object\")&&\"h\"in a&&\"s\"in a&&\"l\"in a&&(c=a.l,b=a.s,a=a.h),(a>1||b>1||c>1)&&(a/=360,b/=100,c/=100),a*=360;var e,f,g,h,i;return a=a%360/60,i=2*b*(.5>c?c:1-c),h=i*(1-P(a%2-1)),e=f=g=c-i/2,a=~~a,e+=[i,h,0,0,h,i][a],f+=[h,i,i,h,0,0][a],g+=[0,0,h,i,i,h][a],xa(e,f,g,d)},b.rgb2hsb=function(a,b,c){c=wa(a,b,c),a=c[0],b=c[1],c=c[2];var d,e,f,g;return f=N(a,b,c),g=f-O(a,b,c),d=0==g?null:f==a?(b-c)/g:f==b?(c-a)/g+2:(a-b)/g+4,d=(d+360)%6*60/360,e=0==g?0:g/f,{h:d,s:e,b:f,toString:ta}},b.rgb2hsl=function(a,b,c){c=wa(a,b,c),a=c[0],b=c[1],c=c[2];var d,e,f,g,h,i;return g=N(a,b,c),h=O(a,b,c),i=g-h,d=0==i?null:g==a?(b-c)/i:g==b?(c-a)/i+2:(a-b)/i+4,d=(d+360)%6*60/360,f=(g+h)/2,e=0==i?0:.5>f?i/(2*f):i/(2-2*f),{h:d,s:e,l:f,toString:ua}},b._path2string=function(){return this.join(\",\").replace(fa,\"$1\")};b._preload=function(a,b){var c=z.doc.createElement(\"img\");c.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",c.onload=function(){b.call(this),this.onload=null,z.doc.body.removeChild(this)},c.onerror=function(){z.doc.body.removeChild(this)},z.doc.body.appendChild(c),c.src=a};b.getRGB=e(function(a){if(!a||(a=H(a)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:f};if(\"none\"==a)return{r:-1,g:-1,b:-1,hex:\"none\",toString:f};!(ea[y](a.toLowerCase().substring(0,2))||\"#\"==a.charAt())&&(a=sa(a));var c,d,e,g,h,i,j=a.match(W);return j?(j[2]&&(e=_(j[2].substring(5),16),d=_(j[2].substring(3,5),16),c=_(j[2].substring(1,3),16)),j[3]&&(e=_((h=j[3].charAt(3))+h,16),d=_((h=j[3].charAt(2))+h,16),c=_((h=j[3].charAt(1))+h,16)),j[4]&&(i=j[4][I](da),c=$(i[0]),\"%\"==i[0].slice(-1)&&(c*=2.55),d=$(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=$(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),\"rgba\"==j[1].toLowerCase().slice(0,4)&&(g=$(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(g/=100)),j[5]?(i=j[5][I](da),c=$(i[0]),\"%\"==i[0].slice(-1)&&(c*=2.55),d=$(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=$(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),(\"deg\"==i[0].slice(-3)||\"°\"==i[0].slice(-1))&&(c/=360),\"hsba\"==j[1].toLowerCase().slice(0,4)&&(g=$(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(g/=100),b.hsb2rgb(c,d,e,g)):j[6]?(i=j[6][I](da),c=$(i[0]),\"%\"==i[0].slice(-1)&&(c*=2.55),d=$(i[1]),\"%\"==i[1].slice(-1)&&(d*=2.55),e=$(i[2]),\"%\"==i[2].slice(-1)&&(e*=2.55),(\"deg\"==i[0].slice(-3)||\"°\"==i[0].slice(-1))&&(c/=360),\"hsla\"==j[1].toLowerCase().slice(0,4)&&(g=$(i[3])),i[3]&&\"%\"==i[3].slice(-1)&&(g/=100),b.hsl2rgb(c,d,e,g)):(j={r:c,g:d,b:e,toString:f},j.hex=\"#\"+(16777216|e|d<<8|c<<16).toString(16).slice(1),b.is(g,\"finite\")&&(j.opacity=g),j)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:f}},b),b.hsb=e(function(a,c,d){return b.hsb2rgb(a,c,d).hex}),b.hsl=e(function(a,c,d){return b.hsl2rgb(a,c,d).hex}),b.rgb=e(function(a,b,c){function d(a){return a+.5|0}return\"#\"+(16777216|d(c)|d(b)<<8|d(a)<<16).toString(16).slice(1)}),b.getColor=function(a){var b=this.getColor.start=this.getColor.start||{h:0,s:1,b:a||.75},c=this.hsb2rgb(b.h,b.s,b.b);return b.h+=.075,b.h>1&&(b.h=0,b.s-=.2,b.s<=0&&(this.getColor.start={h:0,s:1,b:b.b})),c.hex},b.getColor.reset=function(){delete this.start},b.parsePathString=function(a){if(!a)return null;var c=ya(a);if(c.arr)return Aa(c.arr);var d={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},e=[];return b.is(a,U)&&b.is(a[0],U)&&(e=Aa(a)),e.length||H(a).replace(ga,function(a,b,c){var f=[],g=b.toLowerCase();if(c.replace(ia,function(a,b){b&&f.push(+b)}),\"m\"==g&&f.length>2&&(e.push([b][D](f.splice(0,2))),g=\"l\",b=\"m\"==b?\"l\":\"L\"),\"r\"==g)e.push([b][D](f));else for(;f.length>=d[g]&&(e.push([b][D](f.splice(0,d[g]))),d[g]););}),e.toString=b._path2string,c.arr=Aa(e),e},b.parseTransformString=e(function(a){if(!a)return null;var c=[];return b.is(a,U)&&b.is(a[0],U)&&(c=Aa(a)),c.length||H(a).replace(ha,function(a,b,d){{var e=[];L.call(b)}d.replace(ia,function(a,b){b&&e.push(+b)}),c.push([b][D](e))}),c.toString=b._path2string,c});var ya=function(a){var b=ya.ps=ya.ps||{};return b[a]?b[a].sleep=100:b[a]={sleep:100},setTimeout(function(){for(var c in b)b[y](c)&&c!=a&&(b[c].sleep--,!b[c].sleep&&delete b[c])}),b[a]};b.findDotsAtSegment=function(a,b,c,d,e,f,g,h,i){var j=1-i,k=Q(j,3),l=Q(j,2),m=i*i,n=m*i,o=k*a+3*l*i*c+3*j*i*i*e+n*g,p=k*b+3*l*i*d+3*j*i*i*f+n*h,q=a+2*i*(c-a)+m*(e-2*c+a),r=b+2*i*(d-b)+m*(f-2*d+b),s=c+2*i*(e-c)+m*(g-2*e+c),t=d+2*i*(f-d)+m*(h-2*f+d),u=j*a+i*c,v=j*b+i*d,w=j*e+i*g,x=j*f+i*h,y=90-180*M.atan2(q-s,r-t)/R;return(q>s||t>r)&&(y+=180),{x:o,y:p,m:{x:q,y:r},n:{x:s,y:t},start:{x:u,y:v},end:{x:w,y:x},alpha:y}},b.bezierBBox=function(a,c,d,e,f,g,h,i){b.is(a,\"array\")||(a=[a,c,d,e,f,g,h,i]);var j=Ha.apply(null,a);return{x:j.min.x,y:j.min.y,x2:j.max.x,y2:j.max.y,width:j.max.x-j.min.x,height:j.max.y-j.min.y}},b.isPointInsideBBox=function(a,b,c){return b>=a.x&&b<=a.x2&&c>=a.y&&c<=a.y2},b.isBBoxIntersect=function(a,c){var d=b.isPointInsideBBox;return d(c,a.x,a.y)||d(c,a.x2,a.y)||d(c,a.x,a.y2)||d(c,a.x2,a.y2)||d(a,c.x,c.y)||d(a,c.x2,c.y)||d(a,c.x,c.y2)||d(a,c.x2,c.y2)||(a.x<c.x2&&a.x>c.x||c.x<a.x2&&c.x>a.x)&&(a.y<c.y2&&a.y>c.y||c.y<a.y2&&c.y>a.y)},b.pathIntersection=function(a,b){return m(a,b)},b.pathIntersectionNumber=function(a,b){return m(a,b,1)},b.isPointInsidePath=function(a,c,d){var e=b.pathBBox(a);return b.isPointInsideBBox(e,c,d)&&m(a,[[\"M\",c,d],[\"H\",e.x2+10]],1)%2==1},b._removedFactory=function(b){return function(){a(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+b+\"” of removed object\",b)}};var za=b.pathBBox=function(a){var b=ya(a);if(b.bbox)return c(b.bbox);if(!a)return{x:0,y:0,width:0,height:0,x2:0,y2:0};a=Ia(a);for(var d,e=0,f=0,g=[],h=[],i=0,j=a.length;j>i;i++)if(d=a[i],\"M\"==d[0])e=d[1],f=d[2],g.push(e),h.push(f);else{var k=Ha(e,f,d[1],d[2],d[3],d[4],d[5],d[6]);g=g[D](k.min.x,k.max.x),h=h[D](k.min.y,k.max.y),e=d[5],f=d[6]}var l=O[C](0,g),m=O[C](0,h),n=N[C](0,g),o=N[C](0,h),p=n-l,q=o-m,r={x:l,y:m,x2:n,y2:o,width:p,height:q,cx:l+p/2,cy:m+q/2};return b.bbox=c(r),r},Aa=function(a){var d=c(a);return d.toString=b._path2string,d},Ba=b._pathToRelative=function(a){var c=ya(a);if(c.rel)return Aa(c.rel);b.is(a,U)&&b.is(a&&a[0],U)||(a=b.parsePathString(a));var d=[],e=0,f=0,g=0,h=0,i=0;\"M\"==a[0][0]&&(e=a[0][1],f=a[0][2],g=e,h=f,i++,d.push([\"M\",e,f]));for(var j=i,k=a.length;k>j;j++){var l=d[j]=[],m=a[j];if(m[0]!=L.call(m[0]))switch(l[0]=L.call(m[0]),l[0]){case\"a\":l[1]=m[1],l[2]=m[2],l[3]=m[3],l[4]=m[4],l[5]=m[5],l[6]=+(m[6]-e).toFixed(3),l[7]=+(m[7]-f).toFixed(3);break;case\"v\":l[1]=+(m[1]-f).toFixed(3);break;case\"m\":g=m[1],h=m[2];default:for(var n=1,o=m.length;o>n;n++)l[n]=+(m[n]-(n%2?e:f)).toFixed(3)}else{l=d[j]=[],\"m\"==m[0]&&(g=m[1]+e,h=m[2]+f);for(var p=0,q=m.length;q>p;p++)d[j][p]=m[p]}var r=d[j].length;switch(d[j][0]){case\"z\":e=g,f=h;break;case\"h\":e+=+d[j][r-1];break;case\"v\":f+=+d[j][r-1];break;default:e+=+d[j][r-2],f+=+d[j][r-1]}}return d.toString=b._path2string,c.rel=Aa(d),d},Ca=b._pathToAbsolute=function(a){var c=ya(a);if(c.abs)return Aa(c.abs);if(b.is(a,U)&&b.is(a&&a[0],U)||(a=b.parsePathString(a)),!a||!a.length)return[[\"M\",0,0]];var d=[],e=0,f=0,h=0,i=0,j=0;\"M\"==a[0][0]&&(e=+a[0][1],f=+a[0][2],h=e,i=f,j++,d[0]=[\"M\",e,f]);for(var k,l,m=3==a.length&&\"M\"==a[0][0]&&\"R\"==a[1][0].toUpperCase()&&\"Z\"==a[2][0].toUpperCase(),n=j,o=a.length;o>n;n++){if(d.push(k=[]),l=a[n],l[0]!=aa.call(l[0]))switch(k[0]=aa.call(l[0]),k[0]){case\"A\":k[1]=l[1],k[2]=l[2],k[3]=l[3],k[4]=l[4],k[5]=l[5],k[6]=+(l[6]+e),k[7]=+(l[7]+f);break;case\"V\":k[1]=+l[1]+f;break;case\"H\":k[1]=+l[1]+e;break;case\"R\":for(var p=[e,f][D](l.slice(1)),q=2,r=p.length;r>q;q++)p[q]=+p[q]+e,p[++q]=+p[q]+f;d.pop(),d=d[D](g(p,m));break;case\"M\":h=+l[1]+e,i=+l[2]+f;default:for(q=1,r=l.length;r>q;q++)k[q]=+l[q]+(q%2?e:f)}else if(\"R\"==l[0])p=[e,f][D](l.slice(1)),d.pop(),d=d[D](g(p,m)),k=[\"R\"][D](l.slice(-2));else for(var s=0,t=l.length;t>s;s++)k[s]=l[s];switch(k[0]){case\"Z\":e=h,f=i;break;case\"H\":e=k[1];break;case\"V\":f=k[1];break;case\"M\":h=k[k.length-2],i=k[k.length-1];default:e=k[k.length-2],f=k[k.length-1]}}return d.toString=b._path2string,c.abs=Aa(d),d},Da=function(a,b,c,d){return[a,b,c,d,c,d]},Ea=function(a,b,c,d,e,f){var g=1/3,h=2/3;return[g*a+h*c,g*b+h*d,g*e+h*c,g*f+h*d,e,f]},Fa=function(a,b,c,d,f,g,h,i,j,k){var l,m=120*R/180,n=R/180*(+f||0),o=[],p=e(function(a,b,c){var d=a*M.cos(c)-b*M.sin(c),e=a*M.sin(c)+b*M.cos(c);return{x:d,y:e}});if(k)y=k[0],z=k[1],w=k[2],x=k[3];else{l=p(a,b,-n),a=l.x,b=l.y,l=p(i,j,-n),i=l.x,j=l.y;var q=(M.cos(R/180*f),M.sin(R/180*f),(a-i)/2),r=(b-j)/2,s=q*q/(c*c)+r*r/(d*d);s>1&&(s=M.sqrt(s),c=s*c,d=s*d);var t=c*c,u=d*d,v=(g==h?-1:1)*M.sqrt(P((t*u-t*r*r-u*q*q)/(t*r*r+u*q*q))),w=v*c*r/d+(a+i)/2,x=v*-d*q/c+(b+j)/2,y=M.asin(((b-x)/d).toFixed(9)),z=M.asin(((j-x)/d).toFixed(9));y=w>a?R-y:y,z=w>i?R-z:z,0>y&&(y=2*R+y),0>z&&(z=2*R+z),h&&y>z&&(y-=2*R),!h&&z>y&&(z-=2*R)}var A=z-y;if(P(A)>m){var B=z,C=i,E=j;z=y+m*(h&&z>y?1:-1),i=w+c*M.cos(z),j=x+d*M.sin(z),o=Fa(i,j,c,d,f,0,h,C,E,[z,B,w,x])}A=z-y;var F=M.cos(y),G=M.sin(y),H=M.cos(z),J=M.sin(z),K=M.tan(A/4),L=4/3*c*K,N=4/3*d*K,O=[a,b],Q=[a+L*G,b-N*F],S=[i+L*J,j-N*H],T=[i,j];if(Q[0]=2*O[0]-Q[0],Q[1]=2*O[1]-Q[1],k)return[Q,S,T][D](o);o=[Q,S,T][D](o).join()[I](\",\");for(var U=[],V=0,W=o.length;W>V;V++)U[V]=V%2?p(o[V-1],o[V],n).y:p(o[V],o[V+1],n).x;return U},Ga=function(a,b,c,d,e,f,g,h,i){var j=1-i;return{x:Q(j,3)*a+3*Q(j,2)*i*c+3*j*i*i*e+Q(i,3)*g,y:Q(j,3)*b+3*Q(j,2)*i*d+3*j*i*i*f+Q(i,3)*h}},Ha=e(function(a,b,c,d,e,f,g,h){var i,j=e-2*c+a-(g-2*e+c),k=2*(c-a)-2*(e-c),l=a-c,m=(-k+M.sqrt(k*k-4*j*l))/2/j,n=(-k-M.sqrt(k*k-4*j*l))/2/j,o=[b,h],p=[a,g];return P(m)>\"1e12\"&&(m=.5),P(n)>\"1e12\"&&(n=.5),m>0&&1>m&&(i=Ga(a,b,c,d,e,f,g,h,m),p.push(i.x),o.push(i.y)),n>0&&1>n&&(i=Ga(a,b,c,d,e,f,g,h,n),p.push(i.x),o.push(i.y)),j=f-2*d+b-(h-2*f+d),k=2*(d-b)-2*(f-d),l=b-d,m=(-k+M.sqrt(k*k-4*j*l))/2/j,n=(-k-M.sqrt(k*k-4*j*l))/2/j,P(m)>\"1e12\"&&(m=.5),P(n)>\"1e12\"&&(n=.5),m>0&&1>m&&(i=Ga(a,b,c,d,e,f,g,h,m),p.push(i.x),o.push(i.y)),n>0&&1>n&&(i=Ga(a,b,c,d,e,f,g,h,n),p.push(i.x),o.push(i.y)),{min:{x:O[C](0,p),y:O[C](0,o)},max:{x:N[C](0,p),y:N[C](0,o)}}}),Ia=b._path2curve=e(function(a,b){var c=!b&&ya(a);if(!b&&c.curve)return Aa(c.curve);for(var d=Ca(a),e=b&&Ca(b),f={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},g={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},h=(function(a,b,c){var d,e,f={T:1,Q:1};if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];switch(!(a[0]in f)&&(b.qx=b.qy=null),a[0]){case\"M\":b.X=a[1],b.Y=a[2];break;case\"A\":a=[\"C\"][D](Fa[C](0,[b.x,b.y][D](a.slice(1))));break;case\"S\":\"C\"==c||\"S\"==c?(d=2*b.x-b.bx,e=2*b.y-b.by):(d=b.x,e=b.y),a=[\"C\",d,e][D](a.slice(1));break;case\"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y),a=[\"C\"][D](Ea(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case\"Q\":b.qx=a[1],b.qy=a[2],a=[\"C\"][D](Ea(b.x,b.y,a[1],a[2],a[3],a[4]));break;case\"L\":a=[\"C\"][D](Da(b.x,b.y,a[1],a[2]));break;case\"H\":a=[\"C\"][D](Da(b.x,b.y,a[1],b.y));break;case\"V\":a=[\"C\"][D](Da(b.x,b.y,b.x,a[1]));break;case\"Z\":a=[\"C\"][D](Da(b.x,b.y,b.X,b.Y))}return a}),i=function(a,b){if(a[b].length>7){a[b].shift();for(var c=a[b];c.length;)k[b]=\"A\",e&&(l[b]=\"A\"),a.splice(b++,0,[\"C\"][D](c.splice(0,6)));a.splice(b,1),p=N(d.length,e&&e.length||0)}},j=function(a,b,c,f,g){a&&b&&\"M\"==a[g][0]&&\"M\"!=b[g][0]&&(b.splice(g,0,[\"M\",f.x,f.y]),c.bx=0,c.by=0,c.x=a[g][1],c.y=a[g][2],p=N(d.length,e&&e.length||0))},k=[],l=[],m=\"\",n=\"\",o=0,p=N(d.length,e&&e.length||0);p>o;o++){d[o]&&(m=d[o][0]),\"C\"!=m&&(k[o]=m,o&&(n=k[o-1])),d[o]=h(d[o],f,n),\"A\"!=k[o]&&\"C\"==m&&(k[o]=\"C\"),i(d,o),e&&(e[o]&&(m=e[o][0]),\"C\"!=m&&(l[o]=m,o&&(n=l[o-1])),e[o]=h(e[o],g,n),\"A\"!=l[o]&&\"C\"==m&&(l[o]=\"C\"),i(e,o)),j(d,e,f,g,o),j(e,d,g,f,o);var q=d[o],r=e&&e[o],s=q.length,t=e&&r.length;f.x=q[s-2],f.y=q[s-1],f.bx=$(q[s-4])||f.x,f.by=$(q[s-3])||f.y,g.bx=e&&($(r[t-4])||g.x),g.by=e&&($(r[t-3])||g.y),g.x=e&&r[t-2],g.y=e&&r[t-1]}return e||(c.curve=Aa(d)),e?[d,e]:d},null,Aa),Ja=(b._parseDots=e(function(a){for(var c=[],d=0,e=a.length;e>d;d++){var f={},g=a[d].match(/^([^:]*):?([\\d\\.]*)/);if(f.color=b.getRGB(g[1]),f.color.error)return null;f.opacity=f.color.opacity,f.color=f.color.hex,g[2]&&(f.offset=g[2]+\"%\"),c.push(f)}for(d=1,e=c.length-1;e>d;d++)if(!c[d].offset){for(var h=$(c[d-1].offset||0),i=0,j=d+1;e>j;j++)if(c[j].offset){i=c[j].offset;break}i||(i=100,j=e),i=$(i);for(var k=(i-h)/(j-d+1);j>d;d++)h+=k,c[d].offset=h+\"%\"}return c}),b._tear=function(a,b){a==b.top&&(b.top=a.prev),a==b.bottom&&(b.bottom=a.next),a.next&&(a.next.prev=a.prev),a.prev&&(a.prev.next=a.next)}),Ka=(b._tofront=function(a,b){b.top!==a&&(Ja(a,b),a.next=null,a.prev=b.top,b.top.next=a,b.top=a)},b._toback=function(a,b){b.bottom!==a&&(Ja(a,b),a.next=b.bottom,a.prev=null,b.bottom.prev=a,b.bottom=a)},b._insertafter=function(a,b,c){Ja(a,c),b==c.top&&(c.top=a),b.next&&(b.next.prev=a),a.next=b.next,a.prev=b,b.next=a},b._insertbefore=function(a,b,c){Ja(a,c),b==c.bottom&&(c.bottom=a),b.prev&&(b.prev.next=a),a.prev=b.prev,b.prev=a,a.next=b},b.toMatrix=function(a,b){var c=za(a),d={_:{transform:F},getBBox:function(){return c}};return La(d,b),d.matrix}),La=(b.transformPath=function(a,b){return pa(a,Ka(a,b))},b._extractTransform=function(a,c){if(null==c)return a._.transform;c=H(c).replace(/\\.{3}|\\u2026/g,a._.transform||F);var d=b.parseTransformString(c),e=0,f=0,g=0,h=1,i=1,j=a._,k=new n;if(j.transform=d||[],d)for(var l=0,m=d.length;m>l;l++){var o,p,q,r,s,t=d[l],u=t.length,v=H(t[0]).toLowerCase(),w=t[0]!=v,x=w?k.invert():0;\"t\"==v&&3==u?w?(o=x.x(0,0),p=x.y(0,0),q=x.x(t[1],t[2]),r=x.y(t[1],t[2]),k.translate(q-o,r-p)):k.translate(t[1],t[2]):\"r\"==v?2==u?(s=s||a.getBBox(1),k.rotate(t[1],s.x+s.width/2,s.y+s.height/2),e+=t[1]):4==u&&(w?(q=x.x(t[2],t[3]),r=x.y(t[2],t[3]),k.rotate(t[1],q,r)):k.rotate(t[1],t[2],t[3]),e+=t[1]):\"s\"==v?2==u||3==u?(s=s||a.getBBox(1),k.scale(t[1],t[u-1],s.x+s.width/2,s.y+s.height/2),h*=t[1],i*=t[u-1]):5==u&&(w?(q=x.x(t[3],t[4]),r=x.y(t[3],t[4]),k.scale(t[1],t[2],q,r)):k.scale(t[1],t[2],t[3],t[4]),h*=t[1],i*=t[2]):\"m\"==v&&7==u&&k.add(t[1],t[2],t[3],t[4],t[5],t[6]),j.dirtyT=1,a.matrix=k}a.matrix=k,j.sx=h,j.sy=i,j.deg=e,j.dx=f=k.e,j.dy=g=k.f,1==h&&1==i&&!e&&j.bbox?(j.bbox.x+=+f,j.bbox.y+=+g):j.dirtyT=1}),Ma=function(a){var b=a[0];switch(b.toLowerCase()){case\"t\":return[b,0,0];case\"m\":return[b,1,0,0,1,0,0];case\"r\":return 4==a.length?[b,0,a[2],a[3]]:[b,0];case\"s\":return 5==a.length?[b,1,1,a[3],a[4]]:3==a.length?[b,1,1]:[b,1]}},Na=b._equaliseTransform=function(a,c){\nc=H(c).replace(/\\.{3}|\\u2026/g,a),a=b.parseTransformString(a)||[],c=b.parseTransformString(c)||[];for(var d,e,f,g,h=N(a.length,c.length),i=[],j=[],k=0;h>k;k++){if(f=a[k]||Ma(c[k]),g=c[k]||Ma(f),f[0]!=g[0]||\"r\"==f[0].toLowerCase()&&(f[2]!=g[2]||f[3]!=g[3])||\"s\"==f[0].toLowerCase()&&(f[3]!=g[3]||f[4]!=g[4]))return;for(i[k]=[],j[k]=[],d=0,e=N(f.length,g.length);e>d;d++)d in f&&(i[k][d]=f[d]),d in g&&(j[k][d]=g[d])}return{from:i,to:j}};b._getContainer=function(a,c,d,e){var f;return f=null!=e||b.is(a,\"object\")?a:z.doc.getElementById(a),null!=f?f.tagName?null==c?{container:f,width:f.style.pixelWidth||f.offsetWidth,height:f.style.pixelHeight||f.offsetHeight}:{container:f,width:c,height:d}:{container:1,x:a,y:c,width:d,height:e}:void 0},b.pathToRelative=Ba,b._engine={},b.path2curve=Ia,b.matrix=function(a,b,c,d,e,f){return new n(a,b,c,d,e,f)},function(a){function c(a){return a[0]*a[0]+a[1]*a[1]}function d(a){var b=M.sqrt(c(a));a[0]&&(a[0]/=b),a[1]&&(a[1]/=b)}a.add=function(a,b,c,d,e,f){var g,h,i,j,k=[[],[],[]],l=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],m=[[a,c,e],[b,d,f],[0,0,1]];for(a&&a instanceof n&&(m=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1]]),g=0;3>g;g++)for(h=0;3>h;h++){for(j=0,i=0;3>i;i++)j+=l[g][i]*m[i][h];k[g][h]=j}this.a=k[0][0],this.b=k[1][0],this.c=k[0][1],this.d=k[1][1],this.e=k[0][2],this.f=k[1][2]},a.invert=function(){var a=this,b=a.a*a.d-a.b*a.c;return new n(a.d/b,-a.b/b,-a.c/b,a.a/b,(a.c*a.f-a.d*a.e)/b,(a.b*a.e-a.a*a.f)/b)},a.clone=function(){return new n(this.a,this.b,this.c,this.d,this.e,this.f)},a.translate=function(a,b){this.add(1,0,0,1,a,b)},a.scale=function(a,b,c,d){null==b&&(b=a),(c||d)&&this.add(1,0,0,1,c,d),this.add(a,0,0,b,0,0),(c||d)&&this.add(1,0,0,1,-c,-d)},a.rotate=function(a,c,d){a=b.rad(a),c=c||0,d=d||0;var e=+M.cos(a).toFixed(9),f=+M.sin(a).toFixed(9);this.add(e,f,-f,e,c,d),this.add(1,0,0,1,-c,-d)},a.x=function(a,b){return a*this.a+b*this.c+this.e},a.y=function(a,b){return a*this.b+b*this.d+this.f},a.get=function(a){return+this[H.fromCharCode(97+a)].toFixed(4)},a.toString=function(){return b.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},a.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},a.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},a.split=function(){var a={};a.dx=this.e,a.dy=this.f;var e=[[this.a,this.c],[this.b,this.d]];a.scalex=M.sqrt(c(e[0])),d(e[0]),a.shear=e[0][0]*e[1][0]+e[0][1]*e[1][1],e[1]=[e[1][0]-e[0][0]*a.shear,e[1][1]-e[0][1]*a.shear],a.scaley=M.sqrt(c(e[1])),d(e[1]),a.shear/=a.scaley;var f=-e[0][1],g=e[1][1];return 0>g?(a.rotate=b.deg(M.acos(g)),0>f&&(a.rotate=360-a.rotate)):a.rotate=b.deg(M.asin(f)),a.isSimple=!(+a.shear.toFixed(9)||a.scalex.toFixed(9)!=a.scaley.toFixed(9)&&a.rotate),a.isSuperSimple=!+a.shear.toFixed(9)&&a.scalex.toFixed(9)==a.scaley.toFixed(9)&&!a.rotate,a.noRotation=!+a.shear.toFixed(9)&&!a.rotate,a},a.toTransformString=function(a){var b=a||this[I]();return b.isSimple?(b.scalex=+b.scalex.toFixed(4),b.scaley=+b.scaley.toFixed(4),b.rotate=+b.rotate.toFixed(4),(b.dx||b.dy?\"t\"+[b.dx,b.dy]:F)+(1!=b.scalex||1!=b.scaley?\"s\"+[b.scalex,b.scaley,0,0]:F)+(b.rotate?\"r\"+[b.rotate,0,0]:F)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(n.prototype);for(var Oa=function(){this.returnValue=!1},Pa=function(){return this.originalEvent.preventDefault()},Qa=function(){this.cancelBubble=!0},Ra=function(){return this.originalEvent.stopPropagation()},Sa=function(a){var b=z.doc.documentElement.scrollTop||z.doc.body.scrollTop,c=z.doc.documentElement.scrollLeft||z.doc.body.scrollLeft;return{x:a.clientX+c,y:a.clientY+b}},Ta=function(){return z.doc.addEventListener?function(a,b,c,d){var e=function(a){var b=Sa(a);return c.call(d,a,b.x,b.y)};if(a.addEventListener(b,e,!1),E&&K[b]){var f=function(b){for(var e=Sa(b),f=b,g=0,h=b.targetTouches&&b.targetTouches.length;h>g;g++)if(b.targetTouches[g].target==a){b=b.targetTouches[g],b.originalEvent=f,b.preventDefault=Pa,b.stopPropagation=Ra;break}return c.call(d,b,e.x,e.y)};a.addEventListener(K[b],f,!1)}return function(){return a.removeEventListener(b,e,!1),E&&K[b]&&a.removeEventListener(K[b],f,!1),!0}}:z.doc.attachEvent?function(a,b,c,d){var e=function(a){a=a||z.win.event;var b=z.doc.documentElement.scrollTop||z.doc.body.scrollTop,e=z.doc.documentElement.scrollLeft||z.doc.body.scrollLeft,f=a.clientX+e,g=a.clientY+b;return a.preventDefault=a.preventDefault||Oa,a.stopPropagation=a.stopPropagation||Qa,c.call(d,a,f,g)};a.attachEvent(\"on\"+b,e);var f=function(){return a.detachEvent(\"on\"+b,e),!0};return f}:void 0}(),Ua=[],Va=function(b){for(var c,d=b.clientX,e=b.clientY,f=z.doc.documentElement.scrollTop||z.doc.body.scrollTop,g=z.doc.documentElement.scrollLeft||z.doc.body.scrollLeft,h=Ua.length;h--;){if(c=Ua[h],E&&b.touches){for(var i,j=b.touches.length;j--;)if(i=b.touches[j],i.identifier==c.el._drag.id){d=i.clientX,e=i.clientY,(b.originalEvent?b.originalEvent:b).preventDefault();break}}else b.preventDefault();var k,l=c.el.node,m=l.nextSibling,n=l.parentNode,o=l.style.display;z.win.opera&&n.removeChild(l),l.style.display=\"none\",k=c.el.paper.getElementByPoint(d,e),l.style.display=o,z.win.opera&&(m?n.insertBefore(l,m):n.appendChild(l)),k&&a(\"raphael.drag.over.\"+c.el.id,c.el,k),d+=g,e+=f,a(\"raphael.drag.move.\"+c.el.id,c.move_scope||c.el,d-c.el._drag.x,e-c.el._drag.y,d,e,b)}},Wa=function(c){b.unmousemove(Va).unmouseup(Wa);for(var d,e=Ua.length;e--;)d=Ua[e],d.el._drag={},a(\"raphael.drag.end.\"+d.el.id,d.end_scope||d.start_scope||d.move_scope||d.el,c);Ua=[]},Xa=b.el={},Ya=J.length;Ya--;)!function(a){b[a]=Xa[a]=function(c,d){return b.is(c,\"function\")&&(this.events=this.events||[],this.events.push({name:a,f:c,unbind:Ta(this.shape||this.node||z.doc,a,c,d||this)})),this},b[\"un\"+a]=Xa[\"un\"+a]=function(c){for(var d=this.events||[],e=d.length;e--;)d[e].name!=a||!b.is(c,\"undefined\")&&d[e].f!=c||(d[e].unbind(),d.splice(e,1),!d.length&&delete this.events);return this}}(J[Ya]);Xa.data=function(c,d){var e=ja[this.id]=ja[this.id]||{};if(0==arguments.length)return e;if(1==arguments.length){if(b.is(c,\"object\")){for(var f in c)c[y](f)&&this.data(f,c[f]);return this}return a(\"raphael.data.get.\"+this.id,this,e[c],c),e[c]}return e[c]=d,a(\"raphael.data.set.\"+this.id,this,d,c),this},Xa.removeData=function(a){return null==a?ja[this.id]={}:ja[this.id]&&delete ja[this.id][a],this},Xa.getData=function(){return c(ja[this.id]||{})},Xa.hover=function(a,b,c,d){return this.mouseover(a,c).mouseout(b,d||c)},Xa.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var Za=[];Xa.drag=function(c,d,e,f,g,h){function i(i){(i.originalEvent||i).preventDefault();var j=i.clientX,k=i.clientY,l=z.doc.documentElement.scrollTop||z.doc.body.scrollTop,m=z.doc.documentElement.scrollLeft||z.doc.body.scrollLeft;if(this._drag.id=i.identifier,E&&i.touches)for(var n,o=i.touches.length;o--;)if(n=i.touches[o],this._drag.id=n.identifier,n.identifier==this._drag.id){j=n.clientX,k=n.clientY;break}this._drag.x=j+m,this._drag.y=k+l,!Ua.length&&b.mousemove(Va).mouseup(Wa),Ua.push({el:this,move_scope:f,start_scope:g,end_scope:h}),d&&a.on(\"raphael.drag.start.\"+this.id,d),c&&a.on(\"raphael.drag.move.\"+this.id,c),e&&a.on(\"raphael.drag.end.\"+this.id,e),a(\"raphael.drag.start.\"+this.id,g||f||this,i.clientX+m,i.clientY+l,i)}return this._drag={},Za.push({el:this,start:i}),this.mousedown(i),this},Xa.onDragOver=function(b){b?a.on(\"raphael.drag.over.\"+this.id,b):a.unbind(\"raphael.drag.over.\"+this.id)},Xa.undrag=function(){for(var c=Za.length;c--;)Za[c].el==this&&(this.unmousedown(Za[c].start),Za.splice(c,1),a.unbind(\"raphael.drag.*.\"+this.id));!Za.length&&b.unmousemove(Va).unmouseup(Wa),Ua=[]},u.circle=function(a,c,d){var e=b._engine.circle(this,a||0,c||0,d||0);return this.__set__&&this.__set__.push(e),e},u.rect=function(a,c,d,e,f){var g=b._engine.rect(this,a||0,c||0,d||0,e||0,f||0);return this.__set__&&this.__set__.push(g),g},u.ellipse=function(a,c,d,e){var f=b._engine.ellipse(this,a||0,c||0,d||0,e||0);return this.__set__&&this.__set__.push(f),f},u.path=function(a){a&&!b.is(a,T)&&!b.is(a[0],U)&&(a+=F);var c=b._engine.path(b.format[C](b,arguments),this);return this.__set__&&this.__set__.push(c),c},u.image=function(a,c,d,e,f){var g=b._engine.image(this,a||\"about:blank\",c||0,d||0,e||0,f||0);return this.__set__&&this.__set__.push(g),g},u.text=function(a,c,d){var e=b._engine.text(this,a||0,c||0,H(d));return this.__set__&&this.__set__.push(e),e},u.set=function(a){!b.is(a,\"array\")&&(a=Array.prototype.splice.call(arguments,0,arguments.length));var c=new jb(a);return this.__set__&&this.__set__.push(c),c.paper=this,c.type=\"set\",c},u.setStart=function(a){this.__set__=a||this.set()},u.setFinish=function(a){var b=this.__set__;return delete this.__set__,b},u.getSize=function(){var a=this.canvas.parentNode;return{width:a.offsetWidth,height:a.offsetHeight}},u.setSize=function(a,c){return b._engine.setSize.call(this,a,c)},u.setViewBox=function(a,c,d,e,f){return b._engine.setViewBox.call(this,a,c,d,e,f)},u.top=u.bottom=null,u.raphael=b;var $a=function(a){var b=a.getBoundingClientRect(),c=a.ownerDocument,d=c.body,e=c.documentElement,f=e.clientTop||d.clientTop||0,g=e.clientLeft||d.clientLeft||0,h=b.top+(z.win.pageYOffset||e.scrollTop||d.scrollTop)-f,i=b.left+(z.win.pageXOffset||e.scrollLeft||d.scrollLeft)-g;return{y:h,x:i}};u.getElementByPoint=function(a,b){var c=this,d=c.canvas,e=z.doc.elementFromPoint(a,b);if(z.win.opera&&\"svg\"==e.tagName){var f=$a(d),g=d.createSVGRect();g.x=a-f.x,g.y=b-f.y,g.width=g.height=1;var h=d.getIntersectionList(g,null);h.length&&(e=h[h.length-1])}if(!e)return null;for(;e.parentNode&&e!=d.parentNode&&!e.raphael;)e=e.parentNode;return e==c.canvas.parentNode&&(e=d),e=e&&e.raphael?c.getById(e.raphaelid):null},u.getElementsByBBox=function(a){var c=this.set();return this.forEach(function(d){b.isBBoxIntersect(d.getBBox(),a)&&c.push(d)}),c},u.getById=function(a){for(var b=this.bottom;b;){if(b.id==a)return b;b=b.next}return null},u.forEach=function(a,b){for(var c=this.bottom;c;){if(a.call(b,c)===!1)return this;c=c.next}return this},u.getElementsByPoint=function(a,b){var c=this.set();return this.forEach(function(d){d.isPointInside(a,b)&&c.push(d)}),c},Xa.isPointInside=function(a,c){var d=this.realPath=oa[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(d=b.transformPath(d,this.attr(\"transform\"))),b.isPointInsidePath(d,a,c)},Xa.getBBox=function(a){if(this.removed)return{};var b=this._;return a?((b.dirty||!b.bboxwt)&&(this.realPath=oa[this.type](this),b.bboxwt=za(this.realPath),b.bboxwt.toString=o,b.dirty=0),b.bboxwt):((b.dirty||b.dirtyT||!b.bbox)&&((b.dirty||!this.realPath)&&(b.bboxwt=0,this.realPath=oa[this.type](this)),b.bbox=za(pa(this.realPath,this.matrix)),b.bbox.toString=o,b.dirty=b.dirtyT=0),b.bbox)},Xa.clone=function(){if(this.removed)return null;var a=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(a),a},Xa.glow=function(a){if(\"text\"==this.type)return null;a=a||{};var b={width:(a.width||10)+(+this.attr(\"stroke-width\")||1),fill:a.fill||!1,opacity:null==a.opacity?.5:a.opacity,offsetx:a.offsetx||0,offsety:a.offsety||0,color:a.color||\"#000\"},c=b.width/2,d=this.paper,e=d.set(),f=this.realPath||oa[this.type](this);f=this.matrix?pa(f,this.matrix):f;for(var g=1;c+1>g;g++)e.push(d.path(f).attr({stroke:b.color,fill:b.fill?b.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(b.width/c*g).toFixed(3),opacity:+(b.opacity/c).toFixed(3)}));return e.insertBefore(this).translate(b.offsetx,b.offsety)};var _a=function(a,c,d,e,f,g,h,k,l){return null==l?i(a,c,d,e,f,g,h,k):b.findDotsAtSegment(a,c,d,e,f,g,h,k,j(a,c,d,e,f,g,h,k,l))},ab=function(a,c){return function(d,e,f){d=Ia(d);for(var g,h,i,j,k,l=\"\",m={},n=0,o=0,p=d.length;p>o;o++){if(i=d[o],\"M\"==i[0])g=+i[1],h=+i[2];else{if(j=_a(g,h,i[1],i[2],i[3],i[4],i[5],i[6]),n+j>e){if(c&&!m.start){if(k=_a(g,h,i[1],i[2],i[3],i[4],i[5],i[6],e-n),l+=[\"C\"+k.start.x,k.start.y,k.m.x,k.m.y,k.x,k.y],f)return l;m.start=l,l=[\"M\"+k.x,k.y+\"C\"+k.n.x,k.n.y,k.end.x,k.end.y,i[5],i[6]].join(),n+=j,g=+i[5],h=+i[6];continue}if(!a&&!c)return k=_a(g,h,i[1],i[2],i[3],i[4],i[5],i[6],e-n),{x:k.x,y:k.y,alpha:k.alpha}}n+=j,g=+i[5],h=+i[6]}l+=i.shift()+i}return m.end=l,k=a?n:c?m:b.findDotsAtSegment(g,h,i[0],i[1],i[2],i[3],i[4],i[5],1),k.alpha&&(k={x:k.x,y:k.y,alpha:k.alpha}),k}},bb=ab(1),cb=ab(),db=ab(0,1);b.getTotalLength=bb,b.getPointAtLength=cb,b.getSubpath=function(a,b,c){if(this.getTotalLength(a)-c<1e-6)return db(a,b).end;var d=db(a,c,1);return b?db(d,b).end:d},Xa.getTotalLength=function(){var a=this.getPath();if(a)return this.node.getTotalLength?this.node.getTotalLength():bb(a)},Xa.getPointAtLength=function(a){var b=this.getPath();if(b)return cb(b,a)},Xa.getPath=function(){var a,c=b._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return c&&(a=c(this)),a},Xa.getSubpath=function(a,c){var d=this.getPath();if(d)return b.getSubpath(d,a,c)};var eb=b.easing_formulas={linear:function(a){return a},\"<\":function(a){return Q(a,1.7)},\">\":function(a){return Q(a,.48)},\"<>\":function(a){var b=.48-a/1.04,c=M.sqrt(.1734+b*b),d=c-b,e=Q(P(d),1/3)*(0>d?-1:1),f=-c-b,g=Q(P(f),1/3)*(0>f?-1:1),h=e+g+.5;return 3*(1-h)*h*h+h*h*h},backIn:function(a){var b=1.70158;return a*a*((b+1)*a-b)},backOut:function(a){a-=1;var b=1.70158;return a*a*((b+1)*a+b)+1},elastic:function(a){return a==!!a?a:Q(2,-10*a)*M.sin(2*(a-.075)*R/.3)+1},bounce:function(a){var b,c=7.5625,d=2.75;return 1/d>a?b=c*a*a:2/d>a?(a-=1.5/d,b=c*a*a+.75):2.5/d>a?(a-=2.25/d,b=c*a*a+.9375):(a-=2.625/d,b=c*a*a+.984375),b}};eb.easeIn=eb[\"ease-in\"]=eb[\"<\"],eb.easeOut=eb[\"ease-out\"]=eb[\">\"],eb.easeInOut=eb[\"ease-in-out\"]=eb[\"<>\"],eb[\"back-in\"]=eb.backIn,eb[\"back-out\"]=eb.backOut;var fb=[],gb=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a){setTimeout(a,16)},hb=function(){for(var c=+new Date,d=0;d<fb.length;d++){var e=fb[d];if(!e.el.removed&&!e.paused){var f,g,h=c-e.start,i=e.ms,j=e.easing,k=e.from,l=e.diff,m=e.to,n=(e.t,e.el),o={},p={};if(e.initstatus?(h=(e.initstatus*e.anim.top-e.prev)/(e.percent-e.prev)*i,e.status=e.initstatus,delete e.initstatus,e.stop&&fb.splice(d--,1)):e.status=(e.prev+(e.percent-e.prev)*(h/i))/e.anim.top,!(0>h))if(i>h){var q=j(h/i);for(var s in k)if(k[y](s)){switch(ca[s]){case S:f=+k[s]+q*i*l[s];break;case\"colour\":f=\"rgb(\"+[ib(Z(k[s].r+q*i*l[s].r)),ib(Z(k[s].g+q*i*l[s].g)),ib(Z(k[s].b+q*i*l[s].b))].join(\",\")+\")\";break;case\"path\":f=[];for(var t=0,u=k[s].length;u>t;t++){f[t]=[k[s][t][0]];for(var v=1,w=k[s][t].length;w>v;v++)f[t][v]=+k[s][t][v]+q*i*l[s][t][v];f[t]=f[t].join(G)}f=f.join(G);break;case\"transform\":if(l[s].real)for(f=[],t=0,u=k[s].length;u>t;t++)for(f[t]=[k[s][t][0]],v=1,w=k[s][t].length;w>v;v++)f[t][v]=k[s][t][v]+q*i*l[s][t][v];else{var x=function(a){return+k[s][a]+q*i*l[s][a]};f=[[\"m\",x(0),x(1),x(2),x(3),x(4),x(5)]]}break;case\"csv\":if(\"clip-rect\"==s)for(f=[],t=4;t--;)f[t]=+k[s][t]+q*i*l[s][t];break;default:var z=[][D](k[s]);for(f=[],t=n.paper.customAttributes[s].length;t--;)f[t]=+z[t]+q*i*l[s][t]}o[s]=f}n.attr(o),function(b,c,d){setTimeout(function(){a(\"raphael.anim.frame.\"+b,c,d)})}(n.id,n,e.anim)}else{if(function(c,d,e){setTimeout(function(){a(\"raphael.anim.frame.\"+d.id,d,e),a(\"raphael.anim.finish.\"+d.id,d,e),b.is(c,\"function\")&&c.call(d)})}(e.callback,n,e.anim),n.attr(m),fb.splice(d--,1),e.repeat>1&&!e.next){for(g in m)m[y](g)&&(p[g]=e.totalOrigin[g]);e.el.attr(p),r(e.anim,e.el,e.anim.percents[0],null,e.totalOrigin,e.repeat-1)}e.next&&!e.stop&&r(e.anim,e.el,e.next,null,e.totalOrigin,e.repeat)}}}fb.length&&gb(hb)},ib=function(a){return a>255?255:0>a?0:a};Xa.animateWith=function(a,c,d,e,f,g){var h=this;if(h.removed)return g&&g.call(h),h;var i=d instanceof q?d:b.animation(d,e,f,g);r(i,h,i.percents[0],null,h.attr());for(var j=0,k=fb.length;k>j;j++)if(fb[j].anim==c&&fb[j].el==a){fb[k-1].start=fb[j].start;break}return h},Xa.onAnimation=function(b){return b?a.on(\"raphael.anim.frame.\"+this.id,b):a.unbind(\"raphael.anim.frame.\"+this.id),this},q.prototype.delay=function(a){var b=new q(this.anim,this.ms);return b.times=this.times,b.del=+a||0,b},q.prototype.repeat=function(a){var b=new q(this.anim,this.ms);return b.del=this.del,b.times=M.floor(N(a,0))||1,b},b.animation=function(a,c,d,e){if(a instanceof q)return a;(b.is(d,\"function\")||!d)&&(e=e||d||null,d=null),a=Object(a),c=+c||0;var f,g,h={};for(g in a)a[y](g)&&$(g)!=g&&$(g)+\"%\"!=g&&(f=!0,h[g]=a[g]);if(f)return d&&(h.easing=d),e&&(h.callback=e),new q({100:h},c);if(e){var i=0;for(var j in a){var k=_(j);a[y](j)&&k>i&&(i=k)}i+=\"%\",!a[i].callback&&(a[i].callback=e)}return new q(a,c)},Xa.animate=function(a,c,d,e){var f=this;if(f.removed)return e&&e.call(f),f;var g=a instanceof q?a:b.animation(a,c,d,e);return r(g,f,g.percents[0],null,f.attr()),f},Xa.setTime=function(a,b){return a&&null!=b&&this.status(a,O(b,a.ms)/a.ms),this},Xa.status=function(a,b){var c,d,e=[],f=0;if(null!=b)return r(a,this,-1,O(b,1)),this;for(c=fb.length;c>f;f++)if(d=fb[f],d.el.id==this.id&&(!a||d.anim==a)){if(a)return d.status;e.push({anim:d.anim,status:d.status})}return a?0:e},Xa.pause=function(b){for(var c=0;c<fb.length;c++)fb[c].el.id!=this.id||b&&fb[c].anim!=b||a(\"raphael.anim.pause.\"+this.id,this,fb[c].anim)!==!1&&(fb[c].paused=!0);return this},Xa.resume=function(b){for(var c=0;c<fb.length;c++)if(fb[c].el.id==this.id&&(!b||fb[c].anim==b)){var d=fb[c];a(\"raphael.anim.resume.\"+this.id,this,d.anim)!==!1&&(delete d.paused,this.status(d.anim,d.status))}return this},Xa.stop=function(b){for(var c=0;c<fb.length;c++)fb[c].el.id!=this.id||b&&fb[c].anim!=b||a(\"raphael.anim.stop.\"+this.id,this,fb[c].anim)!==!1&&fb.splice(c--,1);return this},a.on(\"raphael.remove\",s),a.on(\"raphael.clear\",s),Xa.toString=function(){return\"Raphaël’s object\"};var jb=function(a){if(this.items=[],this.length=0,this.type=\"set\",a)for(var b=0,c=a.length;c>b;b++)!a[b]||a[b].constructor!=Xa.constructor&&a[b].constructor!=jb||(this[this.items.length]=this.items[this.items.length]=a[b],this.length++)},kb=jb.prototype;kb.push=function(){for(var a,b,c=0,d=arguments.length;d>c;c++)a=arguments[c],!a||a.constructor!=Xa.constructor&&a.constructor!=jb||(b=this.items.length,this[b]=this.items[b]=a,this.length++);return this},kb.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},kb.forEach=function(a,b){for(var c=0,d=this.items.length;d>c;c++)if(a.call(b,this.items[c],c)===!1)return this;return this};for(var lb in Xa)Xa[y](lb)&&(kb[lb]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a][C](c,b)})}}(lb));return kb.attr=function(a,c){if(a&&b.is(a,U)&&b.is(a[0],\"object\"))for(var d=0,e=a.length;e>d;d++)this.items[d].attr(a[d]);else for(var f=0,g=this.items.length;g>f;f++)this.items[f].attr(a,c);return this},kb.clear=function(){for(;this.length;)this.pop()},kb.splice=function(a,b,c){a=0>a?N(this.length+a,0):a,b=N(0,O(this.length-a,b));var d,e=[],f=[],g=[];for(d=2;d<arguments.length;d++)g.push(arguments[d]);for(d=0;b>d;d++)f.push(this[a+d]);for(;d<this.length-a;d++)e.push(this[a+d]);var h=g.length;for(d=0;d<h+e.length;d++)this.items[a+d]=this[a+d]=h>d?g[d]:e[d-h];for(d=this.items.length=this.length-=b-h;this[d];)delete this[d++];return new jb(f)},kb.exclude=function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]==a)return this.splice(b,1),!0},kb.animate=function(a,c,d,e){(b.is(d,\"function\")||!d)&&(e=d||null);var f,g,h=this.items.length,i=h,j=this;if(!h)return this;e&&(g=function(){!--h&&e.call(j)}),d=b.is(d,T)?d:g;var k=b.animation(a,c,d,g);for(f=this.items[--i].animate(k);i--;)this.items[i]&&!this.items[i].removed&&this.items[i].animateWith(f,k,k),this.items[i]&&!this.items[i].removed||h--;return this},kb.insertAfter=function(a){for(var b=this.items.length;b--;)this.items[b].insertAfter(a);return this},kb.getBBox=function(){for(var a=[],b=[],c=[],d=[],e=this.items.length;e--;)if(!this.items[e].removed){var f=this.items[e].getBBox();a.push(f.x),b.push(f.y),c.push(f.x+f.width),d.push(f.y+f.height)}return a=O[C](0,a),b=O[C](0,b),c=N[C](0,c),d=N[C](0,d),{x:a,y:b,x2:c,y2:d,width:c-a,height:d-b}},kb.clone=function(a){a=this.paper.set();for(var b=0,c=this.items.length;c>b;b++)a.push(this.items[b].clone());return a},kb.toString=function(){return\"Raphaël‘s set\"},kb.glow=function(a){var b=this.paper.set();return this.forEach(function(c,d){var e=c.glow(a);null!=e&&e.forEach(function(a,c){b.push(a)})}),b},kb.isPointInside=function(a,b){var c=!1;return this.forEach(function(d){return d.isPointInside(a,b)?(c=!0,!1):void 0}),c},b.registerFont=function(a){if(!a.face)return a;this.fonts=this.fonts||{};var b={w:a.w,face:{},glyphs:{}},c=a.face[\"font-family\"];for(var d in a.face)a.face[y](d)&&(b.face[d]=a.face[d]);if(this.fonts[c]?this.fonts[c].push(b):this.fonts[c]=[b],!a.svg){b.face[\"units-per-em\"]=_(a.face[\"units-per-em\"],10);for(var e in a.glyphs)if(a.glyphs[y](e)){var f=a.glyphs[e];if(b.glyphs[e]={w:f.w,k:{},d:f.d&&\"M\"+f.d.replace(/[mlcxtrv]/g,function(a){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[a]||\"M\"})+\"z\"},f.k)for(var g in f.k)f[y](g)&&(b.glyphs[e].k[g]=f.k[g])}}return a},u.getFont=function(a,c,d,e){if(e=e||\"normal\",d=d||\"normal\",c=+c||{normal:400,bold:700,lighter:300,bolder:800}[c]||400,b.fonts){var f=b.fonts[a];if(!f){var g=new RegExp(\"(^|\\\\s)\"+a.replace(/[^\\w\\d\\s+!~.:_-]/g,F)+\"(\\\\s|$)\",\"i\");for(var h in b.fonts)if(b.fonts[y](h)&&g.test(h)){f=b.fonts[h];break}}var i;if(f)for(var j=0,k=f.length;k>j&&(i=f[j],i.face[\"font-weight\"]!=c||i.face[\"font-style\"]!=d&&i.face[\"font-style\"]||i.face[\"font-stretch\"]!=e);j++);return i}},u.print=function(a,c,d,e,f,g,h,i){g=g||\"middle\",h=N(O(h||0,1),-1),i=N(O(i||1,3),1);var j,k=H(d)[I](F),l=0,m=0,n=F;if(b.is(e,\"string\")&&(e=this.getFont(e)),e){j=(f||16)/e.face[\"units-per-em\"];for(var o=e.face.bbox[I](v),p=+o[0],q=o[3]-o[1],r=0,s=+o[1]+(\"baseline\"==g?q+ +e.face.descent:q/2),t=0,u=k.length;u>t;t++){if(\"\\n\"==k[t])l=0,x=0,m=0,r+=q*i;else{var w=m&&e.glyphs[k[t-1]]||{},x=e.glyphs[k[t]];l+=m?(w.w||e.w)+(w.k&&w.k[k[t]]||0)+e.w*h:0,m=1}x&&x.d&&(n+=b.transformPath(x.d,[\"t\",l*j,r*j,\"s\",j,j,p,s,\"t\",(a-p)/j,(c-s)/j]))}}return this.path(n).attr({fill:\"#000\",stroke:\"none\"})},u.add=function(a){if(b.is(a,\"array\"))for(var c,d=this.set(),e=0,f=a.length;f>e;e++)c=a[e]||{},w[y](c.type)&&d.push(this[c.type]().attr(c));return d},b.format=function(a,c){var d=b.is(c,U)?[0][D](c):arguments;return a&&b.is(a,T)&&d.length-1&&(a=a.replace(x,function(a,b){return null==d[++b]?F:d[b]})),a||F},b.fullfill=function(){var a=/\\{([^\\}]+)\\}/g,b=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,c=function(a,c,d){var e=d;return c.replace(b,function(a,b,c,d,f){b=b||d,e&&(b in e&&(e=e[b]),\"function\"==typeof e&&f&&(e=e()))}),e=(null==e||e==d?a:e)+\"\"};return function(b,d){return String(b).replace(a,function(a,b){return c(a,b,d)})}}(),b.ninja=function(){return A.was?z.win.Raphael=A.is:delete Raphael,b},b.st=kb,a.on(\"raphael.DOMload\",function(){t=!0}),function(a,c,d){function e(){/in/.test(a.readyState)?setTimeout(e,9):b.eve(\"raphael.DOMload\")}null==a.readyState&&a.addEventListener&&(a.addEventListener(c,d=function(){a.removeEventListener(c,d,!1),a.readyState=\"complete\"},!1),a.readyState=\"loading\"),e()}(document,\"DOMContentLoaded\"),b}),function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__], __WEBPACK_LOCAL_MODULE_2__ = (function(a){return b(a)}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__))):b(\"object\"==typeof exports?require(\"./raphael.core\"):a.Raphael)}(this,function(a){if(!a||a.svg){var b=\"hasOwnProperty\",c=String,d=parseFloat,e=parseInt,f=Math,g=f.max,h=f.abs,i=f.pow,j=/[, ]+/,k=a.eve,l=\"\",m=\" \",n=\"http://www.w3.org/1999/xlink\",o={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},p={};a.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var q=function(d,e){if(e){\"string\"==typeof d&&(d=q(d));for(var f in e)e[b](f)&&(\"xlink:\"==f.substring(0,6)?d.setAttributeNS(n,f.substring(6),c(e[f])):d.setAttribute(f,c(e[f])))}else d=a._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",d),d.style&&(d.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return d},r=function(b,e){var j=\"linear\",k=b.id+e,m=.5,n=.5,o=b.node,p=b.paper,r=o.style,s=a._g.doc.getElementById(k);if(!s){if(e=c(e).replace(a._radial_gradient,function(a,b,c){if(j=\"radial\",b&&c){m=d(b),n=d(c);var e=2*(n>.5)-1;i(m-.5,2)+i(n-.5,2)>.25&&(n=f.sqrt(.25-i(m-.5,2))*e+.5)&&.5!=n&&(n=n.toFixed(5)-1e-5*e)}return l}),e=e.split(/\\s*\\-\\s*/),\"linear\"==j){var t=e.shift();if(t=-d(t),isNaN(t))return null;var u=[0,0,f.cos(a.rad(t)),f.sin(a.rad(t))],v=1/(g(h(u[2]),h(u[3]))||1);u[2]*=v,u[3]*=v,u[2]<0&&(u[0]=-u[2],u[2]=0),u[3]<0&&(u[1]=-u[3],u[3]=0)}var w=a._parseDots(e);if(!w)return null;if(k=k.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),b.gradient&&k!=b.gradient.id&&(p.defs.removeChild(b.gradient),delete b.gradient),!b.gradient){s=q(j+\"Gradient\",{id:k}),b.gradient=s,q(s,\"radial\"==j?{fx:m,fy:n}:{x1:u[0],y1:u[1],x2:u[2],y2:u[3],gradientTransform:b.matrix.invert()}),p.defs.appendChild(s);for(var x=0,y=w.length;y>x;x++)s.appendChild(q(\"stop\",{offset:w[x].offset?w[x].offset:x?\"100%\":\"0%\",\"stop-color\":w[x].color||\"#fff\",\"stop-opacity\":isFinite(w[x].opacity)?w[x].opacity:1}))}}return q(o,{fill:\"url('\"+document.location.origin+document.location.pathname+\"#\"+k+\"')\",opacity:1,\"fill-opacity\":1}),r.fill=l,r.opacity=1,r.fillOpacity=1,1},s=function(a){var b=a.getBBox(1);q(a.pattern,{patternTransform:a.matrix.invert()+\" translate(\"+b.x+\",\"+b.y+\")\"})},t=function(d,e,f){if(\"path\"==d.type){for(var g,h,i,j,k,m=c(e).toLowerCase().split(\"-\"),n=d.paper,r=f?\"end\":\"start\",s=d.node,t=d.attrs,u=t[\"stroke-width\"],v=m.length,w=\"classic\",x=3,y=3,z=5;v--;)switch(m[v]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":w=m[v];break;case\"wide\":y=5;break;case\"narrow\":y=2;break;case\"long\":x=5;break;case\"short\":x=2}if(\"open\"==w?(x+=2,y+=2,z+=2,i=1,j=f?4:1,k={fill:\"none\",stroke:t.stroke}):(j=i=x/2,k={fill:t.stroke,stroke:\"none\"}),d._.arrows?f?(d._.arrows.endPath&&p[d._.arrows.endPath]--,d._.arrows.endMarker&&p[d._.arrows.endMarker]--):(d._.arrows.startPath&&p[d._.arrows.startPath]--,d._.arrows.startMarker&&p[d._.arrows.startMarker]--):d._.arrows={},\"none\"!=w){var A=\"raphael-marker-\"+w,B=\"raphael-marker-\"+r+w+x+y+\"-obj\"+d.id;a._g.doc.getElementById(A)?p[A]++:(n.defs.appendChild(q(q(\"path\"),{\"stroke-linecap\":\"round\",d:o[w],id:A})),p[A]=1);var C,D=a._g.doc.getElementById(B);D?(p[B]++,C=D.getElementsByTagName(\"use\")[0]):(D=q(q(\"marker\"),{id:B,markerHeight:y,markerWidth:x,orient:\"auto\",refX:j,refY:y/2}),C=q(q(\"use\"),{\"xlink:href\":\"#\"+A,transform:(f?\"rotate(180 \"+x/2+\" \"+y/2+\") \":l)+\"scale(\"+x/z+\",\"+y/z+\")\",\"stroke-width\":(1/((x/z+y/z)/2)).toFixed(4)}),D.appendChild(C),n.defs.appendChild(D),p[B]=1),q(C,k);var E=i*(\"diamond\"!=w&&\"oval\"!=w);f?(g=d._.arrows.startdx*u||0,h=a.getTotalLength(t.path)-E*u):(g=E*u,h=a.getTotalLength(t.path)-(d._.arrows.enddx*u||0)),k={},k[\"marker-\"+r]=\"url(#\"+B+\")\",(h||g)&&(k.d=a.getSubpath(t.path,g,h)),q(s,k),d._.arrows[r+\"Path\"]=A,d._.arrows[r+\"Marker\"]=B,d._.arrows[r+\"dx\"]=E,d._.arrows[r+\"Type\"]=w,d._.arrows[r+\"String\"]=e}else f?(g=d._.arrows.startdx*u||0,h=a.getTotalLength(t.path)-g):(g=0,h=a.getTotalLength(t.path)-(d._.arrows.enddx*u||0)),d._.arrows[r+\"Path\"]&&q(s,{d:a.getSubpath(t.path,g,h)}),delete d._.arrows[r+\"Path\"],delete d._.arrows[r+\"Marker\"],delete d._.arrows[r+\"dx\"],delete d._.arrows[r+\"Type\"],delete d._.arrows[r+\"String\"];for(k in p)if(p[b](k)&&!p[k]){var F=a._g.doc.getElementById(k);F&&F.parentNode.removeChild(F)}}},u={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},v=function(a,b,d){if(b=u[c(b).toLowerCase()]){for(var e=a.attrs[\"stroke-width\"]||\"1\",f={round:e,square:e,butt:0}[a.attrs[\"stroke-linecap\"]||d[\"stroke-linecap\"]]||0,g=[],h=b.length;h--;)g[h]=b[h]*e+(h%2?1:-1)*f;q(a.node,{\"stroke-dasharray\":g.join(\",\")})}else q(a.node,{\"stroke-dasharray\":\"none\"})},w=function(d,f){var i=d.node,k=d.attrs,m=i.style.visibility;i.style.visibility=\"hidden\";for(var o in f)if(f[b](o)){if(!a._availableAttrs[b](o))continue;var p=f[o];switch(k[o]=p,o){case\"blur\":d.blur(p);break;case\"title\":var u=i.getElementsByTagName(\"title\");if(u.length&&(u=u[0]))u.firstChild.nodeValue=p;else{u=q(\"title\");var w=a._g.doc.createTextNode(p);u.appendChild(w),i.appendChild(u)}break;case\"href\":case\"target\":var x=i.parentNode;if(\"a\"!=x.tagName.toLowerCase()){var z=q(\"a\");x.insertBefore(z,i),z.appendChild(i),x=z}\"target\"==o?x.setAttributeNS(n,\"show\",\"blank\"==p?\"new\":p):x.setAttributeNS(n,o,p);break;case\"cursor\":i.style.cursor=p;break;case\"transform\":d.transform(p);break;case\"arrow-start\":t(d,p);break;case\"arrow-end\":t(d,p,1);break;case\"clip-rect\":var A=c(p).split(j);if(4==A.length){d.clip&&d.clip.parentNode.parentNode.removeChild(d.clip.parentNode);var B=q(\"clipPath\"),C=q(\"rect\");B.id=a.createUUID(),q(C,{x:A[0],y:A[1],width:A[2],height:A[3]}),B.appendChild(C),d.paper.defs.appendChild(B),q(i,{\"clip-path\":\"url(#\"+B.id+\")\"}),d.clip=C}if(!p){var D=i.getAttribute(\"clip-path\");if(D){var E=a._g.doc.getElementById(D.replace(/(^url\\(#|\\)$)/g,l));E&&E.parentNode.removeChild(E),q(i,{\"clip-path\":l}),delete d.clip}}break;case\"path\":\"path\"==d.type&&(q(i,{d:p?k.path=a._pathToAbsolute(p):\"M0,0\"}),d._.dirty=1,d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1)));break;case\"width\":if(i.setAttribute(o,p),d._.dirty=1,!k.fx)break;o=\"x\",p=k.x;case\"x\":k.fx&&(p=-k.x-(k.width||0));case\"rx\":if(\"rx\"==o&&\"rect\"==d.type)break;case\"cx\":i.setAttribute(o,p),d.pattern&&s(d),d._.dirty=1;break;case\"height\":if(i.setAttribute(o,p),d._.dirty=1,!k.fy)break;o=\"y\",p=k.y;case\"y\":k.fy&&(p=-k.y-(k.height||0));case\"ry\":if(\"ry\"==o&&\"rect\"==d.type)break;case\"cy\":i.setAttribute(o,p),d.pattern&&s(d),d._.dirty=1;break;case\"r\":\"rect\"==d.type?q(i,{rx:p,ry:p}):i.setAttribute(o,p),d._.dirty=1;break;case\"src\":\"image\"==d.type&&i.setAttributeNS(n,\"href\",p);break;case\"stroke-width\":(1!=d._.sx||1!=d._.sy)&&(p/=g(h(d._.sx),h(d._.sy))||1),i.setAttribute(o,p),k[\"stroke-dasharray\"]&&v(d,k[\"stroke-dasharray\"],f),d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1));break;case\"stroke-dasharray\":v(d,p,f);break;case\"fill\":var F=c(p).match(a._ISURL);if(F){B=q(\"pattern\");var G=q(\"image\");B.id=a.createUUID(),q(B,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),q(G,{x:0,y:0,\"xlink:href\":F[1]}),B.appendChild(G),function(b){a._preload(F[1],function(){var a=this.offsetWidth,c=this.offsetHeight;q(b,{width:a,height:c}),q(G,{width:a,height:c})})}(B),d.paper.defs.appendChild(B),q(i,{fill:\"url(#\"+B.id+\")\"}),d.pattern=B,d.pattern&&s(d);break}var H=a.getRGB(p);if(H.error){if((\"circle\"==d.type||\"ellipse\"==d.type||\"r\"!=c(p).charAt())&&r(d,p)){if(\"opacity\"in k||\"fill-opacity\"in k){var I=a._g.doc.getElementById(i.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,l));if(I){var J=I.getElementsByTagName(\"stop\");q(J[J.length-1],{\"stop-opacity\":(\"opacity\"in k?k.opacity:1)*(\"fill-opacity\"in k?k[\"fill-opacity\"]:1)})}}k.gradient=p,k.fill=\"none\";break}}else delete f.gradient,delete k.gradient,!a.is(k.opacity,\"undefined\")&&a.is(f.opacity,\"undefined\")&&q(i,{opacity:k.opacity}),!a.is(k[\"fill-opacity\"],\"undefined\")&&a.is(f[\"fill-opacity\"],\"undefined\")&&q(i,{\"fill-opacity\":k[\"fill-opacity\"]});H[b](\"opacity\")&&q(i,{\"fill-opacity\":H.opacity>1?H.opacity/100:H.opacity});case\"stroke\":H=a.getRGB(p),i.setAttribute(o,H.hex),\"stroke\"==o&&H[b](\"opacity\")&&q(i,{\"stroke-opacity\":H.opacity>1?H.opacity/100:H.opacity}),\"stroke\"==o&&d._.arrows&&(\"startString\"in d._.arrows&&t(d,d._.arrows.startString),\"endString\"in d._.arrows&&t(d,d._.arrows.endString,1));break;case\"gradient\":(\"circle\"==d.type||\"ellipse\"==d.type||\"r\"!=c(p).charAt())&&r(d,p);\n\nbreak;case\"opacity\":k.gradient&&!k[b](\"stroke-opacity\")&&q(i,{\"stroke-opacity\":p>1?p/100:p});case\"fill-opacity\":if(k.gradient){I=a._g.doc.getElementById(i.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,l)),I&&(J=I.getElementsByTagName(\"stop\"),q(J[J.length-1],{\"stop-opacity\":p}));break}default:\"font-size\"==o&&(p=e(p,10)+\"px\");var K=o.replace(/(\\-.)/g,function(a){return a.substring(1).toUpperCase()});i.style[K]=p,d._.dirty=1,i.setAttribute(o,p)}}y(d,f),i.style.visibility=m},x=1.2,y=function(d,f){if(\"text\"==d.type&&(f[b](\"text\")||f[b](\"font\")||f[b](\"font-size\")||f[b](\"x\")||f[b](\"y\"))){var g=d.attrs,h=d.node,i=h.firstChild?e(a._g.doc.defaultView.getComputedStyle(h.firstChild,l).getPropertyValue(\"font-size\"),10):10;if(f[b](\"text\")){for(g.text=f.text;h.firstChild;)h.removeChild(h.firstChild);for(var j,k=c(f.text).split(\"\\n\"),m=[],n=0,o=k.length;o>n;n++)j=q(\"tspan\"),n&&q(j,{dy:i*x,x:g.x}),j.appendChild(a._g.doc.createTextNode(k[n])),h.appendChild(j),m[n]=j}else for(m=h.getElementsByTagName(\"tspan\"),n=0,o=m.length;o>n;n++)n?q(m[n],{dy:i*x,x:g.x}):q(m[0],{dy:0});q(h,{x:g.x,y:g.y}),d._.dirty=1;var p=d._getBBox(),r=g.y-(p.y+p.height/2);r&&a.is(r,\"finite\")&&q(m[0],{dy:r})}},z=function(a){return a.parentNode&&\"a\"===a.parentNode.tagName.toLowerCase()?a.parentNode:a},A=function(b,c){this[0]=this.node=b,b.raphael=!0,this.id=a._oid++,b.raphaelid=this.id,this.matrix=a.matrix(),this.realPath=null,this.paper=c,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!c.bottom&&(c.bottom=this),this.prev=c.top,c.top&&(c.top.next=this),c.top=this,this.next=null},B=a.el;A.prototype=B,B.constructor=A,a._engine.path=function(a,b){var c=q(\"path\");b.canvas&&b.canvas.appendChild(c);var d=new A(c,b);return d.type=\"path\",w(d,{fill:\"none\",stroke:\"#000\",path:a}),d},B.rotate=function(a,b,e){if(this.removed)return this;if(a=c(a).split(j),a.length-1&&(b=d(a[1]),e=d(a[2])),a=d(a[0]),null==e&&(b=e),null==b||null==e){var f=this.getBBox(1);b=f.x+f.width/2,e=f.y+f.height/2}return this.transform(this._.transform.concat([[\"r\",a,b,e]])),this},B.scale=function(a,b,e,f){if(this.removed)return this;if(a=c(a).split(j),a.length-1&&(b=d(a[1]),e=d(a[2]),f=d(a[3])),a=d(a[0]),null==b&&(b=a),null==f&&(e=f),null==e||null==f)var g=this.getBBox(1);return e=null==e?g.x+g.width/2:e,f=null==f?g.y+g.height/2:f,this.transform(this._.transform.concat([[\"s\",a,b,e,f]])),this},B.translate=function(a,b){return this.removed?this:(a=c(a).split(j),a.length-1&&(b=d(a[1])),a=d(a[0])||0,b=+b||0,this.transform(this._.transform.concat([[\"t\",a,b]])),this)},B.transform=function(c){var d=this._;if(null==c)return d.transform;if(a._extractTransform(this,c),this.clip&&q(this.clip,{transform:this.matrix.invert()}),this.pattern&&s(this),this.node&&q(this.node,{transform:this.matrix}),1!=d.sx||1!=d.sy){var e=this.attrs[b](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":e})}return d.transform=this.matrix.toTransformString(),this},B.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},B.show=function(){return this.removed||(this.node.style.display=\"\"),this},B.remove=function(){var b=z(this.node);if(!this.removed&&b.parentNode){var c=this.paper;c.__set__&&c.__set__.exclude(this),k.unbind(\"raphael.*.*.\"+this.id),this.gradient&&c.defs.removeChild(this.gradient),a._tear(this,c),b.parentNode.removeChild(b),this.removeData();for(var d in this)this[d]=\"function\"==typeof this[d]?a._removedFactory(d):null;this.removed=!0}},B._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var a=!0}var b,c=!1;this.paper.canvas.parentElement?b=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(b=this.paper.canvas.parentNode.style),b&&\"none\"==b.display&&(c=!0,b.display=\"\");var d={};try{d=this.node.getBBox()}catch(e){d={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{d=d||{},c&&(b.display=\"none\")}return a&&this.hide(),d},B.attr=function(c,d){if(this.removed)return this;if(null==c){var e={};for(var f in this.attrs)this.attrs[b](f)&&(e[f]=this.attrs[f]);return e.gradient&&\"none\"==e.fill&&(e.fill=e.gradient)&&delete e.gradient,e.transform=this._.transform,e}if(null==d&&a.is(c,\"string\")){if(\"fill\"==c&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==c)return this._.transform;for(var g=c.split(j),h={},i=0,l=g.length;l>i;i++)c=g[i],c in this.attrs?h[c]=this.attrs[c]:a.is(this.paper.customAttributes[c],\"function\")?h[c]=this.paper.customAttributes[c].def:h[c]=a._availableAttrs[c];return l-1?h:h[g[0]]}if(null==d&&a.is(c,\"array\")){for(h={},i=0,l=c.length;l>i;i++)h[c[i]]=this.attr(c[i]);return h}if(null!=d){var m={};m[c]=d}else null!=c&&a.is(c,\"object\")&&(m=c);for(var n in m)k(\"raphael.attr.\"+n+\".\"+this.id,this,m[n]);for(n in this.paper.customAttributes)if(this.paper.customAttributes[b](n)&&m[b](n)&&a.is(this.paper.customAttributes[n],\"function\")){var o=this.paper.customAttributes[n].apply(this,[].concat(m[n]));this.attrs[n]=m[n];for(var p in o)o[b](p)&&(m[p]=o[p])}return w(this,m),this},B.toFront=function(){if(this.removed)return this;var b=z(this.node);b.parentNode.appendChild(b);var c=this.paper;return c.top!=this&&a._tofront(this,c),this},B.toBack=function(){if(this.removed)return this;var b=z(this.node),c=b.parentNode;c.insertBefore(b,c.firstChild),a._toback(this,this.paper);this.paper;return this},B.insertAfter=function(b){if(this.removed||!b)return this;var c=z(this.node),d=z(b.node||b[b.length-1].node);return d.nextSibling?d.parentNode.insertBefore(c,d.nextSibling):d.parentNode.appendChild(c),a._insertafter(this,b,this.paper),this},B.insertBefore=function(b){if(this.removed||!b)return this;var c=z(this.node),d=z(b.node||b[0].node);return d.parentNode.insertBefore(c,d),a._insertbefore(this,b,this.paper),this},B.blur=function(b){var c=this;if(0!==+b){var d=q(\"filter\"),e=q(\"feGaussianBlur\");c.attrs.blur=b,d.id=a.createUUID(),q(e,{stdDeviation:+b||1.5}),d.appendChild(e),c.paper.defs.appendChild(d),c._blur=d,q(c.node,{filter:\"url(#\"+d.id+\")\"})}else c._blur&&(c._blur.parentNode.removeChild(c._blur),delete c._blur,delete c.attrs.blur),c.node.removeAttribute(\"filter\");return c},a._engine.circle=function(a,b,c,d){var e=q(\"circle\");a.canvas&&a.canvas.appendChild(e);var f=new A(e,a);return f.attrs={cx:b,cy:c,r:d,fill:\"none\",stroke:\"#000\"},f.type=\"circle\",q(e,f.attrs),f},a._engine.rect=function(a,b,c,d,e,f){var g=q(\"rect\");a.canvas&&a.canvas.appendChild(g);var h=new A(g,a);return h.attrs={x:b,y:c,width:d,height:e,rx:f||0,ry:f||0,fill:\"none\",stroke:\"#000\"},h.type=\"rect\",q(g,h.attrs),h},a._engine.ellipse=function(a,b,c,d,e){var f=q(\"ellipse\");a.canvas&&a.canvas.appendChild(f);var g=new A(f,a);return g.attrs={cx:b,cy:c,rx:d,ry:e,fill:\"none\",stroke:\"#000\"},g.type=\"ellipse\",q(f,g.attrs),g},a._engine.image=function(a,b,c,d,e,f){var g=q(\"image\");q(g,{x:c,y:d,width:e,height:f,preserveAspectRatio:\"none\"}),g.setAttributeNS(n,\"href\",b),a.canvas&&a.canvas.appendChild(g);var h=new A(g,a);return h.attrs={x:c,y:d,width:e,height:f,src:b},h.type=\"image\",h},a._engine.text=function(b,c,d,e){var f=q(\"text\");b.canvas&&b.canvas.appendChild(f);var g=new A(f,b);return g.attrs={x:c,y:d,\"text-anchor\":\"middle\",text:e,\"font-family\":a._availableAttrs[\"font-family\"],\"font-size\":a._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},g.type=\"text\",w(g,g.attrs),g},a._engine.setSize=function(a,b){return this.width=a||this.width,this.height=b||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},a._engine.create=function(){var b=a._getContainer.apply(0,arguments),c=b&&b.container,d=b.x,e=b.y,f=b.width,g=b.height;if(!c)throw new Error(\"SVG container not found.\");var h,i=q(\"svg\"),j=\"overflow:hidden;\";return d=d||0,e=e||0,f=f||512,g=g||342,q(i,{height:g,version:1.1,width:f,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==c?(i.style.cssText=j+\"position:absolute;left:\"+d+\"px;top:\"+e+\"px\",a._g.doc.body.appendChild(i),h=1):(i.style.cssText=j+\"position:relative\",c.firstChild?c.insertBefore(i,c.firstChild):c.appendChild(i)),c=new a._Paper,c.width=f,c.height=g,c.canvas=i,c.clear(),c._left=c._top=0,h&&(c.renderfix=function(){}),c.renderfix(),c},a._engine.setViewBox=function(a,b,c,d,e){k(\"raphael.setViewBox\",this,this._viewBox,[a,b,c,d,e]);var f,h,i=this.getSize(),j=g(c/i.width,d/i.height),l=this.top,n=e?\"xMidYMid meet\":\"xMinYMin\";for(null==a?(this._vbSize&&(j=1),delete this._vbSize,f=\"0 0 \"+this.width+m+this.height):(this._vbSize=j,f=a+m+b+m+c+m+d),q(this.canvas,{viewBox:f,preserveAspectRatio:n});j&&l;)h=\"stroke-width\"in l.attrs?l.attrs[\"stroke-width\"]:1,l.attr({\"stroke-width\":h}),l._.dirty=1,l._.dirtyT=1,l=l.prev;return this._viewBox=[a,b,c,d,!!e],this},a.prototype.renderfix=function(){var a,b=this.canvas,c=b.style;try{a=b.getScreenCTM()||b.createSVGMatrix()}catch(d){a=b.createSVGMatrix()}var e=-a.e%1,f=-a.f%1;(e||f)&&(e&&(this._left=(this._left+e)%1,c.left=this._left+\"px\"),f&&(this._top=(this._top+f)%1,c.top=this._top+\"px\"))},a.prototype.clear=function(){a.eve(\"raphael.clear\",this);for(var b=this.canvas;b.firstChild;)b.removeChild(b.firstChild);this.bottom=this.top=null,(this.desc=q(\"desc\")).appendChild(a._g.doc.createTextNode(\"Created with Raphaël \"+a.version)),b.appendChild(this.desc),b.appendChild(this.defs=q(\"defs\"))},a.prototype.remove=function(){k(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var b in this)this[b]=\"function\"==typeof this[b]?a._removedFactory(b):null};var C=a.st;for(var D in B)B[b](D)&&!C[b](D)&&(C[D]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a].apply(c,b)})}}(D))}}),function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__], __WEBPACK_LOCAL_MODULE_3__ = (function(a){return b(a)}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__))):b(\"object\"==typeof exports?require(\"./raphael.core\"):a.Raphael)}(this,function(a){if(!a||a.vml){var b=\"hasOwnProperty\",c=String,d=parseFloat,e=Math,f=e.round,g=e.max,h=e.min,i=e.abs,j=\"fill\",k=/[, ]+/,l=a.eve,m=\" progid:DXImageTransform.Microsoft\",n=\" \",o=\"\",p={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},q=/([clmz]),?([^clmz]*)/gi,r=/ progid:\\S+Blur\\([^\\)]+\\)/g,s=/-?[^,\\s-]+/g,t=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",u=21600,v={path:1,rect:1,image:1},w={circle:1,ellipse:1},x=function(b){var d=/[ahqstv]/gi,e=a._pathToAbsolute;if(c(b).match(d)&&(e=a._path2curve),d=/[clmz]/g,e==a._pathToAbsolute&&!c(b).match(d)){var g=c(b).replace(q,function(a,b,c){var d=[],e=\"m\"==b.toLowerCase(),g=p[b];return c.replace(s,function(a){e&&2==d.length&&(g+=d+p[\"m\"==b?\"l\":\"L\"],d=[]),d.push(f(a*u))}),g+d});return g}var h,i,j=e(b);g=[];for(var k=0,l=j.length;l>k;k++){h=j[k],i=j[k][0].toLowerCase(),\"z\"==i&&(i=\"x\");for(var m=1,r=h.length;r>m;m++)i+=f(h[m]*u)+(m!=r-1?\",\":o);g.push(i)}return g.join(n)},y=function(b,c,d){var e=a.matrix();return e.rotate(-b,.5,.5),{dx:e.x(c,d),dy:e.y(c,d)}},z=function(a,b,c,d,e,f){var g=a._,h=a.matrix,k=g.fillpos,l=a.node,m=l.style,o=1,p=\"\",q=u/b,r=u/c;if(m.visibility=\"hidden\",b&&c){if(l.coordsize=i(q)+n+i(r),m.rotation=f*(0>b*c?-1:1),f){var s=y(f,d,e);d=s.dx,e=s.dy}if(0>b&&(p+=\"x\"),0>c&&(p+=\" y\")&&(o=-1),m.flip=p,l.coordorigin=d*-q+n+e*-r,k||g.fillsize){var t=l.getElementsByTagName(j);t=t&&t[0],l.removeChild(t),k&&(s=y(f,h.x(k[0],k[1]),h.y(k[0],k[1])),t.position=s.dx*o+n+s.dy*o),g.fillsize&&(t.size=g.fillsize[0]*i(b)+n+g.fillsize[1]*i(c)),l.appendChild(t)}m.visibility=\"visible\"}};a.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var A=function(a,b,d){for(var e=c(b).toLowerCase().split(\"-\"),f=d?\"end\":\"start\",g=e.length,h=\"classic\",i=\"medium\",j=\"medium\";g--;)switch(e[g]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":h=e[g];break;case\"wide\":case\"narrow\":j=e[g];break;case\"long\":case\"short\":i=e[g]}var k=a.node.getElementsByTagName(\"stroke\")[0];k[f+\"arrow\"]=h,k[f+\"arrowlength\"]=i,k[f+\"arrowwidth\"]=j},B=function(e,i){e.attrs=e.attrs||{};var l=e.node,m=e.attrs,p=l.style,q=v[e.type]&&(i.x!=m.x||i.y!=m.y||i.width!=m.width||i.height!=m.height||i.cx!=m.cx||i.cy!=m.cy||i.rx!=m.rx||i.ry!=m.ry||i.r!=m.r),r=w[e.type]&&(m.cx!=i.cx||m.cy!=i.cy||m.r!=i.r||m.rx!=i.rx||m.ry!=i.ry),s=e;for(var t in i)i[b](t)&&(m[t]=i[t]);if(q&&(m.path=a._getPath[e.type](e),e._.dirty=1),i.href&&(l.href=i.href),i.title&&(l.title=i.title),i.target&&(l.target=i.target),i.cursor&&(p.cursor=i.cursor),\"blur\"in i&&e.blur(i.blur),(i.path&&\"path\"==e.type||q)&&(l.path=x(~c(m.path).toLowerCase().indexOf(\"r\")?a._pathToAbsolute(m.path):m.path),e._.dirty=1,\"image\"==e.type&&(e._.fillpos=[m.x,m.y],e._.fillsize=[m.width,m.height],z(e,1,1,0,0,0))),\"transform\"in i&&e.transform(i.transform),r){var y=+m.cx,B=+m.cy,D=+m.rx||+m.r||0,E=+m.ry||+m.r||0;l.path=a.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",f((y-D)*u),f((B-E)*u),f((y+D)*u),f((B+E)*u),f(y*u)),e._.dirty=1}if(\"clip-rect\"in i){var G=c(i[\"clip-rect\"]).split(k);if(4==G.length){G[2]=+G[2]+ +G[0],G[3]=+G[3]+ +G[1];var H=l.clipRect||a._g.doc.createElement(\"div\"),I=H.style;I.clip=a.format(\"rect({1}px {2}px {3}px {0}px)\",G),l.clipRect||(I.position=\"absolute\",I.top=0,I.left=0,I.width=e.paper.width+\"px\",I.height=e.paper.height+\"px\",l.parentNode.insertBefore(H,l),H.appendChild(l),l.clipRect=H)}i[\"clip-rect\"]||l.clipRect&&(l.clipRect.style.clip=\"auto\")}if(e.textpath){var J=e.textpath.style;i.font&&(J.font=i.font),i[\"font-family\"]&&(J.fontFamily='\"'+i[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,o)+'\"'),i[\"font-size\"]&&(J.fontSize=i[\"font-size\"]),i[\"font-weight\"]&&(J.fontWeight=i[\"font-weight\"]),i[\"font-style\"]&&(J.fontStyle=i[\"font-style\"])}if(\"arrow-start\"in i&&A(s,i[\"arrow-start\"]),\"arrow-end\"in i&&A(s,i[\"arrow-end\"],1),null!=i.opacity||null!=i[\"stroke-width\"]||null!=i.fill||null!=i.src||null!=i.stroke||null!=i[\"stroke-width\"]||null!=i[\"stroke-opacity\"]||null!=i[\"fill-opacity\"]||null!=i[\"stroke-dasharray\"]||null!=i[\"stroke-miterlimit\"]||null!=i[\"stroke-linejoin\"]||null!=i[\"stroke-linecap\"]){var K=l.getElementsByTagName(j),L=!1;if(K=K&&K[0],!K&&(L=K=F(j)),\"image\"==e.type&&i.src&&(K.src=i.src),i.fill&&(K.on=!0),(null==K.on||\"none\"==i.fill||null===i.fill)&&(K.on=!1),K.on&&i.fill){var M=c(i.fill).match(a._ISURL);if(M){K.parentNode==l&&l.removeChild(K),K.rotate=!0,K.src=M[1],K.type=\"tile\";var N=e.getBBox(1);K.position=N.x+n+N.y,e._.fillpos=[N.x,N.y],a._preload(M[1],function(){e._.fillsize=[this.offsetWidth,this.offsetHeight]})}else K.color=a.getRGB(i.fill).hex,K.src=o,K.type=\"solid\",a.getRGB(i.fill).error&&(s.type in{circle:1,ellipse:1}||\"r\"!=c(i.fill).charAt())&&C(s,i.fill,K)&&(m.fill=\"none\",m.gradient=i.fill,K.rotate=!1)}if(\"fill-opacity\"in i||\"opacity\"in i){var O=((+m[\"fill-opacity\"]+1||2)-1)*((+m.opacity+1||2)-1)*((+a.getRGB(i.fill).o+1||2)-1);O=h(g(O,0),1),K.opacity=O,K.src&&(K.color=\"none\")}l.appendChild(K);var P=l.getElementsByTagName(\"stroke\")&&l.getElementsByTagName(\"stroke\")[0],Q=!1;!P&&(Q=P=F(\"stroke\")),(i.stroke&&\"none\"!=i.stroke||i[\"stroke-width\"]||null!=i[\"stroke-opacity\"]||i[\"stroke-dasharray\"]||i[\"stroke-miterlimit\"]||i[\"stroke-linejoin\"]||i[\"stroke-linecap\"])&&(P.on=!0),(\"none\"==i.stroke||null===i.stroke||null==P.on||0==i.stroke||0==i[\"stroke-width\"])&&(P.on=!1);var R=a.getRGB(i.stroke);P.on&&i.stroke&&(P.color=R.hex),O=((+m[\"stroke-opacity\"]+1||2)-1)*((+m.opacity+1||2)-1)*((+R.o+1||2)-1);var S=.75*(d(i[\"stroke-width\"])||1);if(O=h(g(O,0),1),null==i[\"stroke-width\"]&&(S=m[\"stroke-width\"]),i[\"stroke-width\"]&&(P.weight=S),S&&1>S&&(O*=S)&&(P.weight=1),P.opacity=O,i[\"stroke-linejoin\"]&&(P.joinstyle=i[\"stroke-linejoin\"]||\"miter\"),P.miterlimit=i[\"stroke-miterlimit\"]||8,i[\"stroke-linecap\"]&&(P.endcap=\"butt\"==i[\"stroke-linecap\"]?\"flat\":\"square\"==i[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in i){var T={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};P.dashstyle=T[b](i[\"stroke-dasharray\"])?T[i[\"stroke-dasharray\"]]:o}Q&&l.appendChild(P)}if(\"text\"==s.type){s.paper.canvas.style.display=o;var U=s.paper.span,V=100,W=m.font&&m.font.match(/\\d+(?:\\.\\d*)?(?=px)/);p=U.style,m.font&&(p.font=m.font),m[\"font-family\"]&&(p.fontFamily=m[\"font-family\"]),m[\"font-weight\"]&&(p.fontWeight=m[\"font-weight\"]),m[\"font-style\"]&&(p.fontStyle=m[\"font-style\"]),W=d(m[\"font-size\"]||W&&W[0])||10,p.fontSize=W*V+\"px\",s.textpath.string&&(U.innerHTML=c(s.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var X=U.getBoundingClientRect();s.W=m.w=(X.right-X.left)/V,s.H=m.h=(X.bottom-X.top)/V,s.X=m.x,s.Y=m.y+s.H/2,(\"x\"in i||\"y\"in i)&&(s.path.v=a.format(\"m{0},{1}l{2},{1}\",f(m.x*u),f(m.y*u),f(m.x*u)+1));for(var Y=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],Z=0,$=Y.length;$>Z;Z++)if(Y[Z]in i){s._.dirty=1;break}switch(m[\"text-anchor\"]){case\"start\":s.textpath.style[\"v-text-align\"]=\"left\",s.bbx=s.W/2;break;case\"end\":s.textpath.style[\"v-text-align\"]=\"right\",s.bbx=-s.W/2;break;default:s.textpath.style[\"v-text-align\"]=\"center\",s.bbx=0}s.textpath.style[\"v-text-kern\"]=!0}},C=function(b,f,g){b.attrs=b.attrs||{};var h=(b.attrs,Math.pow),i=\"linear\",j=\".5 .5\";if(b.attrs.gradient=f,f=c(f).replace(a._radial_gradient,function(a,b,c){return i=\"radial\",b&&c&&(b=d(b),c=d(c),h(b-.5,2)+h(c-.5,2)>.25&&(c=e.sqrt(.25-h(b-.5,2))*(2*(c>.5)-1)+.5),j=b+n+c),o}),f=f.split(/\\s*\\-\\s*/),\"linear\"==i){var k=f.shift();if(k=-d(k),isNaN(k))return null}var l=a._parseDots(f);if(!l)return null;if(b=b.shape||b.node,l.length){b.removeChild(g),g.on=!0,g.method=\"none\",g.color=l[0].color,g.color2=l[l.length-1].color;for(var m=[],p=0,q=l.length;q>p;p++)l[p].offset&&m.push(l[p].offset+n+l[p].color);g.colors=m.length?m.join():\"0% \"+g.color,\"radial\"==i?(g.type=\"gradientTitle\",g.focus=\"100%\",g.focussize=\"0 0\",g.focusposition=j,g.angle=0):(g.type=\"gradient\",g.angle=(270-k)%360),b.appendChild(g)}return 1},D=function(b,c){this[0]=this.node=b,b.raphael=!0,this.id=a._oid++,b.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=c,this.matrix=a.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!c.bottom&&(c.bottom=this),this.prev=c.top,c.top&&(c.top.next=this),c.top=this,this.next=null},E=a.el;D.prototype=E,E.constructor=D,E.transform=function(b){if(null==b)return this._.transform;var d,e=this.paper._viewBoxShift,f=e?\"s\"+[e.scale,e.scale]+\"-1-1t\"+[e.dx,e.dy]:o;e&&(d=b=c(b).replace(/\\.{3}|\\u2026/g,this._.transform||o)),a._extractTransform(this,f+b);var g,h=this.matrix.clone(),i=this.skew,j=this.node,k=~c(this.attrs.fill).indexOf(\"-\"),l=!c(this.attrs.fill).indexOf(\"url(\");if(h.translate(1,1),l||k||\"image\"==this.type)if(i.matrix=\"1 0 0 1\",i.offset=\"0 0\",g=h.split(),k&&g.noRotation||!g.isSimple){j.style.filter=h.toFilter();var m=this.getBBox(),p=this.getBBox(1),q=m.x-p.x,r=m.y-p.y;j.coordorigin=q*-u+n+r*-u,z(this,1,1,q,r,0)}else j.style.filter=o,z(this,g.scalex,g.scaley,g.dx,g.dy,g.rotate);else j.style.filter=o,i.matrix=c(h),i.offset=h.offset();return null!==d&&(this._.transform=d,a._extractTransform(this,d)),this},E.rotate=function(a,b,e){if(this.removed)return this;if(null!=a){if(a=c(a).split(k),a.length-1&&(b=d(a[1]),e=d(a[2])),a=d(a[0]),null==e&&(b=e),null==b||null==e){var f=this.getBBox(1);b=f.x+f.width/2,e=f.y+f.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",a,b,e]])),this}},E.translate=function(a,b){return this.removed?this:(a=c(a).split(k),a.length-1&&(b=d(a[1])),a=d(a[0])||0,b=+b||0,this._.bbox&&(this._.bbox.x+=a,this._.bbox.y+=b),this.transform(this._.transform.concat([[\"t\",a,b]])),this)},E.scale=function(a,b,e,f){if(this.removed)return this;if(a=c(a).split(k),a.length-1&&(b=d(a[1]),e=d(a[2]),f=d(a[3]),isNaN(e)&&(e=null),isNaN(f)&&(f=null)),a=d(a[0]),null==b&&(b=a),null==f&&(e=f),null==e||null==f)var g=this.getBBox(1);return e=null==e?g.x+g.width/2:e,f=null==f?g.y+g.height/2:f,this.transform(this._.transform.concat([[\"s\",a,b,e,f]])),this._.dirtyT=1,this},E.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},E.show=function(){return!this.removed&&(this.node.style.display=o),this},E.auxGetBBox=a.el.getBBox,E.getBBox=function(){var a=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var b={},c=1/this.paper._viewBoxShift.scale;return b.x=a.x-this.paper._viewBoxShift.dx,b.x*=c,b.y=a.y-this.paper._viewBoxShift.dy,b.y*=c,b.width=a.width*c,b.height=a.height*c,b.x2=b.x+b.width,b.y2=b.y+b.height,b}return a},E._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},E.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),a.eve.unbind(\"raphael.*.*.\"+this.id),a._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var b in this)this[b]=\"function\"==typeof this[b]?a._removedFactory(b):null;this.removed=!0}},E.attr=function(c,d){if(this.removed)return this;if(null==c){var e={};for(var f in this.attrs)this.attrs[b](f)&&(e[f]=this.attrs[f]);return e.gradient&&\"none\"==e.fill&&(e.fill=e.gradient)&&delete e.gradient,e.transform=this._.transform,e}if(null==d&&a.is(c,\"string\")){if(c==j&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var g=c.split(k),h={},i=0,m=g.length;m>i;i++)c=g[i],c in this.attrs?h[c]=this.attrs[c]:a.is(this.paper.customAttributes[c],\"function\")?h[c]=this.paper.customAttributes[c].def:h[c]=a._availableAttrs[c];return m-1?h:h[g[0]]}if(this.attrs&&null==d&&a.is(c,\"array\")){for(h={},i=0,m=c.length;m>i;i++)h[c[i]]=this.attr(c[i]);return h}var n;null!=d&&(n={},n[c]=d),null==d&&a.is(c,\"object\")&&(n=c);for(var o in n)l(\"raphael.attr.\"+o+\".\"+this.id,this,n[o]);if(n){for(o in this.paper.customAttributes)if(this.paper.customAttributes[b](o)&&n[b](o)&&a.is(this.paper.customAttributes[o],\"function\")){var p=this.paper.customAttributes[o].apply(this,[].concat(n[o]));this.attrs[o]=n[o];for(var q in p)p[b](q)&&(n[q]=p[q])}n.text&&\"text\"==this.type&&(this.textpath.string=n.text),B(this,n)}return this},E.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&a._tofront(this,this.paper),this},E.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),a._toback(this,this.paper)),this)},E.insertAfter=function(b){return this.removed?this:(b.constructor==a.st.constructor&&(b=b[b.length-1]),b.node.nextSibling?b.node.parentNode.insertBefore(this.node,b.node.nextSibling):b.node.parentNode.appendChild(this.node),a._insertafter(this,b,this.paper),this)},E.insertBefore=function(b){return this.removed?this:(b.constructor==a.st.constructor&&(b=b[0]),b.node.parentNode.insertBefore(this.node,b.node),a._insertbefore(this,b,this.paper),this)},E.blur=function(b){var c=this.node.runtimeStyle,d=c.filter;return d=d.replace(r,o),0!==+b?(this.attrs.blur=b,c.filter=d+n+m+\".Blur(pixelradius=\"+(+b||1.5)+\")\",c.margin=a.format(\"-{0}px 0 0 -{0}px\",f(+b||1.5))):(c.filter=d,c.margin=0,delete this.attrs.blur),this},a._engine.path=function(a,b){var c=F(\"shape\");c.style.cssText=t,c.coordsize=u+n+u,c.coordorigin=b.coordorigin;var d=new D(c,b),e={fill:\"none\",stroke:\"#000\"};a&&(e.path=a),d.type=\"path\",d.path=[],d.Path=o,B(d,e),b.canvas.appendChild(c);var f=F(\"skew\");return f.on=!0,c.appendChild(f),d.skew=f,d.transform(o),d},a._engine.rect=function(b,c,d,e,f,g){var h=a._rectPath(c,d,e,f,g),i=b.path(h),j=i.attrs;return i.X=j.x=c,i.Y=j.y=d,i.W=j.width=e,i.H=j.height=f,j.r=g,j.path=h,i.type=\"rect\",i},a._engine.ellipse=function(a,b,c,d,e){{var f=a.path();f.attrs}return f.X=b-d,f.Y=c-e,f.W=2*d,f.H=2*e,f.type=\"ellipse\",B(f,{cx:b,cy:c,rx:d,ry:e}),f},a._engine.circle=function(a,b,c,d){{var e=a.path();e.attrs}return e.X=b-d,e.Y=c-d,e.W=e.H=2*d,e.type=\"circle\",B(e,{cx:b,cy:c,r:d}),e},a._engine.image=function(b,c,d,e,f,g){var h=a._rectPath(d,e,f,g),i=b.path(h).attr({stroke:\"none\"}),k=i.attrs,l=i.node,m=l.getElementsByTagName(j)[0];return k.src=c,i.X=k.x=d,i.Y=k.y=e,i.W=k.width=f,i.H=k.height=g,k.path=h,i.type=\"image\",m.parentNode==l&&l.removeChild(m),m.rotate=!0,m.src=c,m.type=\"tile\",i._.fillpos=[d,e],i._.fillsize=[f,g],l.appendChild(m),z(i,1,1,0,0,0),i},a._engine.text=function(b,d,e,g){var h=F(\"shape\"),i=F(\"path\"),j=F(\"textpath\");d=d||0,e=e||0,g=g||\"\",i.v=a.format(\"m{0},{1}l{2},{1}\",f(d*u),f(e*u),f(d*u)+1),i.textpathok=!0,j.string=c(g),j.on=!0,h.style.cssText=t,h.coordsize=u+n+u,h.coordorigin=\"0 0\";var k=new D(h,b),l={fill:\"#000\",stroke:\"none\",font:a._availableAttrs.font,text:g};k.shape=h,k.path=i,k.textpath=j,k.type=\"text\",k.attrs.text=c(g),k.attrs.x=d,k.attrs.y=e,k.attrs.w=1,k.attrs.h=1,B(k,l),h.appendChild(j),h.appendChild(i),b.canvas.appendChild(h);var m=F(\"skew\");return m.on=!0,h.appendChild(m),k.skew=m,k.transform(o),k},a._engine.setSize=function(b,c){var d=this.canvas.style;return this.width=b,this.height=c,b==+b&&(b+=\"px\"),c==+c&&(c+=\"px\"),d.width=b,d.height=c,d.clip=\"rect(0 \"+b+\" \"+c+\" 0)\",this._viewBox&&a._engine.setViewBox.apply(this,this._viewBox),this},a._engine.setViewBox=function(b,c,d,e,f){a.eve(\"raphael.setViewBox\",this,this._viewBox,[b,c,d,e,f]);var g,h,i=this.getSize(),j=i.width,k=i.height;return f&&(g=k/e,h=j/d,j>d*g&&(b-=(j-d*g)/2/g),k>e*h&&(c-=(k-e*h)/2/h)),this._viewBox=[b,c,d,e,!!f],this._viewBoxShift={dx:-b,dy:-c,scale:i},this.forEach(function(a){a.transform(\"...\")}),this};var F;a._engine.initWin=function(a){var b=a.document;b.styleSheets.length<31?b.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):b.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!b.namespaces.rvml&&b.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),F=function(a){return b.createElement(\"<rvml:\"+a+' class=\"rvml\">')}}catch(c){F=function(a){return b.createElement(\"<\"+a+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},a._engine.initWin(a._g.win),a._engine.create=function(){var b=a._getContainer.apply(0,arguments),c=b.container,d=b.height,e=b.width,f=b.x,g=b.y;if(!c)throw new Error(\"VML container not found.\");var h=new a._Paper,i=h.canvas=a._g.doc.createElement(\"div\"),j=i.style;return f=f||0,g=g||0,e=e||512,d=d||342,h.width=e,h.height=d,e==+e&&(e+=\"px\"),d==+d&&(d+=\"px\"),h.coordsize=1e3*u+n+1e3*u,h.coordorigin=\"0 0\",h.span=a._g.doc.createElement(\"span\"),h.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",i.appendChild(h.span),j.cssText=a.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",e,d),1==c?(a._g.doc.body.appendChild(i),j.left=f+\"px\",j.top=g+\"px\",j.position=\"absolute\"):c.firstChild?c.insertBefore(i,c.firstChild):c.appendChild(i),h.renderfix=function(){},h},a.prototype.clear=function(){a.eve(\"raphael.clear\",this),this.canvas.innerHTML=o,this.span=a._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},a.prototype.remove=function(){a.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas);for(var b in this)this[b]=\"function\"==typeof this[b]?a._removedFactory(b):null;return!0};var G=a.st;for(var H in E)E[b](H)&&!G[b](H)&&(G[H]=function(a){return function(){var b=arguments;return this.forEach(function(c){c[a].apply(c,b)})}}(H))}}),function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__,__WEBPACK_LOCAL_MODULE_2__,__WEBPACK_LOCAL_MODULE_3__], __WEBPACK_AMD_DEFINE_RESULT__ = function(c){return a.Raphael=b(c)}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if(\"object\"==typeof exports){var c=require(\"raphael.core\");require(\"raphael.svg\"),require(\"raphael.vml\"),module.exports=b(c)}else a.Raphael=b(a.Raphael)}(this,function(a){return a.ninja()});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/webpack-raphael/raphael-min.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/webpack-raphael/raphael-min.js\n");

/***/ }),

/***/ "./src/app/layout/directives/flot/flot.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FlotChart; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar FlotChart = /** @class */ (function () {\r\n    function FlotChart(el) {\r\n        this.$el = jQuery(el.nativeElement);\r\n    }\r\n    FlotChart.prototype.render = function () {\r\n        jQuery.plot(this.$el, this.data, this.options || {\r\n            series: {\r\n                lines: {\r\n                    show: true,\r\n                    lineWidth: 1,\r\n                    fill: false,\r\n                    fillColor: { colors: [{ opacity: .001 }, { opacity: .5 }] }\r\n                },\r\n                points: {\r\n                    show: false,\r\n                    fill: true\r\n                },\r\n                shadowSize: 0\r\n            },\r\n            legend: false,\r\n            grid: {\r\n                show: false,\r\n                margin: 0,\r\n                labelMargin: 0,\r\n                axisMargin: 0,\r\n                hoverable: true,\r\n                clickable: true,\r\n                tickColor: 'rgba(255,255,255,1)',\r\n                borderWidth: 0\r\n            }\r\n        });\r\n    };\r\n    FlotChart.prototype.ngOnInit = function () {\r\n        this.render();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], FlotChart.prototype, \"data\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", String)\r\n    ], FlotChart.prototype, \"options\", void 0);\r\n    FlotChart = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"])({\r\n            selector: '[flot-chart]'\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"]])\r\n    ], FlotChart);\r\n    return FlotChart;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9mbG90L2Zsb3QuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBNkQ7QUFPN0Q7SUFLRSxtQkFBWSxFQUFjO1FBQ3hCLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsMEJBQU0sR0FBTjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLElBQUk7WUFDN0MsTUFBTSxFQUFFO2dCQUNOLEtBQUssRUFBRTtvQkFDTCxJQUFJLEVBQUUsSUFBSTtvQkFDVixTQUFTLEVBQUUsQ0FBQztvQkFDWixJQUFJLEVBQUUsS0FBSztvQkFDWCxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUMsQ0FBQyxFQUFFO2lCQUMzRDtnQkFDRCxNQUFNLEVBQUU7b0JBQ04sSUFBSSxFQUFFLEtBQUs7b0JBQ1gsSUFBSSxFQUFFLElBQUk7aUJBQ1g7Z0JBQ0QsVUFBVSxFQUFFLENBQUM7YUFDZDtZQUNELE1BQU0sRUFBRSxLQUFLO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLElBQUksRUFBRSxLQUFLO2dCQUNYLE1BQU0sRUFBRSxDQUFDO2dCQUNULFdBQVcsRUFBRSxDQUFDO2dCQUNkLFVBQVUsRUFBRSxDQUFDO2dCQUNiLFNBQVMsRUFBRSxJQUFJO2dCQUNmLFNBQVMsRUFBRSxJQUFJO2dCQUNmLFNBQVMsRUFBRSxxQkFBcUI7Z0JBQ2hDLFdBQVcsRUFBRSxDQUFDO2FBQ2Y7U0FDRixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsNEJBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBdENRO1FBQVIsNERBQUssRUFBRTs7MkNBQVc7SUFDVjtRQUFSLDREQUFLLEVBQUU7OzhDQUFpQjtJQUhkLFNBQVM7UUFKckIsZ0VBQVMsQ0FBRTtZQUNWLFFBQVEsRUFBRSxjQUFjO1NBQ3pCLENBQUM7d0ZBT2dCLHlEQUFVO09BTGYsU0FBUyxDQXlDckI7SUFBRCxnQkFBQztDQUFBO0FBekNxQiIsImZpbGUiOiIuL3NyYy9hcHAvbGF5b3V0L2RpcmVjdGl2ZXMvZmxvdC9mbG90LmRpcmVjdGl2ZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuZGVjbGFyZSBsZXQgalF1ZXJ5OiBhbnk7XHJcblxyXG5ARGlyZWN0aXZlICh7XHJcbiAgc2VsZWN0b3I6ICdbZmxvdC1jaGFydF0nXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgRmxvdENoYXJ0IHtcclxuICAkZWw6IGFueTtcclxuICBASW5wdXQoKSBkYXRhOiBhbnk7XHJcbiAgQElucHV0KCkgb3B0aW9uczogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xyXG4gICAgdGhpcy4kZWwgPSBqUXVlcnkoZWwubmF0aXZlRWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKTogdm9pZCB7XHJcbiAgICBqUXVlcnkucGxvdCh0aGlzLiRlbCwgdGhpcy5kYXRhLCB0aGlzLm9wdGlvbnMgfHwge1xyXG4gICAgICAgIHNlcmllczoge1xyXG4gICAgICAgICAgbGluZXM6IHtcclxuICAgICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICAgICAgbGluZVdpZHRoOiAxLFxyXG4gICAgICAgICAgICBmaWxsOiBmYWxzZSxcclxuICAgICAgICAgICAgZmlsbENvbG9yOiB7IGNvbG9yczogW3sgb3BhY2l0eTogLjAwMSB9LCB7IG9wYWNpdHk6IC41fV0gfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHBvaW50czoge1xyXG4gICAgICAgICAgICBzaG93OiBmYWxzZSxcclxuICAgICAgICAgICAgZmlsbDogdHJ1ZVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHNoYWRvd1NpemU6IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGxlZ2VuZDogZmFsc2UsXHJcbiAgICAgICAgZ3JpZDoge1xyXG4gICAgICAgICAgc2hvdzogZmFsc2UsXHJcbiAgICAgICAgICBtYXJnaW46IDAsXHJcbiAgICAgICAgICBsYWJlbE1hcmdpbjogMCxcclxuICAgICAgICAgIGF4aXNNYXJnaW46IDAsXHJcbiAgICAgICAgICBob3ZlcmFibGU6IHRydWUsXHJcbiAgICAgICAgICBjbGlja2FibGU6IHRydWUsXHJcbiAgICAgICAgICB0aWNrQ29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LDEpJyxcclxuICAgICAgICAgIGJvcmRlcldpZHRoOiAwXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5yZW5kZXIoKTtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9mbG90L2Zsb3QuZGlyZWN0aXZlLnRzIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9\n//# sourceURL=webpack-internal:///./src/app/layout/directives/flot/flot.directive.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/flot/flot.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FlotChartModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery_flot__ = __webpack_require__(\"./node_modules/jquery-flot/jquery.flot.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery_flot___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery_flot__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_flot_animator_jquery_flot_animator__ = __webpack_require__(\"./node_modules/jquery.flot.animator/jquery.flot.animator.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_flot_animator_jquery_flot_animator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery_flot_animator_jquery_flot_animator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_flot_jquery_flot_time_js__ = __webpack_require__(\"./node_modules/jquery-flot/jquery.flot.time.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_flot_jquery_flot_time_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_jquery_flot_jquery_flot_time_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__flot_directive__ = __webpack_require__(\"./src/app/layout/directives/flot/flot.directive.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\nvar FlotChartModule = /** @class */ (function () {\r\n    function FlotChartModule() {\r\n    }\r\n    FlotChartModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_5__flot_directive__[\"a\" /* FlotChart */]\r\n            ],\r\n            exports: [\r\n                __WEBPACK_IMPORTED_MODULE_5__flot_directive__[\"a\" /* FlotChart */]\r\n            ]\r\n        })\r\n    ], FlotChartModule);\r\n    return FlotChartModule;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9mbG90L2Zsb3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThDO0FBRXpCO0FBQzhCO0FBQ1Y7QUFFSTtBQVU3QztJQUFBO0lBQ0EsQ0FBQztJQURZLGVBQWU7UUFSM0IsK0RBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixrRUFBUzthQUNWO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLGtFQUFTO2FBQ1Y7U0FDRixDQUFDO09BQ1csZUFBZSxDQUMzQjtJQUFELHNCQUFDO0NBQUE7QUFEMkIiLCJmaWxlIjoiLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL2Zsb3QvZmxvdC5tb2R1bGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9ICAgICAgZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgJ2pxdWVyeS1mbG90JztcclxuaW1wb3J0ICdqcXVlcnkuZmxvdC5hbmltYXRvci9qcXVlcnkuZmxvdC5hbmltYXRvcic7XHJcbmltcG9ydCAnanF1ZXJ5LWZsb3QvanF1ZXJ5LmZsb3QudGltZS5qcyc7XHJcblxyXG5pbXBvcnQgeyBGbG90Q2hhcnQgfSBmcm9tICcuL2Zsb3QuZGlyZWN0aXZlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBGbG90Q2hhcnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEZsb3RDaGFydFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZsb3RDaGFydE1vZHVsZSB7XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9mbG90L2Zsb3QubW9kdWxlLnRzIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9\n//# sourceURL=webpack-internal:///./src/app/layout/directives/flot/flot.module.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/morris/morris.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MorrisChart; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar MorrisChart = /** @class */ (function () {\r\n    function MorrisChart(el) {\r\n        this.$el = jQuery(el.nativeElement);\r\n    }\r\n    MorrisChart.prototype.capitalise = function (stringVar) {\r\n        return stringVar.charAt(0).toUpperCase() + stringVar.slice(1).toLowerCase();\r\n    };\r\n    MorrisChart.prototype.render = function () {\r\n        this.$el.css({ height: this.height }); // safari svg height fix\r\n        /* tslint:disable */\r\n        window['Morris'][this.capitalise(this.type)](jQuery.extend({\r\n            element: this.$el[0]\r\n        }, this.options));\r\n        /* tslint:enable */\r\n    };\r\n    MorrisChart.prototype.ngOnInit = function () {\r\n        this.render();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Number)\r\n    ], MorrisChart.prototype, \"height\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", String)\r\n    ], MorrisChart.prototype, \"type\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], MorrisChart.prototype, \"options\", void 0);\r\n    MorrisChart = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"])({\r\n            selector: '[morris-chart]'\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"]])\r\n    ], MorrisChart);\r\n    return MorrisChart;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9tb3JyaXMvbW9ycmlzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQTZEO0FBTzdEO0lBTUUscUJBQVksRUFBYztRQUN4QixJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELGdDQUFVLEdBQVYsVUFBVyxTQUFTO1FBQ2xCLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDOUUsQ0FBQztJQUVELDRCQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxDQUFDLHdCQUF3QjtRQUM3RCxvQkFBb0I7UUFDcEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUN6RCxPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDckIsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNsQixtQkFBbUI7SUFDckIsQ0FBQztJQUVELDhCQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQXZCUTtRQUFSLDREQUFLLEVBQUU7OytDQUFnQjtJQUNmO1FBQVIsNERBQUssRUFBRTs7NkNBQWM7SUFDYjtRQUFSLDREQUFLLEVBQUU7O2dEQUFjO0lBSlgsV0FBVztRQUp2QixnRUFBUyxDQUFFO1lBQ1YsUUFBUSxFQUFFLGdCQUFnQjtTQUMzQixDQUFDO3dGQVFnQix5REFBVTtPQU5mLFdBQVcsQ0EwQnZCO0lBQUQsa0JBQUM7Q0FBQTtBQTFCdUIiLCJmaWxlIjoiLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL21vcnJpcy9tb3JyaXMuZGlyZWN0aXZlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5kZWNsYXJlIGxldCBqUXVlcnk6IGFueTtcclxuXHJcbkBEaXJlY3RpdmUgKHtcclxuICBzZWxlY3RvcjogJ1ttb3JyaXMtY2hhcnRdJ1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIE1vcnJpc0NoYXJ0IHtcclxuICAkZWw6IGFueTtcclxuICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcclxuICBASW5wdXQoKSB0eXBlOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgb3B0aW9uczogYW55O1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xyXG4gICAgdGhpcy4kZWwgPSBqUXVlcnkoZWwubmF0aXZlRWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICBjYXBpdGFsaXNlKHN0cmluZ1Zhcik6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gc3RyaW5nVmFyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nVmFyLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKTogdm9pZCB7XHJcbiAgICB0aGlzLiRlbC5jc3Moe2hlaWdodDogdGhpcy5oZWlnaHR9KTsgLy8gc2FmYXJpIHN2ZyBoZWlnaHQgZml4XHJcbiAgICAvKiB0c2xpbnQ6ZGlzYWJsZSAqL1xyXG4gICAgd2luZG93WydNb3JyaXMnXVt0aGlzLmNhcGl0YWxpc2UodGhpcy50eXBlKV0oalF1ZXJ5LmV4dGVuZCh7XHJcbiAgICAgIGVsZW1lbnQ6IHRoaXMuJGVsWzBdXHJcbiAgICB9LCB0aGlzLm9wdGlvbnMpKTtcclxuICAgIC8qIHRzbGludDplbmFibGUgKi9cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5yZW5kZXIoKTtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9tb3JyaXMvbW9ycmlzLmRpcmVjdGl2ZS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/layout/directives/morris/morris.directive.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/morris/morris.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MorrisChartModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_morris_js_morris_js__ = __webpack_require__(\"./node_modules/morris.js/morris.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_morris_js_morris_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_morris_js_morris_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__morris_directive__ = __webpack_require__(\"./src/app/layout/directives/morris/morris.directive.ts\");\n\r\n\r\n\r\n\r\nvar MorrisChartModule = /** @class */ (function () {\r\n    function MorrisChartModule() {\r\n    }\r\n    MorrisChartModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_3__morris_directive__[\"a\" /* MorrisChart */]\r\n            ],\r\n            exports: [\r\n                __WEBPACK_IMPORTED_MODULE_3__morris_directive__[\"a\" /* MorrisChart */]\r\n            ]\r\n        })\r\n    ], MorrisChartModule);\r\n    return MorrisChartModule;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9tb3JyaXMvbW9ycmlzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBRWpCO0FBRW9CO0FBVWpEO0lBQUE7SUFDQSxDQUFDO0lBRFksaUJBQWlCO1FBUjdCLCtEQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBQ1osc0VBQVc7YUFDWjtZQUNELE9BQU8sRUFBRTtnQkFDUCxzRUFBVzthQUNaO1NBQ0YsQ0FBQztPQUNXLGlCQUFpQixDQUM3QjtJQUFELHdCQUFDO0NBQUE7QUFENkIiLCJmaWxlIjoiLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL21vcnJpcy9tb3JyaXMubW9kdWxlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSAgICAgIGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0ICdtb3JyaXMuanMvbW9ycmlzLmpzJztcclxuXHJcbmltcG9ydCB7IE1vcnJpc0NoYXJ0IH0gZnJvbSAnLi9tb3JyaXMuZGlyZWN0aXZlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBNb3JyaXNDaGFydFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgTW9ycmlzQ2hhcnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNb3JyaXNDaGFydE1vZHVsZSB7XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9tb3JyaXMvbW9ycmlzLm1vZHVsZS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/layout/directives/morris/morris.module.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/nvd3/nvd3.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(jQuery, nv, d3) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Nvd3Chart; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar Nvd3Chart = /** @class */ (function () {\r\n    function Nvd3Chart(el) {\r\n        this.$el = jQuery(el.nativeElement);\r\n    }\r\n    Nvd3Chart.prototype.render = function () {\r\n        var _this = this;\r\n        nv.addGraph(function () {\r\n            var chart = _this.chart;\r\n            d3.select(_this.$el.find('svg')[0])\r\n                .style('height', _this.height || '300px')\r\n                .datum(_this.datum)\r\n                .transition().duration(500)\r\n                .call(chart);\r\n            jQuery(window).on('sn:resize', chart.update);\r\n            return chart;\r\n        });\r\n    };\r\n    Nvd3Chart.prototype.ngOnInit = function () {\r\n        this.render();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], Nvd3Chart.prototype, \"chart\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", String)\r\n    ], Nvd3Chart.prototype, \"height\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], Nvd3Chart.prototype, \"datum\", void 0);\r\n    Nvd3Chart = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"])({\r\n            selector: '[nvd3-chart]'\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"]])\r\n    ], Nvd3Chart);\r\n    return Nvd3Chart;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\"), __webpack_require__(\"./node_modules/nvd3/build/nv.d3.js\"), __webpack_require__(\"./node_modules/d3/d3.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9udmQzL252ZDMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBNkQ7QUFTN0Q7SUFNRSxtQkFBWSxFQUFjO1FBQ3hCLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsMEJBQU0sR0FBTjtRQUFBLGlCQWNDO1FBYkMsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUNWLElBQUksS0FBSyxHQUFHLEtBQUksQ0FBQyxLQUFLLENBQUM7WUFDdkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDL0IsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFJLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQztpQkFDdkMsS0FBSyxDQUFDLEtBQUksQ0FBQyxLQUFLLENBQUM7aUJBQ2pCLFVBQVUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7aUJBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FDYjtZQUVELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUU3QyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsNEJBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBMUJRO1FBQVIsNERBQUssRUFBRTs7NENBQVk7SUFDWDtRQUFSLDREQUFLLEVBQUU7OzZDQUFnQjtJQUNmO1FBQVIsNERBQUssRUFBRTs7NENBQVk7SUFKVCxTQUFTO1FBSnJCLGdFQUFTLENBQUU7WUFDVixRQUFRLEVBQUUsY0FBYztTQUN6QixDQUFDO3dGQVFnQix5REFBVTtPQU5mLFNBQVMsQ0E2QnJCO0lBQUQsZ0JBQUM7Q0FBQTtBQTdCcUIiLCJmaWxlIjoiLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL252ZDMvbnZkMy5kaXJlY3RpdmUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmRlY2xhcmUgbGV0IGpRdWVyeTogYW55O1xyXG5kZWNsYXJlIGxldCBudjogYW55O1xyXG5kZWNsYXJlIGxldCBkMzogYW55O1xyXG5cclxuQERpcmVjdGl2ZSAoe1xyXG4gIHNlbGVjdG9yOiAnW252ZDMtY2hhcnRdJ1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIE52ZDNDaGFydCB7XHJcbiAgJGVsOiBhbnk7XHJcbiAgQElucHV0KCkgY2hhcnQ6IGFueTtcclxuICBASW5wdXQoKSBoZWlnaHQ6IHN0cmluZztcclxuICBASW5wdXQoKSBkYXR1bTogYW55O1xyXG5cclxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xyXG4gICAgdGhpcy4kZWwgPSBqUXVlcnkoZWwubmF0aXZlRWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKTogdm9pZCB7XHJcbiAgICBudi5hZGRHcmFwaCgoKSA9PiB7XHJcbiAgICAgIGxldCBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgIGQzLnNlbGVjdCh0aGlzLiRlbC5maW5kKCdzdmcnKVswXSlcclxuICAgICAgICAuc3R5bGUoJ2hlaWdodCcsIHRoaXMuaGVpZ2h0IHx8ICczMDBweCcpXHJcbiAgICAgICAgLmRhdHVtKHRoaXMuZGF0dW0pXHJcbiAgICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbig1MDApXHJcbiAgICAgICAgLmNhbGwoY2hhcnQpXHJcbiAgICAgIDtcclxuXHJcbiAgICAgIGpRdWVyeSh3aW5kb3cpLm9uKCdzbjpyZXNpemUnLCBjaGFydC51cGRhdGUpO1xyXG5cclxuICAgICAgcmV0dXJuIGNoYXJ0O1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMucmVuZGVyKCk7XHJcbiAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcHAvbGF5b3V0L2RpcmVjdGl2ZXMvbnZkMy9udmQzLmRpcmVjdGl2ZS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/layout/directives/nvd3/nvd3.directive.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/nvd3/nvd3.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Nvd3ChartModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__d3_d3_module__ = __webpack_require__(\"./src/app/layout/directives/d3/d3.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_nvd3__ = __webpack_require__(\"./node_modules/nvd3/build/nv.d3.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_nvd3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_nvd3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__nvd3_directive__ = __webpack_require__(\"./src/app/layout/directives/nvd3/nvd3.directive.ts\");\n\r\n\r\n\r\n\r\n\r\nvar Nvd3ChartModule = /** @class */ (function () {\r\n    function Nvd3ChartModule() {\r\n    }\r\n    Nvd3ChartModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_2__d3_d3_module__[\"a\" /* D3Module */]\r\n            ],\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_4__nvd3_directive__[\"a\" /* Nvd3Chart */]\r\n            ],\r\n            exports: [\r\n                __WEBPACK_IMPORTED_MODULE_4__nvd3_directive__[\"a\" /* Nvd3Chart */]\r\n            ]\r\n        })\r\n    ], Nvd3ChartModule);\r\n    return Nvd3ChartModule;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9udmQzL252ZDMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThDO0FBRUg7QUFFN0I7QUFFK0I7QUFhN0M7SUFBQTtJQUNBLENBQUM7SUFEWSxlQUFlO1FBWDNCLCtEQUFRLENBQUM7WUFDUixPQUFPLEVBQUU7Z0JBQ1AsK0RBQVE7YUFDVDtZQUNELFlBQVksRUFBRTtnQkFDWixrRUFBUzthQUNWO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLGtFQUFTO2FBQ1Y7U0FDRixDQUFDO09BQ1csZUFBZSxDQUMzQjtJQUFELHNCQUFDO0NBQUE7QUFEMkIiLCJmaWxlIjoiLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL252ZDMvbnZkMy5tb2R1bGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9ICAgICAgZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBEM01vZHVsZSB9IGZyb20gJy4uL2QzL2QzLm1vZHVsZSc7XHJcblxyXG5pbXBvcnQgJ252ZDMnO1xyXG5cclxuaW1wb3J0IHsgTnZkM0NoYXJ0IH0gZnJvbSAnLi9udmQzLmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIEQzTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIE52ZDNDaGFydFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgTnZkM0NoYXJ0XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTnZkM0NoYXJ0TW9kdWxlIHtcclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL252ZDMvbnZkMy5tb2R1bGUudHMiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./src/app/layout/directives/nvd3/nvd3.module.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/rickshaw/rickshaw.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Rickshaw) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RickshawChart; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar RickshawChart = /** @class */ (function () {\r\n    function RickshawChart(el) {\r\n        this.elRef = el;\r\n    }\r\n    RickshawChart.prototype.render = function () {\r\n        var _this = this;\r\n        var graph = new Rickshaw.Graph({\r\n            element: this.elRef.nativeElement,\r\n            height: this.height,\r\n            renderer: this.renderer || 'area',\r\n            series: this.series,\r\n            stroke: true,\r\n            preserve: true,\r\n        });\r\n        var onResize = function () {\r\n            var configureProperties = Object.assign({\r\n                height: _this.height\r\n            }, _this.configureProps);\r\n            graph.configure(configureProperties);\r\n            graph.render();\r\n            var svg = _this.elRef.nativeElement.getElementsByTagName('svg')[0];\r\n            Object.assign(svg.style, { height: _this.height, width: '100%' });\r\n        };\r\n        window.addEventListener('sn:resize', onResize);\r\n        onResize();\r\n        var hoverDetail = new Rickshaw.Graph.HoverDetail({\r\n            graph: graph,\r\n            xFormatter: function (x) {\r\n                return new Date(x * 1000).toString();\r\n            }\r\n        });\r\n        var annotator = new Rickshaw.Graph.Annotate({\r\n            graph: graph,\r\n            element: document.getElementById('timeline')\r\n        });\r\n        var legend = new Rickshaw.Graph.Legend({\r\n            graph: graph,\r\n            element: document.getElementById('legend')\r\n        });\r\n        var shelving = new Rickshaw.Graph.Behavior.Series.Toggle({\r\n            graph: graph,\r\n            legend: legend\r\n        });\r\n        var order = new Rickshaw.Graph.Behavior.Series.Order({\r\n            graph: graph,\r\n            legend: legend\r\n        });\r\n        var highlighter = new Rickshaw.Graph.Behavior.Series.Highlight({\r\n            graph: graph,\r\n            legend: legend\r\n        });\r\n        var ticksTreatment = 'glow';\r\n        var xAxis = new Rickshaw.Graph.Axis.Time({\r\n            graph: graph,\r\n            ticksTreatment: ticksTreatment\r\n        });\r\n        xAxis.render();\r\n        var yAxis = new Rickshaw.Graph.Axis.Y({\r\n            graph: graph,\r\n            tickFormat: Rickshaw.Fixtures.Number.formatKMBT,\r\n            ticksTreatment: ticksTreatment\r\n        });\r\n        yAxis.render();\r\n        if (this.isrealTime) {\r\n            setInterval(function () {\r\n                _this.random.removeData(_this.seriesData);\r\n                _this.random.addData(_this.seriesData);\r\n                graph.update();\r\n            }, 1000);\r\n        }\r\n        var addAnnotation = function (force) {\r\n            if (_this.messages.length > 0 && (force || Math.random() >= 0.9)) {\r\n                annotator.add(_this.seriesData[2][_this.seriesData[2].length - 1].x, _this.messages.shift());\r\n            }\r\n        };\r\n        if (this.addAnnotation) {\r\n            addAnnotation(true);\r\n            setTimeout(function () { setInterval(function () { return addAnnotation(false); }, 3000); }, 3000);\r\n        }\r\n    };\r\n    RickshawChart.prototype.ngOnInit = function () {\r\n        this.render();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", String)\r\n    ], RickshawChart.prototype, \"height\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Array)\r\n    ], RickshawChart.prototype, \"series\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Array)\r\n    ], RickshawChart.prototype, \"seriesData\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], RickshawChart.prototype, \"random\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], RickshawChart.prototype, \"configureProps\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Boolean)\r\n    ], RickshawChart.prototype, \"isrealTime\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", String)\r\n    ], RickshawChart.prototype, \"renderer\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Array)\r\n    ], RickshawChart.prototype, \"messages\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Boolean)\r\n    ], RickshawChart.prototype, \"addAnnotation\", void 0);\r\n    RickshawChart = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"])({\r\n            selector: '[rickshaw-chart]'\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"]])\r\n    ], RickshawChart);\r\n    return RickshawChart;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/rickshaw/rickshaw.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/layout/directives/rickshaw/rickshaw.directive.ts\n");

/***/ }),

/***/ "./src/app/layout/directives/rickshaw/rickshaw.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RickshawChartModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__d3_d3_module__ = __webpack_require__(\"./src/app/layout/directives/d3/d3.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__rickshaw_directive__ = __webpack_require__(\"./src/app/layout/directives/rickshaw/rickshaw.directive.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_ui__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widget.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_ui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_jquery_ui__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery_ui_ui_widgets_sortable_js__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/sortable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery_ui_ui_widgets_sortable_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_jquery_ui_ui_widgets_sortable_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_ui_ui_widgets_resizable_js__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/resizable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_ui_ui_widgets_resizable_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_jquery_ui_ui_widgets_resizable_js__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar RickshawChartModule = /** @class */ (function () {\r\n    function RickshawChartModule() {\r\n    }\r\n    RickshawChartModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_2__d3_d3_module__[\"a\" /* D3Module */]\r\n            ],\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_3__rickshaw_directive__[\"a\" /* RickshawChart */]\r\n            ],\r\n            exports: [\r\n                __WEBPACK_IMPORTED_MODULE_3__rickshaw_directive__[\"a\" /* RickshawChart */]\r\n            ]\r\n        })\r\n    ], RickshawChartModule);\r\n    return RickshawChartModule;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9sYXlvdXQvZGlyZWN0aXZlcy9yaWNrc2hhdy9yaWNrc2hhdy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBRUg7QUFFVTtBQUVsQztBQUN1QjtBQUNDO0FBYzNDO0lBQUE7SUFDQSxDQUFDO0lBRFksbUJBQW1CO1FBWC9CLCtEQUFRLENBQUM7WUFDUixPQUFPLEVBQUU7Z0JBQ1AsK0RBQVE7YUFDVDtZQUNELFlBQVksRUFBRTtnQkFDWiwwRUFBYTthQUNkO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLDBFQUFhO2FBQ2Q7U0FDRixDQUFDO09BQ1csbUJBQW1CLENBQy9CO0lBQUQsMEJBQUM7Q0FBQTtBQUQrQiIsImZpbGUiOiIuL3NyYy9hcHAvbGF5b3V0L2RpcmVjdGl2ZXMvcmlja3NoYXcvcmlja3NoYXcubW9kdWxlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSAgICAgIGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgRDNNb2R1bGUgfSBmcm9tICcuLi9kMy9kMy5tb2R1bGUnO1xyXG5cclxuaW1wb3J0IHsgUmlja3NoYXdDaGFydCB9IGZyb20gJy4vcmlja3NoYXcuZGlyZWN0aXZlJztcclxuXHJcbmltcG9ydCAnanF1ZXJ5LXVpJztcclxuaW1wb3J0ICdqcXVlcnktdWkvdWkvd2lkZ2V0cy9zb3J0YWJsZS5qcyc7XHJcbmltcG9ydCAnanF1ZXJ5LXVpL3VpL3dpZGdldHMvcmVzaXphYmxlLmpzJztcclxuXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIEQzTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFJpY2tzaGF3Q2hhcnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFJpY2tzaGF3Q2hhcnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSaWNrc2hhd0NoYXJ0TW9kdWxlIHtcclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwL2xheW91dC9kaXJlY3RpdmVzL3JpY2tzaGF3L3JpY2tzaGF3Lm1vZHVsZS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/layout/directives/rickshaw/rickshaw.module.ts\n");

/***/ }),

/***/ "./src/app/statistics/charts/charts.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(d3, nv, jQuery) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Charts; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar Charts = /** @class */ (function () {\r\n    function Charts() {\r\n        this.data1 = [\r\n            [1, 20],\r\n            [2, 20],\r\n            [3, 40],\r\n            [4, 30],\r\n            [5, 40],\r\n            [6, 35],\r\n            [7, 47]\r\n        ];\r\n        this.data2 = [\r\n            [1, 13],\r\n            [2, 8],\r\n            [3, 17],\r\n            [4, 10],\r\n            [5, 17],\r\n            [6, 15],\r\n            [7, 16]\r\n        ];\r\n        this.data3 = [\r\n            [1, 23],\r\n            [2, 13],\r\n            [3, 33],\r\n            [4, 16],\r\n            [5, 32],\r\n            [6, 28],\r\n            [7, 31]\r\n        ];\r\n    }\r\n    Charts.prototype.applyNvd3Data = function () {\r\n        /* Inspired by Lee Byron's test data generator. */\r\n        function _stream_layers(n, m, o) {\r\n            if (arguments.length < 3) {\r\n                o = 0;\r\n            }\r\n            function bump(a) {\r\n                var x = 1 / (.1 + Math.random()), y = 2 * Math.random() - .5, z = 10 / (.1 + Math.random());\r\n                for (var i = 0; i < m; i++) {\r\n                    var w = (i / m - y) * z;\r\n                    a[i] += x * Math.exp(-w * w);\r\n                }\r\n            }\r\n            return d3.range(n).map(function () {\r\n                var a = [], i;\r\n                for (i = 0; i < m; i++) {\r\n                    a[i] = o + o * Math.random();\r\n                }\r\n                for (i = 0; i < 5; i++) {\r\n                    bump(a);\r\n                }\r\n                return a.map(function (d, iItem) {\r\n                    return { x: iItem, y: Math.max(0, d) };\r\n                });\r\n            });\r\n        }\r\n        function testData(streamNames, pointCount) {\r\n            var now = new Date().getTime(), day = 1000 * 60 * 60 * 24, // milliseconds\r\n            daysAgoCount = 60, daysAgo = daysAgoCount * day, daysAgoDate = now - daysAgo, pointsCount = pointCount || 45, // less for better performance\r\n            daysPerPoint = daysAgoCount / pointsCount;\r\n            return _stream_layers(streamNames.length, pointsCount, .1).map(function (data, i) {\r\n                return {\r\n                    key: streamNames[i],\r\n                    values: data.map(function (d, j) {\r\n                        return {\r\n                            x: daysAgoDate + d.x * day * daysPerPoint,\r\n                            y: Math.floor(d.y * 100) // just a coefficient,\r\n                        };\r\n                    })\r\n                };\r\n            });\r\n        }\r\n        this.nvd31Chart = nv.models.lineChart()\r\n            .useInteractiveGuideline(true)\r\n            .margin({ left: 28, bottom: 30, right: 0 })\r\n            .color(['#82DFD6', '#ddd']);\r\n        this.nvd31Chart.xAxis\r\n            .showMaxMin(false)\r\n            .tickFormat(function (d) { return d3.time.format('%b %d')(new Date(d)); });\r\n        this.nvd31Chart.yAxis\r\n            .showMaxMin(false)\r\n            .tickFormat(d3.format(',f'));\r\n        this.nvd31Data = testData(['Search', 'Referral'], 50).map(function (el, i) {\r\n            el.area = true;\r\n            return el;\r\n        });\r\n        this.nvd32Chart = nv.models.multiBarChart()\r\n            .margin({ left: 28, bottom: 30, right: 0 })\r\n            .color(['#F7653F', '#ddd']);\r\n        this.nvd32Chart.xAxis\r\n            .showMaxMin(false)\r\n            .tickFormat(function (d) { return d3.time.format('%b %d')(new Date(d)); });\r\n        this.nvd32Chart.yAxis\r\n            .showMaxMin(false)\r\n            .tickFormat(d3.format(',f'));\r\n        this.nvd32Data = testData(['Uploads', 'Downloads'], 10).map(function (el, i) {\r\n            el.area = true;\r\n            return el;\r\n        });\r\n    };\r\n    ;\r\n    Charts.prototype.ngOnInit = function () {\r\n        this.sparklineCompositeData = [\r\n            [2, 4, 6, 2, 7, 5, 3, 7, 8, 3, 6],\r\n            [5, 3, 7, 8, 3, 6, 2, 4, 6, 2, 7]\r\n        ];\r\n        this.sparklineCompositeOptions = [{\r\n                width: '99%',\r\n                fillColor: 'rgba(255,255,255,.7)',\r\n                height: '132px',\r\n                lineColor: 'transparent',\r\n                spotColor: '#c0d0f0',\r\n                minSpotColor: null,\r\n                maxSpotColor: null,\r\n                highlightSpotColor: '#ddd',\r\n                highlightLineColor: '#ddd'\r\n            }, {\r\n                lineColor: 'transparent',\r\n                spotColor: '#c0d0f0',\r\n                fillColor: 'rgba(78, 145, 206, 0.75)',\r\n                minSpotColor: null,\r\n                maxSpotColor: null,\r\n                highlightSpotColor: '#ddd',\r\n                highlightLineColor: '#ddd'\r\n            }];\r\n        this.sparklinePieData = [2, 4, 6];\r\n        this.sparklinePieOptions = {\r\n            type: 'pie',\r\n            width: '220px',\r\n            height: '220px',\r\n            sliceColors: ['rgb(242, 195, 77)', 'rgba(242, 195, 77, 0.3)', 'rgba(255,255,255,.2)']\r\n        };\r\n        this.applyNvd3Data();\r\n        this.morris1Options = {\r\n            resize: true,\r\n            data: [\r\n                { y: '2006', a: 100, b: 90 },\r\n                { y: '2007', a: 75, b: 65 },\r\n                { y: '2008', a: 50, b: 40 },\r\n                { y: '2009', a: 75, b: 65 },\r\n                { y: '2010', a: 50, b: 40 },\r\n                { y: '2011', a: 75, b: 65 },\r\n                { y: '2012', a: 100, b: 90 }\r\n            ],\r\n            xkey: 'y',\r\n            ykeys: ['a', 'b'],\r\n            labels: ['Series A', 'Series B'],\r\n            lineColors: ['#88C4EE', '#ccc'],\r\n            gridTextColor: '#f8f8f8',\r\n            gridTextWeight: 300,\r\n            gridTextFamily: 'Open Sans',\r\n            gridTextSize: 12\r\n        };\r\n        this.morris2Options = {\r\n            resize: true,\r\n            data: [\r\n                { y: '2006', a: 100, b: 90 },\r\n                { y: '2007', a: 75, b: 65 },\r\n                { y: '2008', a: 50, b: 40 },\r\n                { y: '2009', a: 75, b: 65 },\r\n                { y: '2010', a: 50, b: 40 },\r\n                { y: '2011', a: 75, b: 65 },\r\n                { y: '2012', a: 100, b: 90 }\r\n            ],\r\n            xkey: 'y',\r\n            ykeys: ['a', 'b'],\r\n            labels: ['Series A', 'Series B'],\r\n            lineColors: ['#f25118', '#f2c34d'],\r\n            gridTextColor: '#f8f8f8',\r\n            gridTextWeight: 300,\r\n            gridTextFamily: 'Open Sans',\r\n            gridTextSize: 12,\r\n            fillOpacity: 0.15\r\n        };\r\n        this.morris3Options = {\r\n            data: [\r\n                { label: 'Download Sales', value: 12 },\r\n                { label: 'In-Store Sales', value: 30 },\r\n                { label: 'Mail-Order Sales', value: 20 }\r\n            ],\r\n            colors: ['#f25118', '#f2c34d', '#3ecd74'],\r\n            backgroundColor: 'none',\r\n            labelColor: '#fff'\r\n        };\r\n        jQuery('.easy-pie-chart').easyPieChart({\r\n            barColor: '#5dc4bf',\r\n            trackColor: '#ddd',\r\n            scaleColor: false,\r\n            lineWidth: 10,\r\n            size: 120\r\n        });\r\n        var barCustomised1 = [\r\n            [1388534400000, 120],\r\n            [1391212800000, 70],\r\n            [1393632000000, 100],\r\n            [1396310400000, 60],\r\n            [1398902400000, 35]\r\n        ];\r\n        var barCustomised2 = [\r\n            [1388534400000, 90],\r\n            [1391212800000, 60],\r\n            [1393632000000, 30],\r\n            [1396310400000, 73],\r\n            [1398902400000, 30]\r\n        ];\r\n        var barCustomised3 = [\r\n            [1388534400000, 80],\r\n            [1391212800000, 40],\r\n            [1393632000000, 47],\r\n            [1396310400000, 22],\r\n            [1398902400000, 24]\r\n        ];\r\n        this.flotBarsData = [\r\n            {\r\n                label: 'Apple',\r\n                data: barCustomised1,\r\n                bars: {\r\n                    show: true,\r\n                    barWidth: 12 * 24 * 60 * 60 * 300,\r\n                    fill: true,\r\n                    lineWidth: 0,\r\n                    order: 1\r\n                }\r\n            },\r\n            {\r\n                label: 'Google',\r\n                data: barCustomised2,\r\n                bars: {\r\n                    show: true,\r\n                    barWidth: 12 * 24 * 60 * 60 * 300,\r\n                    fill: true,\r\n                    lineWidth: 0,\r\n                    order: 2\r\n                }\r\n            },\r\n            {\r\n                label: 'Facebook',\r\n                data: barCustomised3,\r\n                bars: {\r\n                    show: true,\r\n                    barWidth: 12 * 24 * 60 * 60 * 300,\r\n                    fill: true,\r\n                    lineWidth: 0,\r\n                    order: 3\r\n                }\r\n            }\r\n        ];\r\n        this.flotBarsOptions = {\r\n            series: {\r\n                bars: {\r\n                    show: true,\r\n                    barWidth: 12 * 24 * 60 * 60 * 350,\r\n                    lineWidth: 0,\r\n                    order: 1,\r\n                    fillColor: {\r\n                        colors: [{\r\n                                opacity: 1\r\n                            }, {\r\n                                opacity: 0.7\r\n                            }]\r\n                    }\r\n                }\r\n            },\r\n            xaxis: {\r\n                mode: 'time',\r\n                min: 1387497600000,\r\n                max: 1400112000000,\r\n                tickLength: 0,\r\n                tickSize: [1, 'month'],\r\n                axisLabel: 'Month',\r\n                axisLabelUseCanvas: true,\r\n                axisLabelFontSizePixels: 13,\r\n                axisLabelPadding: 15,\r\n                font: {\r\n                    lineHeight: 12,\r\n                    weight: 300,\r\n                    family: 'Open Sans',\r\n                    size: 12,\r\n                    color: '#f8f8f8'\r\n                }\r\n            },\r\n            yaxis: {\r\n                axisLabel: 'Value',\r\n                axisLabelUseCanvas: true,\r\n                axisLabelFontSizePixels: 13,\r\n                axisLabelPadding: 5,\r\n                font: {\r\n                    lineHeight: 12,\r\n                    weight: 300,\r\n                    family: 'Open Sans',\r\n                    size: 12,\r\n                    color: '#f8f8f8'\r\n                },\r\n            },\r\n            grid: {\r\n                hoverable: true,\r\n                borderWidth: 0\r\n            },\r\n            legend: {\r\n                backgroundColor: 'transparent',\r\n                labelBoxBorderColor: 'none'\r\n            },\r\n            colors: ['#64bd63', '#f0b518', '#F7653F']\r\n        };\r\n    };\r\n    Charts = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: '[charts]',\r\n            template: __webpack_require__(\"./src/app/statistics/charts/charts.template.html\"),\r\n            styles: [__webpack_require__(\"./src/app/statistics/charts/charts.style.scss\")],\r\n            encapsulation: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ViewEncapsulation\"].None\r\n        })\r\n    ], Charts);\r\n    return Charts;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/d3/d3.js\"), __webpack_require__(\"./node_modules/nvd3/build/nv.d3.js\"), __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/statistics/charts/charts.component.ts\n");

/***/ }),

/***/ "./src/app/statistics/charts/charts.style.scss":
/***/ (function(module, exports) {

eval("module.exports = \".rickshaw_graph .detail {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  z-index: 2;\\n  background: rgba(0, 0, 0, 0.1);\\n  bottom: 0;\\n  width: 1px;\\n  transition: opacity 0.25s linear;\\n  -moz-transition: opacity 0.25s linear;\\n  -o-transition: opacity 0.25s linear;\\n  -webkit-transition: opacity 0.25s linear; }\\n\\n.rickshaw_graph .detail.inactive {\\n  opacity: 0; }\\n\\n.rickshaw_graph .detail .item.active {\\n  opacity: 1; }\\n\\n.rickshaw_graph .detail .x_label {\\n  font-family: Arial, sans-serif;\\n  border-radius: 3px;\\n  padding: 6px;\\n  opacity: 0.5;\\n  border: 1px solid #e0e0e0;\\n  font-size: 12px;\\n  position: absolute;\\n  background: white;\\n  white-space: nowrap; }\\n\\n.rickshaw_graph .detail .x_label.left {\\n  left: 0; }\\n\\n.rickshaw_graph .detail .x_label.right {\\n  right: 0; }\\n\\n.rickshaw_graph .detail .item {\\n  position: absolute;\\n  z-index: 2;\\n  border-radius: 3px;\\n  padding: 0.25em;\\n  font-size: 12px;\\n  font-family: Arial, sans-serif;\\n  opacity: 0;\\n  background: rgba(0, 0, 0, 0.4);\\n  color: white;\\n  border: 1px solid rgba(0, 0, 0, 0.4);\\n  margin-left: 1em;\\n  margin-right: 1em;\\n  margin-top: -1em;\\n  white-space: nowrap; }\\n\\n.rickshaw_graph .detail .item.left {\\n  left: 0; }\\n\\n.rickshaw_graph .detail .item.right {\\n  right: 0; }\\n\\n.rickshaw_graph .detail .item.active {\\n  opacity: 1;\\n  background: rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_graph .detail .item:after {\\n  position: absolute;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  content: \\\"\\\";\\n  border: 5px solid transparent; }\\n\\n.rickshaw_graph .detail .item.left:after {\\n  top: 1em;\\n  left: -5px;\\n  margin-top: -5px;\\n  border-right-color: rgba(0, 0, 0, 0.8);\\n  border-left-width: 0; }\\n\\n.rickshaw_graph .detail .item.right:after {\\n  top: 1em;\\n  right: -5px;\\n  margin-top: -5px;\\n  border-left-color: rgba(0, 0, 0, 0.8);\\n  border-right-width: 0; }\\n\\n.rickshaw_graph .detail .dot {\\n  width: 4px;\\n  height: 4px;\\n  margin-left: -3px;\\n  margin-top: -3.5px;\\n  border-radius: 5px;\\n  position: absolute;\\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.6);\\n  box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  background: white;\\n  border-width: 2px;\\n  border-style: solid;\\n  display: none;\\n  background-clip: padding-box; }\\n\\n.rickshaw_graph .detail .dot.active {\\n  display: block; }\\n\\n/* graph */\\n.rickshaw_graph {\\n  position: relative; }\\n\\n.rickshaw_graph svg {\\n  display: block;\\n  overflow: hidden; }\\n\\n/* ticks */\\n.rickshaw_graph .x_tick {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 0px;\\n  border-left: 1px dotted rgba(0, 0, 0, 0.2);\\n  pointer-events: none; }\\n\\n.rickshaw_graph .x_tick .title {\\n  position: absolute;\\n  font-size: 12px;\\n  font-family: Arial, sans-serif;\\n  opacity: 0.5;\\n  white-space: nowrap;\\n  margin-left: 3px;\\n  bottom: 1px; }\\n\\n/* annotations */\\n.rickshaw_annotation_timeline {\\n  height: 1px;\\n  border-top: 1px solid #e0e0e0;\\n  margin-top: 10px;\\n  position: relative; }\\n\\n.rickshaw_annotation_timeline .annotation {\\n  position: absolute;\\n  height: 6px;\\n  width: 6px;\\n  margin-left: -2px;\\n  top: -3px;\\n  border-radius: 5px;\\n  background-color: rgba(0, 0, 0, 0.25); }\\n\\n.rickshaw_graph .annotation_line {\\n  position: absolute;\\n  top: 0;\\n  bottom: -6px;\\n  width: 0px;\\n  border-left: 2px solid rgba(0, 0, 0, 0.3);\\n  display: none; }\\n\\n.rickshaw_graph .annotation_line.active {\\n  display: block; }\\n\\n.rickshaw_graph .annotation_range {\\n  background: rgba(0, 0, 0, 0.1);\\n  display: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: -6px; }\\n\\n.rickshaw_graph .annotation_range.active {\\n  display: block; }\\n\\n.rickshaw_graph .annotation_range.active.offscreen {\\n  display: none; }\\n\\n.rickshaw_annotation_timeline .annotation .content {\\n  background: white;\\n  color: black;\\n  opacity: 0.9;\\n  padding: 5px 5px;\\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\\n  border-radius: 3px;\\n  position: relative;\\n  z-index: 20;\\n  font-size: 12px;\\n  padding: 6px 8px 8px;\\n  top: 18px;\\n  left: -11px;\\n  width: 160px;\\n  display: none;\\n  cursor: pointer; }\\n\\n.rickshaw_annotation_timeline .annotation .content:before {\\n  content: \\\"\\\\25b2\\\";\\n  position: absolute;\\n  top: -11px;\\n  color: white;\\n  text-shadow: 0 -1px 1px rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_annotation_timeline .annotation.active,\\n.rickshaw_annotation_timeline .annotation:hover {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  cursor: none; }\\n\\n.rickshaw_annotation_timeline .annotation .content:hover {\\n  z-index: 50; }\\n\\n.rickshaw_annotation_timeline .annotation.active .content {\\n  display: block; }\\n\\n.rickshaw_annotation_timeline .annotation:hover .content {\\n  display: block;\\n  z-index: 50; }\\n\\n.rickshaw_graph .y_axis,\\n.rickshaw_graph .x_axis_d3 {\\n  fill: none; }\\n\\n.rickshaw_graph .y_ticks .tick line,\\n.rickshaw_graph .x_ticks_d3 .tick {\\n  stroke: rgba(0, 0, 0, 0.16);\\n  stroke-width: 2px;\\n  shape-rendering: crisp-edges;\\n  pointer-events: none; }\\n\\n.rickshaw_graph .y_grid .tick,\\n.rickshaw_graph .x_grid_d3 .tick {\\n  z-index: -1;\\n  stroke: rgba(0, 0, 0, 0.2);\\n  stroke-width: 1px;\\n  stroke-dasharray: 1 1; }\\n\\n.rickshaw_graph .y_grid .tick[data-y-value=\\\"0\\\"] {\\n  stroke-dasharray: 1 0; }\\n\\n.rickshaw_graph .y_grid path,\\n.rickshaw_graph .x_grid_d3 path {\\n  fill: none;\\n  stroke: none; }\\n\\n.rickshaw_graph .y_ticks path,\\n.rickshaw_graph .x_ticks_d3 path {\\n  fill: none;\\n  stroke: #808080; }\\n\\n.rickshaw_graph .y_ticks text,\\n.rickshaw_graph .x_ticks_d3 text {\\n  opacity: 0.5;\\n  font-size: 12px;\\n  pointer-events: none; }\\n\\n.rickshaw_graph .x_tick.glow .title,\\n.rickshaw_graph .y_ticks.glow text {\\n  fill: black;\\n  color: black;\\n  text-shadow: -1px 1px 0 rgba(255, 255, 255, 0.1), 1px -1px 0 rgba(255, 255, 255, 0.1), 1px 1px 0 rgba(255, 255, 255, 0.1), 0px 1px 0 rgba(255, 255, 255, 0.1), 0px -1px 0 rgba(255, 255, 255, 0.1), 1px 0px 0 rgba(255, 255, 255, 0.1), -1px 0px 0 rgba(255, 255, 255, 0.1), -1px -1px 0 rgba(255, 255, 255, 0.1); }\\n\\n.rickshaw_graph .x_tick.inverse .title,\\n.rickshaw_graph .y_ticks.inverse text {\\n  fill: white;\\n  color: white;\\n  text-shadow: -1px 1px 0 rgba(0, 0, 0, 0.8), 1px -1px 0 rgba(0, 0, 0, 0.8), 1px 1px 0 rgba(0, 0, 0, 0.8), 0px 1px 0 rgba(0, 0, 0, 0.8), 0px -1px 0 rgba(0, 0, 0, 0.8), 1px 0px 0 rgba(0, 0, 0, 0.8), -1px 0px 0 rgba(0, 0, 0, 0.8), -1px -1px 0 rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_legend {\\n  font-family: Arial;\\n  font-size: 12px;\\n  color: white;\\n  background: #404040;\\n  display: inline-block;\\n  padding: 12px 5px;\\n  border-radius: 2px;\\n  position: relative; }\\n\\n.rickshaw_legend:hover {\\n  z-index: 10; }\\n\\n.rickshaw_legend .swatch {\\n  width: 10px;\\n  height: 10px;\\n  border: 1px solid rgba(0, 0, 0, 0.2); }\\n\\n.rickshaw_legend .line {\\n  clear: both;\\n  line-height: 140%;\\n  padding-right: 15px; }\\n\\n.rickshaw_legend .line .swatch {\\n  display: inline-block;\\n  margin-right: 3px;\\n  border-radius: 2px; }\\n\\n.rickshaw_legend .label {\\n  margin: 0;\\n  white-space: nowrap;\\n  display: inline;\\n  font-size: inherit;\\n  background-color: transparent;\\n  color: inherit;\\n  font-weight: normal;\\n  line-height: normal;\\n  padding: 0px;\\n  text-shadow: none; }\\n\\n.rickshaw_legend .action:hover {\\n  opacity: 0.6; }\\n\\n.rickshaw_legend .action {\\n  margin-right: 0.2em;\\n  font-size: 10px;\\n  opacity: 0.2;\\n  cursor: pointer;\\n  font-size: 14px; }\\n\\n.rickshaw_legend .line.disabled {\\n  opacity: 0.4; }\\n\\n.rickshaw_legend ul {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  margin: 2px;\\n  cursor: pointer; }\\n\\n.rickshaw_legend li {\\n  padding: 0 0 0 2px;\\n  min-width: 80px;\\n  white-space: nowrap; }\\n\\n.rickshaw_legend li:hover {\\n  background: rgba(255, 255, 255, 0.08);\\n  border-radius: 3px; }\\n\\n.rickshaw_legend li:active {\\n  background: rgba(255, 255, 255, 0.2);\\n  border-radius: 3px; }\\n\\n.morris-hover {\\n  position: absolute;\\n  z-index: 1000; }\\n\\n.morris-hover.morris-default-style {\\n  border-radius: 10px;\\n  padding: 6px;\\n  color: #666;\\n  background: rgba(255, 255, 255, 0.8);\\n  border: solid 2px rgba(230, 230, 230, 0.8);\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  text-align: center; }\\n\\n.morris-hover.morris-default-style .morris-hover-row-label {\\n  font-weight: bold;\\n  margin: 0.25em 0; }\\n\\n.morris-hover.morris-default-style .morris-hover-point {\\n  white-space: nowrap;\\n  margin: 0.1em 0; }\\n\\n/* nvd3 version 1.8.4 (https://github.com/novus/nvd3) 2016-07-03 */\\n.nvd3 .nv-axis {\\n  pointer-events: none;\\n  opacity: 1; }\\n\\n.nvd3 .nv-axis path {\\n  fill: none;\\n  stroke: #000;\\n  stroke-opacity: .75;\\n  shape-rendering: crispEdges; }\\n\\n.nvd3 .nv-axis path.domain {\\n  stroke-opacity: .75; }\\n\\n.nvd3 .nv-axis.nv-x path.domain {\\n  stroke-opacity: 0; }\\n\\n.nvd3 .nv-axis line {\\n  fill: none;\\n  stroke: #e5e5e5;\\n  shape-rendering: crispEdges; }\\n\\n.nvd3 .nv-axis .zero line,\\n.nvd3 .nv-axis line.zero {\\n  stroke-opacity: .75; }\\n\\n.nvd3 .nv-axis .nv-axisMaxMin text {\\n  font-weight: bold; }\\n\\n.nvd3 .x .nv-axis .nv-axisMaxMin text,\\n.nvd3 .x2 .nv-axis .nv-axisMaxMin text,\\n.nvd3 .x3 .nv-axis .nv-axisMaxMin text {\\n  text-anchor: middle; }\\n\\n.nvd3 .nv-axis.nv-disabled {\\n  opacity: 0; }\\n\\n.nvd3 .nv-bars rect {\\n  fill-opacity: .75;\\n  transition: fill-opacity 250ms linear;\\n  -moz-transition: fill-opacity 250ms linear;\\n  -webkit-transition: fill-opacity 250ms linear; }\\n\\n.nvd3 .nv-bars rect.hover {\\n  fill-opacity: 1; }\\n\\n.nvd3 .nv-bars .hover rect {\\n  fill: lightblue; }\\n\\n.nvd3 .nv-bars text {\\n  fill: transparent; }\\n\\n.nvd3 .nv-bars .hover text {\\n  fill: black; }\\n\\n.nvd3 .nv-multibar .nv-groups rect,\\n.nvd3 .nv-multibarHorizontal .nv-groups rect,\\n.nvd3 .nv-discretebar .nv-groups rect {\\n  stroke-opacity: 0;\\n  transition: fill-opacity 250ms linear;\\n  -moz-transition: fill-opacity 250ms linear;\\n  -webkit-transition: fill-opacity 250ms linear; }\\n\\n.nvd3 .nv-multibar .nv-groups rect:hover,\\n.nvd3 .nv-multibarHorizontal .nv-groups rect:hover,\\n.nvd3 .nv-candlestickBar .nv-ticks rect:hover,\\n.nvd3 .nv-discretebar .nv-groups rect:hover {\\n  fill-opacity: 1; }\\n\\n.nvd3 .nv-discretebar .nv-groups text,\\n.nvd3 .nv-multibarHorizontal .nv-groups text {\\n  font-weight: bold;\\n  fill: black;\\n  stroke: transparent; }\\n\\n/* boxplot CSS */\\n.nvd3 .nv-boxplot circle {\\n  fill-opacity: 0.5; }\\n\\n.nvd3 .nv-boxplot circle:hover {\\n  fill-opacity: 1; }\\n\\n.nvd3 .nv-boxplot rect:hover {\\n  fill-opacity: 1; }\\n\\n.nvd3 line.nv-boxplot-median {\\n  stroke: black; }\\n\\n.nv-boxplot-tick:hover {\\n  stroke-width: 2.5px; }\\n\\n/* bullet */\\n.nvd3.nv-bullet {\\n  font: 10px sans-serif; }\\n\\n.nvd3.nv-bullet .nv-measure {\\n  fill-opacity: .8; }\\n\\n.nvd3.nv-bullet .nv-measure:hover {\\n  fill-opacity: 1; }\\n\\n.nvd3.nv-bullet .nv-marker {\\n  stroke: #000;\\n  stroke-width: 2px; }\\n\\n.nvd3.nv-bullet .nv-markerTriangle {\\n  stroke: #000;\\n  fill: #fff;\\n  stroke-width: 1.5px; }\\n\\n.nvd3.nv-bullet .nv-markerLine {\\n  stroke: #000;\\n  stroke-width: 1.5px; }\\n\\n.nvd3.nv-bullet .nv-tick line {\\n  stroke: #666;\\n  stroke-width: .5px; }\\n\\n.nvd3.nv-bullet .nv-range.nv-s0 {\\n  fill: #eee; }\\n\\n.nvd3.nv-bullet .nv-range.nv-s1 {\\n  fill: #ddd; }\\n\\n.nvd3.nv-bullet .nv-range.nv-s2 {\\n  fill: #ccc; }\\n\\n.nvd3.nv-bullet .nv-title {\\n  font-size: 14px;\\n  font-weight: bold; }\\n\\n.nvd3.nv-bullet .nv-subtitle {\\n  fill: #999; }\\n\\n.nvd3.nv-bullet .nv-range {\\n  fill: #bababa;\\n  fill-opacity: .4; }\\n\\n.nvd3.nv-bullet .nv-range:hover {\\n  fill-opacity: .7; }\\n\\n.nvd3.nv-candlestickBar .nv-ticks .nv-tick {\\n  stroke-width: 1px; }\\n\\n.nvd3.nv-candlestickBar .nv-ticks .nv-tick.hover {\\n  stroke-width: 2px; }\\n\\n.nvd3.nv-candlestickBar .nv-ticks .nv-tick.positive rect {\\n  stroke: #2ca02c;\\n  fill: #2ca02c; }\\n\\n.nvd3.nv-candlestickBar .nv-ticks .nv-tick.negative rect {\\n  stroke: #d62728;\\n  fill: #d62728; }\\n\\n.with-transitions .nv-candlestickBar .nv-ticks .nv-tick {\\n  transition: stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -moz-transition: stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -webkit-transition: stroke-width 250ms linear, stroke-opacity 250ms linear; }\\n\\n.nvd3.nv-candlestickBar .nv-ticks line {\\n  stroke: #333; }\\n\\n.nv-force-node {\\n  stroke: #fff;\\n  stroke-width: 1.5px; }\\n\\n.nv-force-link {\\n  stroke: #999;\\n  stroke-opacity: .6; }\\n\\n.nv-force-node text {\\n  stroke-width: 0px; }\\n\\n.nvd3 .nv-legend .nv-disabled rect {\\n  /*fill-opacity: 0;*/ }\\n\\n.nvd3 .nv-check-box .nv-box {\\n  fill-opacity: 0;\\n  stroke-width: 2; }\\n\\n.nvd3 .nv-check-box .nv-check {\\n  fill-opacity: 0;\\n  stroke-width: 4; }\\n\\n.nvd3 .nv-series.nv-disabled .nv-check-box .nv-check {\\n  fill-opacity: 0;\\n  stroke-opacity: 0; }\\n\\n.nvd3 .nv-controlsWrap .nv-legend .nv-check-box .nv-check {\\n  opacity: 0; }\\n\\n/* line plus bar */\\n.nvd3.nv-linePlusBar .nv-bar rect {\\n  fill-opacity: .75; }\\n\\n.nvd3.nv-linePlusBar .nv-bar rect:hover {\\n  fill-opacity: 1; }\\n\\n.nvd3 .nv-groups path.nv-line {\\n  fill: none; }\\n\\n.nvd3 .nv-groups path.nv-area {\\n  stroke: none; }\\n\\n.nvd3.nv-line .nvd3.nv-scatter .nv-groups .nv-point {\\n  fill-opacity: 0;\\n  stroke-opacity: 0; }\\n\\n.nvd3.nv-scatter.nv-single-point .nv-groups .nv-point {\\n  fill-opacity: .5 !important;\\n  stroke-opacity: .5 !important; }\\n\\n.with-transitions .nvd3 .nv-groups .nv-point {\\n  transition: stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -moz-transition: stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -webkit-transition: stroke-width 250ms linear, stroke-opacity 250ms linear; }\\n\\n.nvd3.nv-scatter .nv-groups .nv-point.hover,\\n.nvd3 .nv-groups .nv-point.hover {\\n  stroke-width: 7px;\\n  fill-opacity: .95 !important;\\n  stroke-opacity: .95 !important; }\\n\\n.nvd3 .nv-point-paths path {\\n  stroke: #aaa;\\n  stroke-opacity: 0;\\n  fill: #eee;\\n  fill-opacity: 0; }\\n\\n.nvd3 .nv-indexLine {\\n  cursor: ew-resize; }\\n\\n/********************\\r\\n * SVG CSS\\r\\n */\\n/********************\\r\\n  Default CSS for an svg element nvd3 used\\r\\n*/\\nsvg.nvd3-svg {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -ms-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  display: block;\\n  width: 100%;\\n  height: 100%; }\\n\\n/********************\\r\\n  Box shadow and border radius styling\\r\\n*/\\n.nvtooltip.with-3d-shadow, .with-3d-shadow .nvtooltip {\\n  -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\n  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\n  -webkit-border-radius: 5px;\\n  -moz-border-radius: 5px;\\n  border-radius: 5px; }\\n\\n.nvd3 text {\\n  font: normal 12px Arial; }\\n\\n.nvd3 .title {\\n  font: bold 14px Arial; }\\n\\n.nvd3 .nv-background {\\n  fill: white;\\n  fill-opacity: 0; }\\n\\n.nvd3.nv-noData {\\n  font-size: 18px;\\n  font-weight: bold; }\\n\\n/**********\\r\\n*  Brush\\r\\n*/\\n.nv-brush .extent {\\n  fill-opacity: .125;\\n  shape-rendering: crispEdges; }\\n\\n.nv-brush .resize path {\\n  fill: #eee;\\n  stroke: #666; }\\n\\n/**********\\r\\n*  Legend\\r\\n*/\\n.nvd3 .nv-legend .nv-series {\\n  cursor: pointer; }\\n\\n.nvd3 .nv-legend .nv-disabled circle {\\n  fill-opacity: 0; }\\n\\n/* focus */\\n.nvd3 .nv-brush .extent {\\n  fill-opacity: 0 !important; }\\n\\n.nvd3 .nv-brushBackground rect {\\n  stroke: #000;\\n  stroke-width: .4;\\n  fill: #fff;\\n  fill-opacity: .7; }\\n\\n/**********\\r\\n*  Print\\r\\n*/\\n@media print {\\n  .nvd3 text {\\n    stroke-width: 0;\\n    fill-opacity: 1; } }\\n\\n.nvd3.nv-ohlcBar .nv-ticks .nv-tick {\\n  stroke-width: 1px; }\\n\\n.nvd3.nv-ohlcBar .nv-ticks .nv-tick.hover {\\n  stroke-width: 2px; }\\n\\n.nvd3.nv-ohlcBar .nv-ticks .nv-tick.positive {\\n  stroke: #2ca02c; }\\n\\n.nvd3.nv-ohlcBar .nv-ticks .nv-tick.negative {\\n  stroke: #d62728; }\\n\\n.nvd3 .background path {\\n  fill: none;\\n  stroke: #EEE;\\n  stroke-opacity: .4;\\n  shape-rendering: crispEdges; }\\n\\n.nvd3 .foreground path {\\n  fill: none;\\n  stroke-opacity: .7; }\\n\\n.nvd3 .nv-parallelCoordinates-brush .extent {\\n  fill: #fff;\\n  fill-opacity: .6;\\n  stroke: gray;\\n  shape-rendering: crispEdges; }\\n\\n.nvd3 .nv-parallelCoordinates .hover {\\n  fill-opacity: 1;\\n  stroke-width: 3px; }\\n\\n.nvd3 .missingValuesline line {\\n  fill: none;\\n  stroke: black;\\n  stroke-width: 1;\\n  stroke-opacity: 1;\\n  stroke-dasharray: 5, 5; }\\n\\n.nvd3.nv-pie path {\\n  stroke-opacity: 0;\\n  transition: fill-opacity 250ms linear, stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -moz-transition: fill-opacity 250ms linear, stroke-width 250ms linear, stroke-opacity 250ms linear;\\n  -webkit-transition: fill-opacity 250ms linear, stroke-width 250ms linear, stroke-opacity 250ms linear; }\\n\\n.nvd3.nv-pie .nv-pie-title {\\n  font-size: 24px;\\n  fill: rgba(19, 196, 249, 0.59); }\\n\\n.nvd3.nv-pie .nv-slice text {\\n  stroke: #000;\\n  stroke-width: 0; }\\n\\n.nvd3.nv-pie path {\\n  stroke: #fff;\\n  stroke-width: 1px;\\n  stroke-opacity: 1; }\\n\\n.nvd3.nv-pie path {\\n  fill-opacity: .7; }\\n\\n.nvd3.nv-pie .hover path {\\n  fill-opacity: 1; }\\n\\n.nvd3.nv-pie .nv-label {\\n  pointer-events: none; }\\n\\n.nvd3.nv-pie .nv-label rect {\\n  fill-opacity: 0;\\n  stroke-opacity: 0; }\\n\\n/* scatter */\\n.nvd3 .nv-groups .nv-point.hover {\\n  stroke-width: 20px;\\n  stroke-opacity: .5; }\\n\\n.nvd3 .nv-scatter .nv-point.hover {\\n  fill-opacity: 1; }\\n\\n.nv-noninteractive {\\n  pointer-events: none; }\\n\\n.nv-distx, .nv-disty {\\n  pointer-events: none; }\\n\\n/* sparkline */\\n.nvd3.nv-sparkline path {\\n  fill: none; }\\n\\n.nvd3.nv-sparklineplus g.nv-hoverValue {\\n  pointer-events: none; }\\n\\n.nvd3.nv-sparklineplus .nv-hoverValue line {\\n  stroke: #333;\\n  stroke-width: 1.5px; }\\n\\n.nvd3.nv-sparklineplus,\\n.nvd3.nv-sparklineplus g {\\n  pointer-events: all; }\\n\\n.nvd3 .nv-hoverArea {\\n  fill-opacity: 0;\\n  stroke-opacity: 0; }\\n\\n.nvd3.nv-sparklineplus .nv-xValue,\\n.nvd3.nv-sparklineplus .nv-yValue {\\n  stroke-width: 0;\\n  font-size: .9em;\\n  font-weight: normal; }\\n\\n.nvd3.nv-sparklineplus .nv-yValue {\\n  stroke: #f66; }\\n\\n.nvd3.nv-sparklineplus .nv-maxValue {\\n  stroke: #2ca02c;\\n  fill: #2ca02c; }\\n\\n.nvd3.nv-sparklineplus .nv-minValue {\\n  stroke: #d62728;\\n  fill: #d62728; }\\n\\n.nvd3.nv-sparklineplus .nv-currentValue {\\n  font-weight: bold;\\n  font-size: 1.1em; }\\n\\n/* stacked area */\\n.nvd3.nv-stackedarea path.nv-area {\\n  fill-opacity: .7;\\n  stroke-opacity: 0;\\n  transition: fill-opacity 250ms linear, stroke-opacity 250ms linear;\\n  -moz-transition: fill-opacity 250ms linear, stroke-opacity 250ms linear;\\n  -webkit-transition: fill-opacity 250ms linear, stroke-opacity 250ms linear; }\\n\\n.nvd3.nv-stackedarea path.nv-area.hover {\\n  fill-opacity: .9; }\\n\\n.nvd3.nv-stackedarea .nv-groups .nv-point {\\n  stroke-opacity: 0;\\n  fill-opacity: 0; }\\n\\n.nvtooltip {\\n  position: absolute;\\n  background-color: white;\\n  color: black;\\n  padding: 1px;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  z-index: 10000;\\n  display: block;\\n  font-family: Arial;\\n  font-size: 13px;\\n  text-align: left;\\n  pointer-events: none;\\n  white-space: nowrap;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.nvtooltip {\\n  background: rgba(255, 255, 255, 0.8);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  border-radius: 4px; }\\n\\n/*Give tooltips that old fade in transition by\\r\\n    putting a \\\"with-transitions\\\" class on the container div.\\r\\n*/\\n.nvtooltip.with-transitions, .with-transitions .nvtooltip {\\n  transition: opacity 50ms linear;\\n  -moz-transition: opacity 50ms linear;\\n  -webkit-transition: opacity 50ms linear;\\n  transition-delay: 200ms;\\n  -moz-transition-delay: 200ms;\\n  -webkit-transition-delay: 200ms; }\\n\\n.nvtooltip.x-nvtooltip,\\n.nvtooltip.y-nvtooltip {\\n  padding: 8px; }\\n\\n.nvtooltip h3 {\\n  margin: 0;\\n  padding: 4px 14px;\\n  line-height: 18px;\\n  font-weight: normal;\\n  background-color: rgba(247, 247, 247, 0.75);\\n  color: black;\\n  text-align: center;\\n  border-bottom: 1px solid #ebebeb;\\n  -webkit-border-radius: 5px 5px 0 0;\\n  -moz-border-radius: 5px 5px 0 0;\\n  border-radius: 5px 5px 0 0; }\\n\\n.nvtooltip p {\\n  margin: 0;\\n  padding: 5px 14px;\\n  text-align: center; }\\n\\n.nvtooltip span {\\n  display: inline-block;\\n  margin: 2px 0; }\\n\\n.nvtooltip table {\\n  margin: 6px;\\n  border-spacing: 0; }\\n\\n.nvtooltip table td {\\n  padding: 2px 9px 2px 0;\\n  vertical-align: middle; }\\n\\n.nvtooltip table td.key {\\n  font-weight: normal; }\\n\\n.nvtooltip table td.key.total {\\n  font-weight: bold; }\\n\\n.nvtooltip table td.value {\\n  text-align: right;\\n  font-weight: bold; }\\n\\n.nvtooltip table td.percent {\\n  color: darkgray; }\\n\\n.nvtooltip table tr.highlight td {\\n  padding: 1px 9px 1px 0;\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  border-top-style: solid;\\n  border-top-width: 1px; }\\n\\n.nvtooltip table td.legend-color-guide div {\\n  width: 8px;\\n  height: 8px;\\n  vertical-align: middle; }\\n\\n.nvtooltip table td.legend-color-guide div {\\n  width: 12px;\\n  height: 12px;\\n  border: 1px solid #999; }\\n\\n.nvtooltip .footer {\\n  padding: 3px;\\n  text-align: center; }\\n\\n.nvtooltip-pending-removal {\\n  pointer-events: none;\\n  display: none; }\\n\\n/****\\r\\nInteractive Layer\\r\\n*/\\n.nvd3 .nv-interactiveGuideLine {\\n  pointer-events: none; }\\n\\n.nvd3 line.nv-guideline {\\n  stroke: #ccc; }\\n\\n.stats-row.centered {\\n  text-align: center; }\\n\\n.stat-item + .stat-item {\\n  padding-left: 15px; }\\n\\n.stat-item {\\n  display: inline-block;\\n  padding-right: 15px; }\\n  .stat-item.stat-item-mini-chart {\\n    position: relative;\\n    top: -15px;\\n    padding-left: 0; }\\n  .stat-item .name {\\n    margin-top: 10px;\\n    font-size: 1.1rem; }\\n  .stat-item .value {\\n    margin-bottom: 10px;\\n    font-size: 1.1rem;\\n    font-weight: bold; }\\n\\n/***********************/\\n/*   Easy Pie Chart    */\\n/***********************/\\n.easy-pie-chart {\\n  position: relative;\\n  display: inline-block;\\n  line-height: 120px;\\n  height: 120px;\\n  width: 120px;\\n  text-align: center;\\n  color: #f8f8f8; }\\n  .easy-pie-chart canvas {\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n\\n/***********************/\\n/*         Flot        */\\n/***********************/\\n.chart-tooltip {\\n  position: fixed;\\n  padding: 0.25rem 10px;\\n  border: 1px solid #ddd;\\n  font-size: 0.9rem;\\n  background-color: #fff; }\\n\\n[flot-chart] .legend .legendLabel {\\n  color: #f8f8f8; }\\n\\n/***********************/\\n/*         Morris        */\\n/***********************/\\n.morris-hover.morris-default-style {\\n  color: #f8f8f8;\\n  background-color: rgba(51, 51, 51, 0.6);\\n  border: none; }\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/statistics/charts/charts.style.scss\n");

/***/ }),

/***/ "./src/app/statistics/charts/charts.template.html":
/***/ (function(module, exports) {

eval("module.exports = \"<h2 class=\\\"page-title\\\">Charts\\r\\n  <small>Visual Charts & Graphs</small>\\r\\n</h2>\\r\\n<div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-xl-5 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Flot <span class=\\\"fw-semi-bold\\\">Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <div class=\\\"mt mb\\\" id=\\\"flot-main\\\" style=\\\"width: 100%; height: 260px;\\\" flot-chart-animator\\r\\n               [data] = \\\"[{\\r\\n                        label: 'Traffic',\\r\\n                        data: data3,\\r\\n                        lines: {\\r\\n                            fill: .3,\\r\\n                            lineWidth: 0\\r\\n                        },\\r\\n                        color:['#ccc']\\r\\n                    },{\\r\\n                        label: 'Traffic',\\r\\n                        data: data2,\\r\\n                        lines: {\\r\\n                            fill: 0.6,\\r\\n                            lineWidth: 0\\r\\n                        },\\r\\n                        color:['#F7653F']\\r\\n                    },{\\r\\n                        label: 'Traffic',\\r\\n                        data: data1,\\r\\n                        animator: {steps: 60, duration: 1000, start:0},\\r\\n                        lines: {lineWidth:2},\\r\\n                        shadowSize:0,\\r\\n                        color: '#F7553F'\\r\\n                }]\\\"></div>\\r\\n          <div class=\\\"chart-tooltip\\\" id=\\\"flot-main-tooltip\\\" style=\\\"opacity: 0\\\"></div>\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Flot is a <span class=\\\"fw-semi-bold\\\">pure</span> JavaScript plotting library for jQuery, with a\\r\\n            focus on simple usage, attractive looks and interactive features.\\r\\n          </p>\\r\\n          <h4 class=\\\"mt\\\">Interactive <span class=\\\"fw-semi-bold\\\">Sparklines</span></h4>\\r\\n          <div class=\\\"row mt\\\">\\r\\n            <div class=\\\"col-md-6 col-12\\\">\\r\\n              <div class=\\\"stats-row\\\">\\r\\n                <div class=\\\"stat-item\\\">\\r\\n                  <p class=\\\"value5 fw-thin\\\">34 567</p>\\r\\n                  <h6 class=\\\"name m-0\\\">Overall Values</h6>\\r\\n                </div>\\r\\n                <div class=\\\"stat-item stat-item-mini-chart\\\">\\r\\n                  <div class=\\\"sparkline\\\" jq-sparkline [data]=\\\"[9,12,14,15,10,14,20]\\\" [options] = \\\"{type: 'bar', barColor: '#f0b518', height: '30px', barWidth: 6, barSpacing: 2}\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-12\\\">\\r\\n              <div class=\\\"stats-row\\\">\\r\\n                <div class=\\\"stat-item\\\">\\r\\n                  <p class=\\\"value5 fw-thin\\\">34 567</p>\\r\\n                  <h6 class=\\\"name  m-0\\\">Overall Values</h6>\\r\\n                </div>\\r\\n                <div class=\\\"stat-item stat-item-mini-chart\\\">\\r\\n                  <div class=\\\"sparkline\\\" jq-sparkline [data]=\\\"[9,12,14,15,10,14,20]\\\" [options] = \\\"{type: 'bar', barColor: '#FFA587', height: '30px', barWidth: 6, barSpacing: 2}\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            This jQuery plugin generates sparklines (small inline charts) directly in the browser using\\r\\n            data supplied either inline in the HTML, or via javascript.\\r\\n          </p>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-xl-4 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Line <span class=\\\"fw-semi-bold\\\">Sparkline</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Each example displayed below takes just 1 line of HTML or javascript to generate.\\r\\n          </p>\\r\\n          <div class=\\\"stats-row centered mt mb\\\">\\r\\n            <div class=\\\"stat-item\\\">\\r\\n              <h6 class=\\\"name\\\">Overall Growth</h6>\\r\\n              <p class=\\\"value\\\">43.75%</p>\\r\\n            </div>\\r\\n            <div class=\\\"stat-item\\\">\\r\\n              <h6 class=\\\"name\\\">Montly</h6>\\r\\n              <p class=\\\"value\\\">86.34%</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            <span class=\\\"fw-semi-bold\\\">17% higher</span> than last month</p>\\r\\n          <div jq-sparkline [data]=\\\"sparklineCompositeData\\\" [options]=\\\"sparklineCompositeOptions\\\" class=\\\"chart-overflow-bottom\\\"></div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-xl-3 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Sparkline <span class=\\\"fw-semi-bold\\\">Pie Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Each example displayed below takes just 1 line of HTML or javascript to generate.\\r\\n          </p>\\r\\n          <div jq-sparkline [data]=\\\"sparklinePieData\\\" [options]=\\\"sparklinePieOptions\\\" class=\\\"chart-overflow-bottom mb-0 text-center\\\"></div>\\r\\n        </div>\\r\\n      </section>\\r\\n    <!--</div>-->\\r\\n  </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-7 col-xl-8 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            <span class=\\\"fw-semi-bold\\\">D3</span> Charts\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            This project is an attempt to build re-usable charts and chart components for <span class=\\\"fw-semi-bold\\\">d3.js</span> without\\r\\n            taking away the power that d3.js gives you.\\r\\n          </p>\\r\\n          <div nvd3-chart [chart]=\\\"nvd31Chart\\\" [datum]=\\\"nvd31Data\\\">\\r\\n            <svg></svg>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-5 col-xl-4 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            <span class=\\\"fw-semi-bold\\\">D3</span> Charts\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            This is a very young collection of components, with the goal of keeping these components\\r\\n            very customizeable.\\r\\n          </p>\\r\\n          <div nvd3-chart [chart]=\\\"nvd32Chart\\\" [datum]=\\\"nvd32Data\\\">\\r\\n            <svg></svg>\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Morris <span class=\\\"fw-semi-bold\\\">Area Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Good-looking charts shouldn't be difficult.\\r\\n            The public API is terribly simple. It's just one function: <code>Morris.Line(options)</code>,\\r\\n            where options is an object containing some of the following configuration options.\\r\\n          </p>\\r\\n          <div morris-chart [type]=\\\"'area'\\\" [height]=\\\"343\\\" [options]=\\\"morris2Options\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Morris <span class=\\\"fw-semi-bold\\\">Line Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Good-looking charts shouldn't be difficult.\\r\\n            The public API is terribly simple. It's just one function: <code>Morris.Line(options)</code>,\\r\\n            where options is an object containing some of the following configuration options.\\r\\n          </p>\\r\\n          <div morris-chart [type]=\\\"'line'\\\" [height]=\\\"343\\\" [options]=\\\"morris1Options\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-xl-4 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Easy <span class=\\\"fw-semi-bold\\\">Pie Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body clearfix\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <div class=\\\"easy-pie-chart mb-lg\\\" data-percent=\\\"73\\\">73</div>\\r\\n          </div>\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Easy pie chart is a jQuery plugin that uses the canvas element to render simple pie charts\\r\\n            for single values. These charts are highly customizable, very easy to implement, scale to\\r\\n            the resolution of the display of the client to provide sharp charts even on retina displays.\\r\\n          </p>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-xl-4 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Morris <span class=\\\"fw-semi-bold\\\">Donut Charts</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <div morris-chart [type]=\\\"'donut'\\\" [height]=\\\"180\\\" [options]=\\\"morris3Options\\\">\\r\\n          </div>\\r\\n          <p class=\\\"fs-sm\\\">\\r\\n            Donuts a great for representing some parted information like traffice sources,\\r\\n            disk partitions, etc.\\r\\n            This really couldn't be easier. Create a Donut chart using <code>Morris.Donut(options)</code>,\\r\\n            with only few options.\\r\\n          </p>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-12 col-xl-4 col-12\\\">\\r\\n      <section class=\\\"widget\\\" widget>\\r\\n        <header>\\r\\n          <h4>\\r\\n            Flot <span class=\\\"fw-semi-bold\\\">Bars</span>\\r\\n          </h4>\\r\\n          <div class=\\\"widget-controls\\\">\\r\\n            <a data-widgster=\\\"expand\\\" title=\\\"Expand\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i></a>\\r\\n            <a data-widgster=\\\"collapse\\\" title=\\\"Collapse\\\" href=\\\"#\\\"><i class=\\\"glyphicon glyphicon-chevron-down\\\"></i></a>\\r\\n            <a href=\\\"#\\\" data-widgster=\\\"close\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></a>\\r\\n          </div>\\r\\n        </header>\\r\\n        <div class=\\\"widget-body\\\">\\r\\n          <div class=\\\"mt-lg\\\" flot-chart\\r\\n               [data]=\\\"flotBarsData\\\"\\r\\n               [options]=\\\"flotBarsOptions\\\"\\r\\n               style=\\\"width: 100%; height: 260px;\\\"></div>\\r\\n          <p class=\\\"fs-sm mt\\\">\\r\\n            Flot is a <span class=\\\"fw-semi-bold\\\">pure</span> JavaScript plotting library for jQuery, with a\\r\\n            focus on simple usage, attractive looks and interactive features.\\r\\n          </p>\\r\\n        </div>\\r\\n      </section>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/statistics/charts/charts.template.html\n");

/***/ }),

/***/ "./src/app/statistics/charts/flot-chart-animator/flot-chart-animator.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FlotChartAnimator; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar FlotChartAnimator = /** @class */ (function () {\r\n    function FlotChartAnimator(el) {\r\n        this.$el = jQuery(el.nativeElement);\r\n    }\r\n    FlotChartAnimator.prototype.render = function () {\r\n        var data = this.data;\r\n        var $el = this.$el;\r\n        var d = this;\r\n        function resize() {\r\n            jQuery.plotAnimator($el, data, {\r\n                xaxis: {\r\n                    tickLength: 0,\r\n                    tickColor: 'transparent',\r\n                    tickDecimals: 0,\r\n                    min: 2,\r\n                    font: {\r\n                        lineHeight: 12,\r\n                        weight: 300,\r\n                        family: 'Open Sans',\r\n                        size: 12,\r\n                        color: '#f8f8f8'\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    tickDecimals: 0,\r\n                    tickColor: 'transparent',\r\n                    font: {\r\n                        lineHeight: 12,\r\n                        weight: 300,\r\n                        family: 'Open Sans',\r\n                        size: 12,\r\n                        color: '#f8f8f8'\r\n                    }\r\n                },\r\n                grid: {\r\n                    backgroundColor: { colors: ['transparent', 'transparent'] },\r\n                    borderWidth: 0,\r\n                    borderColor: 'transparent',\r\n                    margin: 0,\r\n                    minBorderMargin: 0,\r\n                    labelMargin: 20,\r\n                    hoverable: true,\r\n                    clickable: true,\r\n                    mouseActiveRadius: 6\r\n                },\r\n                legend: false\r\n            });\r\n        }\r\n        jQuery(window).on('sn:resize', resize);\r\n        resize();\r\n    };\r\n    FlotChartAnimator.prototype.ngOnInit = function () {\r\n        this.render();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:type\", Object)\r\n    ], FlotChartAnimator.prototype, \"data\", void 0);\r\n    FlotChartAnimator = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Directive\"])({\r\n            selector: '[flot-chart-animator]'\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ElementRef\"]])\r\n    ], FlotChartAnimator);\r\n    return FlotChartAnimator;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL2NoYXJ0cy9mbG90LWNoYXJ0LWFuaW1hdG9yL2Zsb3QtY2hhcnQtYW5pbWF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBNkQ7QUFRN0Q7SUFJRSwyQkFBWSxFQUFjO1FBQ3hCLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsa0NBQU0sR0FBTjtRQUNFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNuQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFYjtZQUNFLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRTtnQkFDN0IsS0FBSyxFQUFFO29CQUNMLFVBQVUsRUFBRSxDQUFDO29CQUNiLFNBQVMsRUFBRSxhQUFhO29CQUN4QixZQUFZLEVBQUUsQ0FBQztvQkFDZixHQUFHLEVBQUUsQ0FBQztvQkFDTixJQUFJLEVBQUc7d0JBQ0wsVUFBVSxFQUFFLEVBQUU7d0JBQ2QsTUFBTSxFQUFFLEdBQUc7d0JBQ1gsTUFBTSxFQUFFLFdBQVc7d0JBQ25CLElBQUksRUFBRSxFQUFFO3dCQUNSLEtBQUssRUFBRSxTQUFTO3FCQUNqQjtpQkFDRjtnQkFDRCxLQUFLLEVBQUU7b0JBQ0wsWUFBWSxFQUFFLENBQUM7b0JBQ2YsU0FBUyxFQUFFLGFBQWE7b0JBQ3hCLElBQUksRUFBRzt3QkFDTCxVQUFVLEVBQUUsRUFBRTt3QkFDZCxNQUFNLEVBQUUsR0FBRzt3QkFDWCxNQUFNLEVBQUUsV0FBVzt3QkFDbkIsSUFBSSxFQUFFLEVBQUU7d0JBQ1IsS0FBSyxFQUFFLFNBQVM7cUJBQ2pCO2lCQUNGO2dCQUNELElBQUksRUFBRTtvQkFDSixlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBRSxhQUFhLEVBQUUsYUFBYSxDQUFFLEVBQUU7b0JBQzdELFdBQVcsRUFBRSxDQUFDO29CQUNkLFdBQVcsRUFBRSxhQUFhO29CQUMxQixNQUFNLEVBQUUsQ0FBQztvQkFDVCxlQUFlLEVBQUUsQ0FBQztvQkFDbEIsV0FBVyxFQUFFLEVBQUU7b0JBQ2YsU0FBUyxFQUFFLElBQUk7b0JBQ2YsU0FBUyxFQUFFLElBQUk7b0JBQ2YsaUJBQWlCLEVBQUUsQ0FBQztpQkFDckI7Z0JBQ0QsTUFBTSxFQUFFLEtBQUs7YUFDZCxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdkMsTUFBTSxFQUFFLENBQUM7SUFDWCxDQUFDO0lBRUQsb0NBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBMURRO1FBQVIsNERBQUssRUFBRTs7bURBQVc7SUFGUixpQkFBaUI7UUFKN0IsZ0VBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx1QkFBdUI7U0FDbEMsQ0FBQzt3RkFNZ0IseURBQVU7T0FKZixpQkFBaUIsQ0E2RDdCO0lBQUQsd0JBQUM7Q0FBQTtBQTdENkIiLCJmaWxlIjoiLi9zcmMvYXBwL3N0YXRpc3RpY3MvY2hhcnRzL2Zsb3QtY2hhcnQtYW5pbWF0b3IvZmxvdC1jaGFydC1hbmltYXRvci5kaXJlY3RpdmUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5kZWNsYXJlIGxldCBqUXVlcnk6IGFueTtcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2Zsb3QtY2hhcnQtYW5pbWF0b3JdJ1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIEZsb3RDaGFydEFuaW1hdG9yIHtcclxuICAkZWw6IGFueTtcclxuICBASW5wdXQoKSBkYXRhOiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XHJcbiAgICB0aGlzLiRlbCA9IGpRdWVyeShlbC5uYXRpdmVFbGVtZW50KTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpOiB2b2lkIHtcclxuICAgIGxldCBkYXRhID0gdGhpcy5kYXRhO1xyXG4gICAgbGV0ICRlbCA9IHRoaXMuJGVsO1xyXG4gICAgbGV0IGQgPSB0aGlzO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJlc2l6ZSgpOiB2b2lkIHtcclxuICAgICAgalF1ZXJ5LnBsb3RBbmltYXRvcigkZWwsIGRhdGEsIHtcclxuICAgICAgICB4YXhpczoge1xyXG4gICAgICAgICAgdGlja0xlbmd0aDogMCxcclxuICAgICAgICAgIHRpY2tDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgIHRpY2tEZWNpbWFsczogMCxcclxuICAgICAgICAgIG1pbjogMixcclxuICAgICAgICAgIGZvbnQgOiB7XHJcbiAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDEyLFxyXG4gICAgICAgICAgICB3ZWlnaHQ6IDMwMCxcclxuICAgICAgICAgICAgZmFtaWx5OiAnT3BlbiBTYW5zJyxcclxuICAgICAgICAgICAgc2l6ZTogMTIsXHJcbiAgICAgICAgICAgIGNvbG9yOiAnI2Y4ZjhmOCdcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHlheGlzOiB7XHJcbiAgICAgICAgICB0aWNrRGVjaW1hbHM6IDAsXHJcbiAgICAgICAgICB0aWNrQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICBmb250IDoge1xyXG4gICAgICAgICAgICBsaW5lSGVpZ2h0OiAxMixcclxuICAgICAgICAgICAgd2VpZ2h0OiAzMDAsXHJcbiAgICAgICAgICAgIGZhbWlseTogJ09wZW4gU2FucycsXHJcbiAgICAgICAgICAgIHNpemU6IDEyLFxyXG4gICAgICAgICAgICBjb2xvcjogJyNmOGY4ZjgnXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBncmlkOiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHsgY29sb3JzOiBbICd0cmFuc3BhcmVudCcsICd0cmFuc3BhcmVudCcgXSB9LFxyXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDAsXHJcbiAgICAgICAgICBib3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgIG1hcmdpbjogMCxcclxuICAgICAgICAgIG1pbkJvcmRlck1hcmdpbjogMCxcclxuICAgICAgICAgIGxhYmVsTWFyZ2luOiAyMCxcclxuICAgICAgICAgIGhvdmVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcclxuICAgICAgICAgIG1vdXNlQWN0aXZlUmFkaXVzOiA2XHJcbiAgICAgICAgfSxcclxuICAgICAgICBsZWdlbmQ6IGZhbHNlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGpRdWVyeSh3aW5kb3cpLm9uKCdzbjpyZXNpemUnLCByZXNpemUpO1xyXG4gICAgcmVzaXplKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMucmVuZGVyKCk7XHJcbiAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcHAvc3RhdGlzdGljcy9jaGFydHMvZmxvdC1jaGFydC1hbmltYXRvci9mbG90LWNoYXJ0LWFuaW1hdG9yLmRpcmVjdGl2ZS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/statistics/charts/flot-chart-animator/flot-chart-animator.directive.ts\n");

/***/ }),

/***/ "./src/app/statistics/colors.data.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ColorsData; });\n/* tslint:disable */\r\nvar ColorsData = {\r\n    '$lime': '#8CBF26',\r\n    '$red': '#f25118',\r\n    '$redDark': '#d04f4f',\r\n    '$blue': '#4e91ce',\r\n    '$green': '#3ecd74',\r\n    '$orange': '#f2c34d',\r\n    '$pink': '#E671B8',\r\n    '$purple': '#A700AE',\r\n    '$brown': '#A05000',\r\n    '$teal': '#4ab0ce',\r\n    '$gray': '#666',\r\n    '$white': '#fff',\r\n    '$widgetColor': '#f8f8f8',\r\n    '$textColor': '#666'\r\n};\r\n/* tslint:enable */\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL2NvbG9ycy5kYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsb0JBQW9CO0FBQ2IsSUFBTSxVQUFVLEdBQUc7SUFDeEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsTUFBTSxFQUFFLFNBQVM7SUFDakIsVUFBVSxFQUFFLFNBQVM7SUFDckIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsUUFBUSxFQUFFLFNBQVM7SUFDbkIsU0FBUyxFQUFFLFNBQVM7SUFDcEIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsU0FBUyxFQUFFLFNBQVM7SUFDcEIsUUFBUSxFQUFFLFNBQVM7SUFDbkIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsT0FBTyxFQUFFLE1BQU07SUFDZixRQUFRLEVBQUUsTUFBTTtJQUNoQixjQUFjLEVBQUUsU0FBUztJQUN6QixZQUFZLEVBQUUsTUFBTTtDQUNyQixDQUFDO0FBQ0YsbUJBQW1CIiwiZmlsZSI6Ii4vc3JjL2FwcC9zdGF0aXN0aWNzL2NvbG9ycy5kYXRhLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cclxuZXhwb3J0IGNvbnN0IENvbG9yc0RhdGEgPSB7XHJcbiAgJyRsaW1lJzogJyM4Q0JGMjYnLFxyXG4gICckcmVkJzogJyNmMjUxMTgnLFxyXG4gICckcmVkRGFyayc6ICcjZDA0ZjRmJyxcclxuICAnJGJsdWUnOiAnIzRlOTFjZScsXHJcbiAgJyRncmVlbic6ICcjM2VjZDc0JyxcclxuICAnJG9yYW5nZSc6ICcjZjJjMzRkJyxcclxuICAnJHBpbmsnOiAnI0U2NzFCOCcsXHJcbiAgJyRwdXJwbGUnOiAnI0E3MDBBRScsXHJcbiAgJyRicm93bic6ICcjQTA1MDAwJyxcclxuICAnJHRlYWwnOiAnIzRhYjBjZScsXHJcbiAgJyRncmF5JzogJyM2NjYnLFxyXG4gICckd2hpdGUnOiAnI2ZmZicsXHJcbiAgJyR3aWRnZXRDb2xvcic6ICcjZjhmOGY4JyxcclxuICAnJHRleHRDb2xvcic6ICcjNjY2J1xyXG59O1xyXG4vKiB0c2xpbnQ6ZW5hYmxlICovXHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcHAvc3RhdGlzdGljcy9jb2xvcnMuZGF0YS50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/statistics/colors.data.ts\n");

/***/ }),

/***/ "./src/app/statistics/realtime/realtime.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Rickshaw) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Realtime; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__colors_data__ = __webpack_require__(\"./src/app/statistics/colors.data.ts\");\n\r\n\r\n\r\nvar Realtime = /** @class */ (function () {\r\n    function Realtime() {\r\n        this.chartHeight = 300;\r\n    }\r\n    Realtime.prototype.ngOnInit = function () {\r\n        this.initRandom();\r\n        this.initSeriesData();\r\n        this.initSeries();\r\n        this.initMessages();\r\n    };\r\n    Realtime.prototype.initRandom = function () {\r\n        this.rickshawRandom = new Rickshaw.Fixtures.RandomData(150);\r\n    };\r\n    Realtime.prototype.initSeries = function () {\r\n        this.series = [\r\n            {\r\n                color: __WEBPACK_IMPORTED_MODULE_2__colors_data__[\"a\" /* ColorsData */]['$blue'],\r\n                data: this.seriesData[0],\r\n                name: 'Belarus'\r\n            }, {\r\n                color: __WEBPACK_IMPORTED_MODULE_2__colors_data__[\"a\" /* ColorsData */]['$green'],\r\n                data: this.seriesData[2],\r\n                name: 'Canada'\r\n            }, {\r\n                color: __WEBPACK_IMPORTED_MODULE_2__colors_data__[\"a\" /* ColorsData */]['$orange'],\r\n                data: this.seriesData[3],\r\n                name: 'UK'\r\n            }, {\r\n                color: __WEBPACK_IMPORTED_MODULE_2__colors_data__[\"a\" /* ColorsData */]['$red'],\r\n                data: this.seriesData[4],\r\n                name: 'US'\r\n            }\r\n        ];\r\n    };\r\n    Realtime.prototype.initSeriesData = function () {\r\n        this.seriesData = [[], [], [], [], []];\r\n        for (var i = 0; i < 150; i++) {\r\n            this.rickshawRandom.addData(this.seriesData);\r\n        }\r\n    };\r\n    Realtime.prototype.initMessages = function () {\r\n        this.messages = [\r\n            'Changed home page welcome message',\r\n            'Minified JS and CSS',\r\n            'Changed button color from blue to green',\r\n            'Refactored SQL query to use indexed columns',\r\n            'Added additional logging for debugging',\r\n            'Fixed typo',\r\n            'Rewrite conditional logic for clarity',\r\n            'Added documentation for new methods'\r\n        ];\r\n    };\r\n    Realtime = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: '[realtime]',\r\n            template: __webpack_require__(\"./src/app/statistics/realtime/realtime.template.html\"),\r\n            styles: [__webpack_require__(\"./src/app/statistics/realtime/realtime.style.scss\")],\r\n            encapsulation: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ViewEncapsulation\"].None\r\n        })\r\n    ], Realtime);\r\n    return Realtime;\r\n}());\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"./node_modules/rickshaw/rickshaw.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL3JlYWx0aW1lL3JlYWx0aW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUE2RDtBQUlqQjtBQVE1QztJQU5BO1FBU0UsZ0JBQVcsR0FBVyxHQUFHLENBQUM7SUF5RDVCLENBQUM7SUFyREMsMkJBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsNkJBQVUsR0FBVjtRQUNFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsNkJBQVUsR0FBVjtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUc7WUFDWjtnQkFDRSxLQUFLLEVBQUUsZ0VBQVUsQ0FBQyxPQUFPLENBQUM7Z0JBQzFCLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDeEIsSUFBSSxFQUFFLFNBQVM7YUFDaEIsRUFBRTtnQkFDRCxLQUFLLEVBQUUsZ0VBQVUsQ0FBQyxRQUFRLENBQUM7Z0JBQzNCLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDeEIsSUFBSSxFQUFFLFFBQVE7YUFDZixFQUFFO2dCQUNELEtBQUssRUFBRSxnRUFBVSxDQUFDLFNBQVMsQ0FBQztnQkFDNUIsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixJQUFJLEVBQUUsSUFBSTthQUNYLEVBQUU7Z0JBQ0QsS0FBSyxFQUFFLGdFQUFVLENBQUMsTUFBTSxDQUFDO2dCQUN6QixJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksRUFBRSxJQUFJO2FBQ1g7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELGlDQUFjLEdBQWQ7UUFDRSxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBRSxDQUFDO1FBRXpDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDN0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQy9DLENBQUM7SUFDSCxDQUFDO0lBRUQsK0JBQVksR0FBWjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUk7WUFDZixtQ0FBbUM7WUFDbkMscUJBQXFCO1lBQ3JCLHlDQUF5QztZQUN6Qyw2Q0FBNkM7WUFDN0Msd0NBQXdDO1lBQ3hDLFlBQVk7WUFDWix1Q0FBdUM7WUFDdkMscUNBQXFDO1NBQ3RDLENBQUM7SUFDSixDQUFDO0lBM0RVLFFBQVE7UUFOcEIsZ0VBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxZQUFZOzs7WUFHdEIsYUFBYSxFQUFFLGdFQUFpQixDQUFDLElBQUk7U0FDdEMsQ0FBQztPQUNXLFFBQVEsQ0E0RHBCO0lBQUQsZUFBQztDQUFBO0FBNURvQiIsImZpbGUiOiIuL3NyYy9hcHAvc3RhdGlzdGljcy9yZWFsdGltZS9yZWFsdGltZS5jb21wb25lbnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5kZWNsYXJlIGxldCBSaWNrc2hhdzogYW55O1xyXG5cclxuaW1wb3J0IHsgQ29sb3JzRGF0YSB9IGZyb20gJy4uL2NvbG9ycy5kYXRhJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnW3JlYWx0aW1lXScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3JlYWx0aW1lLnRlbXBsYXRlLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWyAnLi9yZWFsdGltZS5zdHlsZS5zY3NzJyBdLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIFJlYWx0aW1lIHtcclxuICBzZXJpZXNEYXRhOiBBcnJheTxhbnk+O1xyXG4gIHNlcmllczogQXJyYXk8YW55PjtcclxuICBjaGFydEhlaWdodDogbnVtYmVyID0gMzAwO1xyXG4gIG1lc3NhZ2VzOiBBcnJheTxzdHJpbmc+O1xyXG4gIHJpY2tzaGF3UmFuZG9tOiBhbnk7XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5pbml0UmFuZG9tKCk7XHJcbiAgICB0aGlzLmluaXRTZXJpZXNEYXRhKCk7XHJcbiAgICB0aGlzLmluaXRTZXJpZXMoKTtcclxuICAgIHRoaXMuaW5pdE1lc3NhZ2VzKCk7XHJcbiAgfVxyXG5cclxuICBpbml0UmFuZG9tKCk6IHZvaWQge1xyXG4gICAgdGhpcy5yaWNrc2hhd1JhbmRvbSA9IG5ldyBSaWNrc2hhdy5GaXh0dXJlcy5SYW5kb21EYXRhKDE1MCk7XHJcbiAgfVxyXG5cclxuICBpbml0U2VyaWVzKCk6IHZvaWQge1xyXG4gICAgdGhpcy5zZXJpZXMgPSBbXHJcbiAgICAgIHtcclxuICAgICAgICBjb2xvcjogQ29sb3JzRGF0YVsnJGJsdWUnXSxcclxuICAgICAgICBkYXRhOiB0aGlzLnNlcmllc0RhdGFbMF0sXHJcbiAgICAgICAgbmFtZTogJ0JlbGFydXMnXHJcbiAgICAgIH0sIHtcclxuICAgICAgICBjb2xvcjogQ29sb3JzRGF0YVsnJGdyZWVuJ10sXHJcbiAgICAgICAgZGF0YTogdGhpcy5zZXJpZXNEYXRhWzJdLFxyXG4gICAgICAgIG5hbWU6ICdDYW5hZGEnXHJcbiAgICAgIH0sIHtcclxuICAgICAgICBjb2xvcjogQ29sb3JzRGF0YVsnJG9yYW5nZSddLFxyXG4gICAgICAgIGRhdGE6IHRoaXMuc2VyaWVzRGF0YVszXSxcclxuICAgICAgICBuYW1lOiAnVUsnXHJcbiAgICAgIH0sIHtcclxuICAgICAgICBjb2xvcjogQ29sb3JzRGF0YVsnJHJlZCddLFxyXG4gICAgICAgIGRhdGE6IHRoaXMuc2VyaWVzRGF0YVs0XSxcclxuICAgICAgICBuYW1lOiAnVVMnXHJcbiAgICAgIH1cclxuICAgIF07XHJcbiAgfVxyXG5cclxuICBpbml0U2VyaWVzRGF0YSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc2VyaWVzRGF0YSA9IFsgW10sIFtdLCBbXSwgW10sIFtdIF07XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNTA7IGkrKykge1xyXG4gICAgICB0aGlzLnJpY2tzaGF3UmFuZG9tLmFkZERhdGEodGhpcy5zZXJpZXNEYXRhKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGluaXRNZXNzYWdlcygpOiB2b2lkIHtcclxuICAgIHRoaXMubWVzc2FnZXMgPSAgW1xyXG4gICAgICAnQ2hhbmdlZCBob21lIHBhZ2Ugd2VsY29tZSBtZXNzYWdlJyxcclxuICAgICAgJ01pbmlmaWVkIEpTIGFuZCBDU1MnLFxyXG4gICAgICAnQ2hhbmdlZCBidXR0b24gY29sb3IgZnJvbSBibHVlIHRvIGdyZWVuJyxcclxuICAgICAgJ1JlZmFjdG9yZWQgU1FMIHF1ZXJ5IHRvIHVzZSBpbmRleGVkIGNvbHVtbnMnLFxyXG4gICAgICAnQWRkZWQgYWRkaXRpb25hbCBsb2dnaW5nIGZvciBkZWJ1Z2dpbmcnLFxyXG4gICAgICAnRml4ZWQgdHlwbycsXHJcbiAgICAgICdSZXdyaXRlIGNvbmRpdGlvbmFsIGxvZ2ljIGZvciBjbGFyaXR5JyxcclxuICAgICAgJ0FkZGVkIGRvY3VtZW50YXRpb24gZm9yIG5ldyBtZXRob2RzJ1xyXG4gICAgXTtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC9zdGF0aXN0aWNzL3JlYWx0aW1lL3JlYWx0aW1lLmNvbXBvbmVudC50cyJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8ifQ==\n//# sourceURL=webpack-internal:///./src/app/statistics/realtime/realtime.component.ts\n");

/***/ }),

/***/ "./src/app/statistics/realtime/realtime.style.scss":
/***/ (function(module, exports) {

eval("module.exports = \".rickshaw_graph .detail {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  z-index: 2;\\n  background: rgba(0, 0, 0, 0.1);\\n  bottom: 0;\\n  width: 1px;\\n  transition: opacity 0.25s linear;\\n  -moz-transition: opacity 0.25s linear;\\n  -o-transition: opacity 0.25s linear;\\n  -webkit-transition: opacity 0.25s linear; }\\n\\n.rickshaw_graph .detail.inactive {\\n  opacity: 0; }\\n\\n.rickshaw_graph .detail .item.active {\\n  opacity: 1; }\\n\\n.rickshaw_graph .detail .x_label {\\n  font-family: Arial, sans-serif;\\n  border-radius: 3px;\\n  padding: 6px;\\n  opacity: 0.5;\\n  border: 1px solid #e0e0e0;\\n  font-size: 12px;\\n  position: absolute;\\n  background: white;\\n  white-space: nowrap; }\\n\\n.rickshaw_graph .detail .x_label.left {\\n  left: 0; }\\n\\n.rickshaw_graph .detail .x_label.right {\\n  right: 0; }\\n\\n.rickshaw_graph .detail .item {\\n  position: absolute;\\n  z-index: 2;\\n  border-radius: 3px;\\n  padding: 0.25em;\\n  font-size: 12px;\\n  font-family: Arial, sans-serif;\\n  opacity: 0;\\n  background: rgba(0, 0, 0, 0.4);\\n  color: white;\\n  border: 1px solid rgba(0, 0, 0, 0.4);\\n  margin-left: 1em;\\n  margin-right: 1em;\\n  margin-top: -1em;\\n  white-space: nowrap; }\\n\\n.rickshaw_graph .detail .item.left {\\n  left: 0; }\\n\\n.rickshaw_graph .detail .item.right {\\n  right: 0; }\\n\\n.rickshaw_graph .detail .item.active {\\n  opacity: 1;\\n  background: rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_graph .detail .item:after {\\n  position: absolute;\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  content: \\\"\\\";\\n  border: 5px solid transparent; }\\n\\n.rickshaw_graph .detail .item.left:after {\\n  top: 1em;\\n  left: -5px;\\n  margin-top: -5px;\\n  border-right-color: rgba(0, 0, 0, 0.8);\\n  border-left-width: 0; }\\n\\n.rickshaw_graph .detail .item.right:after {\\n  top: 1em;\\n  right: -5px;\\n  margin-top: -5px;\\n  border-left-color: rgba(0, 0, 0, 0.8);\\n  border-right-width: 0; }\\n\\n.rickshaw_graph .detail .dot {\\n  width: 4px;\\n  height: 4px;\\n  margin-left: -3px;\\n  margin-top: -3.5px;\\n  border-radius: 5px;\\n  position: absolute;\\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.6);\\n  box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  background: white;\\n  border-width: 2px;\\n  border-style: solid;\\n  display: none;\\n  background-clip: padding-box; }\\n\\n.rickshaw_graph .detail .dot.active {\\n  display: block; }\\n\\n/* graph */\\n.rickshaw_graph {\\n  position: relative; }\\n\\n.rickshaw_graph svg {\\n  display: block;\\n  overflow: hidden; }\\n\\n/* ticks */\\n.rickshaw_graph .x_tick {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 0px;\\n  border-left: 1px dotted rgba(0, 0, 0, 0.2);\\n  pointer-events: none; }\\n\\n.rickshaw_graph .x_tick .title {\\n  position: absolute;\\n  font-size: 12px;\\n  font-family: Arial, sans-serif;\\n  opacity: 0.5;\\n  white-space: nowrap;\\n  margin-left: 3px;\\n  bottom: 1px; }\\n\\n/* annotations */\\n.rickshaw_annotation_timeline {\\n  height: 1px;\\n  border-top: 1px solid #e0e0e0;\\n  margin-top: 10px;\\n  position: relative; }\\n\\n.rickshaw_annotation_timeline .annotation {\\n  position: absolute;\\n  height: 6px;\\n  width: 6px;\\n  margin-left: -2px;\\n  top: -3px;\\n  border-radius: 5px;\\n  background-color: rgba(0, 0, 0, 0.25); }\\n\\n.rickshaw_graph .annotation_line {\\n  position: absolute;\\n  top: 0;\\n  bottom: -6px;\\n  width: 0px;\\n  border-left: 2px solid rgba(0, 0, 0, 0.3);\\n  display: none; }\\n\\n.rickshaw_graph .annotation_line.active {\\n  display: block; }\\n\\n.rickshaw_graph .annotation_range {\\n  background: rgba(0, 0, 0, 0.1);\\n  display: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: -6px; }\\n\\n.rickshaw_graph .annotation_range.active {\\n  display: block; }\\n\\n.rickshaw_graph .annotation_range.active.offscreen {\\n  display: none; }\\n\\n.rickshaw_annotation_timeline .annotation .content {\\n  background: white;\\n  color: black;\\n  opacity: 0.9;\\n  padding: 5px 5px;\\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\\n  border-radius: 3px;\\n  position: relative;\\n  z-index: 20;\\n  font-size: 12px;\\n  padding: 6px 8px 8px;\\n  top: 18px;\\n  left: -11px;\\n  width: 160px;\\n  display: none;\\n  cursor: pointer; }\\n\\n.rickshaw_annotation_timeline .annotation .content:before {\\n  content: \\\"\\\\25b2\\\";\\n  position: absolute;\\n  top: -11px;\\n  color: white;\\n  text-shadow: 0 -1px 1px rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_annotation_timeline .annotation.active,\\n.rickshaw_annotation_timeline .annotation:hover {\\n  background-color: rgba(0, 0, 0, 0.8);\\n  cursor: none; }\\n\\n.rickshaw_annotation_timeline .annotation .content:hover {\\n  z-index: 50; }\\n\\n.rickshaw_annotation_timeline .annotation.active .content {\\n  display: block; }\\n\\n.rickshaw_annotation_timeline .annotation:hover .content {\\n  display: block;\\n  z-index: 50; }\\n\\n.rickshaw_graph .y_axis,\\n.rickshaw_graph .x_axis_d3 {\\n  fill: none; }\\n\\n.rickshaw_graph .y_ticks .tick line,\\n.rickshaw_graph .x_ticks_d3 .tick {\\n  stroke: rgba(0, 0, 0, 0.16);\\n  stroke-width: 2px;\\n  shape-rendering: crisp-edges;\\n  pointer-events: none; }\\n\\n.rickshaw_graph .y_grid .tick,\\n.rickshaw_graph .x_grid_d3 .tick {\\n  z-index: -1;\\n  stroke: rgba(0, 0, 0, 0.2);\\n  stroke-width: 1px;\\n  stroke-dasharray: 1 1; }\\n\\n.rickshaw_graph .y_grid .tick[data-y-value=\\\"0\\\"] {\\n  stroke-dasharray: 1 0; }\\n\\n.rickshaw_graph .y_grid path,\\n.rickshaw_graph .x_grid_d3 path {\\n  fill: none;\\n  stroke: none; }\\n\\n.rickshaw_graph .y_ticks path,\\n.rickshaw_graph .x_ticks_d3 path {\\n  fill: none;\\n  stroke: #808080; }\\n\\n.rickshaw_graph .y_ticks text,\\n.rickshaw_graph .x_ticks_d3 text {\\n  opacity: 0.5;\\n  font-size: 12px;\\n  pointer-events: none; }\\n\\n.rickshaw_graph .x_tick.glow .title,\\n.rickshaw_graph .y_ticks.glow text {\\n  fill: black;\\n  color: black;\\n  text-shadow: -1px 1px 0 rgba(255, 255, 255, 0.1), 1px -1px 0 rgba(255, 255, 255, 0.1), 1px 1px 0 rgba(255, 255, 255, 0.1), 0px 1px 0 rgba(255, 255, 255, 0.1), 0px -1px 0 rgba(255, 255, 255, 0.1), 1px 0px 0 rgba(255, 255, 255, 0.1), -1px 0px 0 rgba(255, 255, 255, 0.1), -1px -1px 0 rgba(255, 255, 255, 0.1); }\\n\\n.rickshaw_graph .x_tick.inverse .title,\\n.rickshaw_graph .y_ticks.inverse text {\\n  fill: white;\\n  color: white;\\n  text-shadow: -1px 1px 0 rgba(0, 0, 0, 0.8), 1px -1px 0 rgba(0, 0, 0, 0.8), 1px 1px 0 rgba(0, 0, 0, 0.8), 0px 1px 0 rgba(0, 0, 0, 0.8), 0px -1px 0 rgba(0, 0, 0, 0.8), 1px 0px 0 rgba(0, 0, 0, 0.8), -1px 0px 0 rgba(0, 0, 0, 0.8), -1px -1px 0 rgba(0, 0, 0, 0.8); }\\n\\n.rickshaw_legend {\\n  font-family: Arial;\\n  font-size: 12px;\\n  color: white;\\n  background: #404040;\\n  display: inline-block;\\n  padding: 12px 5px;\\n  border-radius: 2px;\\n  position: relative; }\\n\\n.rickshaw_legend:hover {\\n  z-index: 10; }\\n\\n.rickshaw_legend .swatch {\\n  width: 10px;\\n  height: 10px;\\n  border: 1px solid rgba(0, 0, 0, 0.2); }\\n\\n.rickshaw_legend .line {\\n  clear: both;\\n  line-height: 140%;\\n  padding-right: 15px; }\\n\\n.rickshaw_legend .line .swatch {\\n  display: inline-block;\\n  margin-right: 3px;\\n  border-radius: 2px; }\\n\\n.rickshaw_legend .label {\\n  margin: 0;\\n  white-space: nowrap;\\n  display: inline;\\n  font-size: inherit;\\n  background-color: transparent;\\n  color: inherit;\\n  font-weight: normal;\\n  line-height: normal;\\n  padding: 0px;\\n  text-shadow: none; }\\n\\n.rickshaw_legend .action:hover {\\n  opacity: 0.6; }\\n\\n.rickshaw_legend .action {\\n  margin-right: 0.2em;\\n  font-size: 10px;\\n  opacity: 0.2;\\n  cursor: pointer;\\n  font-size: 14px; }\\n\\n.rickshaw_legend .line.disabled {\\n  opacity: 0.4; }\\n\\n.rickshaw_legend ul {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  margin: 2px;\\n  cursor: pointer; }\\n\\n.rickshaw_legend li {\\n  padding: 0 0 0 2px;\\n  min-width: 80px;\\n  white-space: nowrap; }\\n\\n.rickshaw_legend li:hover {\\n  background: rgba(255, 255, 255, 0.08);\\n  border-radius: 3px; }\\n\\n.rickshaw_legend li:active {\\n  background: rgba(255, 255, 255, 0.2);\\n  border-radius: 3px; }\\n\\n/***********************************/\\n/**           Rickshaw            **/\\n/***********************************/\\n.rickshaw_legend {\\n  background-color: rgba(51, 51, 51, 0.425);\\n  color: white; }\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/statistics/realtime/realtime.style.scss\n");

/***/ }),

/***/ "./src/app/statistics/realtime/realtime.template.html":
/***/ (function(module, exports) {

eval("module.exports = \"<h2 class=\\\"page-title\\\">Realtime Chart\\r\\n  <small>Realtime data</small>\\r\\n</h2>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-1 d-none d-md-block\\\"></div>\\r\\n  <div class=\\\"col-md-10\\\">\\r\\n    <section widget class=\\\"widget\\\">\\r\\n      <header>\\r\\n        <h4>\\r\\n          <i class=\\\"fa fa-user\\\"></i>\\r\\n          Visitors by Countries\\r\\n        </h4>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body row\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <div id=\\\"legend\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <div  rickshaw-chart\\r\\n                [series]=\\\"series\\\"\\r\\n                [seriesData]=\\\"seriesData\\\"\\r\\n                [height]=\\\"chartHeight\\\"\\r\\n                [renderer]=\\\"'area'\\\"\\r\\n                [messages]=\\\"messages\\\"\\r\\n                [addAnnotation]=\\\"true\\\"\\r\\n                [random]=\\\"rickshawRandom\\\"\\r\\n                [isrealTime]=\\\"true\\\"\\r\\n                [configureProps]=\\\"{gapSize: 0.5, min: 'auto', strokeWidth: 3}\\\">\\r\\n          </div>\\r\\n          <div id=\\\"timeline\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n</div>\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL3JlYWx0aW1lL3JlYWx0aW1lLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMjlCQUEyOUIsMENBQTBDIiwiZmlsZSI6Ii4vc3JjL2FwcC9zdGF0aXN0aWNzL3JlYWx0aW1lL3JlYWx0aW1lLnRlbXBsYXRlLmh0bWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGgyIGNsYXNzPVxcXCJwYWdlLXRpdGxlXFxcIj5SZWFsdGltZSBDaGFydFxcclxcbiAgPHNtYWxsPlJlYWx0aW1lIGRhdGE8L3NtYWxsPlxcclxcbjwvaDI+XFxyXFxuPGRpdiBjbGFzcz1cXFwicm93XFxcIj5cXHJcXG4gIDxkaXYgY2xhc3M9XFxcImNvbC1tZC0xIGQtbm9uZSBkLW1kLWJsb2NrXFxcIj48L2Rpdj5cXHJcXG4gIDxkaXYgY2xhc3M9XFxcImNvbC1tZC0xMFxcXCI+XFxyXFxuICAgIDxzZWN0aW9uIHdpZGdldCBjbGFzcz1cXFwid2lkZ2V0XFxcIj5cXHJcXG4gICAgICA8aGVhZGVyPlxcclxcbiAgICAgICAgPGg0PlxcclxcbiAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtdXNlclxcXCI+PC9pPlxcclxcbiAgICAgICAgICBWaXNpdG9ycyBieSBDb3VudHJpZXNcXHJcXG4gICAgICAgIDwvaDQ+XFxyXFxuICAgICAgPC9oZWFkZXI+XFxyXFxuICAgICAgPGRpdiBjbGFzcz1cXFwid2lkZ2V0LWJvZHkgcm93XFxcIj5cXHJcXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImNvbC1zbS0yXFxcIj5cXHJcXG4gICAgICAgICAgPGRpdiBpZD1cXFwibGVnZW5kXFxcIj48L2Rpdj5cXHJcXG4gICAgICAgIDwvZGl2PlxcclxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiY29sLXNtLTEwXFxcIj5cXHJcXG4gICAgICAgICAgPGRpdiAgcmlja3NoYXctY2hhcnRcXHJcXG4gICAgICAgICAgICAgICAgW3Nlcmllc109XFxcInNlcmllc1xcXCJcXHJcXG4gICAgICAgICAgICAgICAgW3Nlcmllc0RhdGFdPVxcXCJzZXJpZXNEYXRhXFxcIlxcclxcbiAgICAgICAgICAgICAgICBbaGVpZ2h0XT1cXFwiY2hhcnRIZWlnaHRcXFwiXFxyXFxuICAgICAgICAgICAgICAgIFtyZW5kZXJlcl09XFxcIidhcmVhJ1xcXCJcXHJcXG4gICAgICAgICAgICAgICAgW21lc3NhZ2VzXT1cXFwibWVzc2FnZXNcXFwiXFxyXFxuICAgICAgICAgICAgICAgIFthZGRBbm5vdGF0aW9uXT1cXFwidHJ1ZVxcXCJcXHJcXG4gICAgICAgICAgICAgICAgW3JhbmRvbV09XFxcInJpY2tzaGF3UmFuZG9tXFxcIlxcclxcbiAgICAgICAgICAgICAgICBbaXNyZWFsVGltZV09XFxcInRydWVcXFwiXFxyXFxuICAgICAgICAgICAgICAgIFtjb25maWd1cmVQcm9wc109XFxcIntnYXBTaXplOiAwLjUsIG1pbjogJ2F1dG8nLCBzdHJva2VXaWR0aDogM31cXFwiPlxcclxcbiAgICAgICAgICA8L2Rpdj5cXHJcXG4gICAgICAgICAgPGRpdiBpZD1cXFwidGltZWxpbmVcXFwiPjwvZGl2PlxcclxcbiAgICAgICAgPC9kaXY+XFxyXFxuICAgICAgPC9kaXY+XFxyXFxuICAgIDwvc2VjdGlvbj5cXHJcXG4gIDwvZGl2PlxcclxcbjwvZGl2PlxcclxcblwiXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwL3N0YXRpc3RpY3MvcmVhbHRpbWUvcmVhbHRpbWUudGVtcGxhdGUuaHRtbFxuLy8gbW9kdWxlIGlkID0gLi9zcmMvYXBwL3N0YXRpc3RpY3MvcmVhbHRpbWUvcmVhbHRpbWUudGVtcGxhdGUuaHRtbFxuLy8gbW9kdWxlIGNodW5rcyA9IDQiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./src/app/statistics/realtime/realtime.template.html\n");

/***/ }),

/***/ "./src/app/statistics/statistics.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"routes\", function() { return routes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StatisticsModule\", function() { return StatisticsModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(\"./node_modules/@angular/common/esm5/common.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(\"./node_modules/@angular/forms/esm5/forms.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(\"./node_modules/@angular/router/esm5/router.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__layout_directives_rickshaw_rickshaw_module__ = __webpack_require__(\"./src/app/layout/directives/rickshaw/rickshaw.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__layout_directives_nvd3_nvd3_module__ = __webpack_require__(\"./src/app/layout/directives/nvd3/nvd3.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__layout_directives_morris_morris_module__ = __webpack_require__(\"./src/app/layout/directives/morris/morris.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__layout_directives_sparkline_sparkline_module__ = __webpack_require__(\"./src/app/layout/directives/sparkline/sparkline.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__layout_directives_flot_flot_module__ = __webpack_require__(\"./src/app/layout/directives/flot/flot.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__layout_widget_widget_module__ = __webpack_require__(\"./src/app/layout/widget/widget.module.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__stats_stats_component__ = __webpack_require__(\"./src/app/statistics/stats/stats.component.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__charts_charts_component__ = __webpack_require__(\"./src/app/statistics/charts/charts.component.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__charts_flot_chart_animator_flot_chart_animator_directive__ = __webpack_require__(\"./src/app/statistics/charts/flot-chart-animator/flot-chart-animator.directive.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__realtime_realtime_component__ = __webpack_require__(\"./src/app/statistics/realtime/realtime.component.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_jquery_ui__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widget.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_jquery_ui___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_jquery_ui__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_jquery_ui_ui_widgets_sortable_js__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/sortable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_jquery_ui_ui_widgets_sortable_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_jquery_ui_ui_widgets_sortable_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_jquery_ui_ui_widgets_resizable_js__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/resizable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_jquery_ui_ui_widgets_resizable_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_jquery_ui_ui_widgets_resizable_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_easy_pie_chart_dist_jquery_easypiechart_js__ = __webpack_require__(\"./node_modules/easy-pie-chart/dist/jquery.easypiechart.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_easy_pie_chart_dist_jquery_easypiechart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_easy_pie_chart_dist_jquery_easypiechart_js__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar routes = [\r\n    { path: '', redirectTo: 'stats', pathMatch: 'full' },\r\n    { path: 'stats', component: __WEBPACK_IMPORTED_MODULE_11__stats_stats_component__[\"a\" /* Stats */] },\r\n    { path: 'charts', component: __WEBPACK_IMPORTED_MODULE_12__charts_charts_component__[\"a\" /* Charts */] },\r\n    { path: 'realtime', component: __WEBPACK_IMPORTED_MODULE_14__realtime_realtime_component__[\"a\" /* Realtime */] },\r\n];\r\nvar StatisticsModule = /** @class */ (function () {\r\n    function StatisticsModule() {\r\n    }\r\n    StatisticsModule.routes = routes;\r\n    StatisticsModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__[\"NgModule\"])({\r\n            declarations: [\r\n                // Components / Directives/ Pipes\r\n                __WEBPACK_IMPORTED_MODULE_11__stats_stats_component__[\"a\" /* Stats */],\r\n                __WEBPACK_IMPORTED_MODULE_12__charts_charts_component__[\"a\" /* Charts */],\r\n                __WEBPACK_IMPORTED_MODULE_14__realtime_realtime_component__[\"a\" /* Realtime */],\r\n                __WEBPACK_IMPORTED_MODULE_13__charts_flot_chart_animator_flot_chart_animator_directive__[\"a\" /* FlotChartAnimator */]\r\n            ],\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"CommonModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"FormsModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_5__layout_directives_rickshaw_rickshaw_module__[\"a\" /* RickshawChartModule */],\r\n                __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"h\" /* RouterModule */].forChild(routes),\r\n                __WEBPACK_IMPORTED_MODULE_8__layout_directives_sparkline_sparkline_module__[\"a\" /* JqSparklineModule */],\r\n                __WEBPACK_IMPORTED_MODULE_9__layout_directives_flot_flot_module__[\"a\" /* FlotChartModule */],\r\n                __WEBPACK_IMPORTED_MODULE_6__layout_directives_nvd3_nvd3_module__[\"a\" /* Nvd3ChartModule */],\r\n                __WEBPACK_IMPORTED_MODULE_7__layout_directives_morris_morris_module__[\"a\" /* MorrisChartModule */],\r\n                __WEBPACK_IMPORTED_MODULE_10__layout_widget_widget_module__[\"a\" /* WidgetModule */]\r\n            ]\r\n        })\r\n    ], StatisticsModule);\r\n    return StatisticsModule;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL3N0YXRpc3RpY3MubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQztBQUNGO0FBQ0o7QUFDTTtBQUVxQztBQUNaO0FBQ007QUFDTTtBQUNaO0FBQ1Y7QUFFZDtBQUNHO0FBQzZDO0FBQ3ZDO0FBRXRDO0FBQ3VCO0FBQ0M7QUFDUztBQUU3QyxJQUFNLE1BQU0sR0FBRztJQUNwQixFQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDO0lBQ2xELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsc0VBQUssRUFBQztJQUNqQyxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLHlFQUFNLEVBQUM7SUFDbkMsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSwrRUFBUSxFQUFDO0NBQ3hDLENBQUM7QUFzQkY7SUFBQTtJQUVBLENBQUM7SUFEUSx1QkFBTSxHQUFHLE1BQU0sQ0FBQztJQURaLGdCQUFnQjtRQXBCNUIsK0RBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixpQ0FBaUM7Z0JBQ2pDLHNFQUFLO2dCQUNMLHlFQUFNO2dCQUNOLCtFQUFRO2dCQUNSLHFIQUFpQjthQUNsQjtZQUNELE9BQU8sRUFBRTtnQkFDUCw2REFBWTtnQkFDWiwyREFBVztnQkFDWCx3R0FBbUI7Z0JBQ25CLHFFQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztnQkFDN0Isd0dBQWlCO2dCQUNqQiw0RkFBZTtnQkFDZiw0RkFBZTtnQkFDZixrR0FBaUI7Z0JBQ2pCLG1GQUFZO2FBQ2I7U0FDRixDQUFDO09BQ1csZ0JBQWdCLENBRTVCO0lBQUQsdUJBQUM7Q0FBQTtBQUY0QiIsImZpbGUiOiIuL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0aXN0aWNzLm1vZHVsZS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5cclxuaW1wb3J0IHsgUmlja3NoYXdDaGFydE1vZHVsZSB9IGZyb20gJy4uL2xheW91dC9kaXJlY3RpdmVzL3JpY2tzaGF3L3JpY2tzaGF3Lm1vZHVsZSc7XHJcbmltcG9ydCB7IE52ZDNDaGFydE1vZHVsZSB9IGZyb20gJy4uL2xheW91dC9kaXJlY3RpdmVzL252ZDMvbnZkMy5tb2R1bGUnO1xyXG5pbXBvcnQgeyBNb3JyaXNDaGFydE1vZHVsZSB9IGZyb20gJy4uL2xheW91dC9kaXJlY3RpdmVzL21vcnJpcy9tb3JyaXMubW9kdWxlJztcclxuaW1wb3J0IHsgSnFTcGFya2xpbmVNb2R1bGUgfSBmcm9tICcuLi9sYXlvdXQvZGlyZWN0aXZlcy9zcGFya2xpbmUvc3BhcmtsaW5lLm1vZHVsZSc7XHJcbmltcG9ydCB7IEZsb3RDaGFydE1vZHVsZSB9IGZyb20gJy4uL2xheW91dC9kaXJlY3RpdmVzL2Zsb3QvZmxvdC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBXaWRnZXRNb2R1bGUgfSBmcm9tICcuLi9sYXlvdXQvd2lkZ2V0L3dpZGdldC5tb2R1bGUnO1xyXG5cclxuaW1wb3J0IHsgU3RhdHMgfSBmcm9tICcuL3N0YXRzL3N0YXRzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENoYXJ0cyB9IGZyb20gJy4vY2hhcnRzL2NoYXJ0cy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGbG90Q2hhcnRBbmltYXRvciB9IGZyb20gICcuL2NoYXJ0cy9mbG90LWNoYXJ0LWFuaW1hdG9yL2Zsb3QtY2hhcnQtYW5pbWF0b3IuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUmVhbHRpbWUgfSBmcm9tICcuL3JlYWx0aW1lL3JlYWx0aW1lLmNvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgJ2pxdWVyeS11aSc7XHJcbmltcG9ydCAnanF1ZXJ5LXVpL3VpL3dpZGdldHMvc29ydGFibGUuanMnO1xyXG5pbXBvcnQgJ2pxdWVyeS11aS91aS93aWRnZXRzL3Jlc2l6YWJsZS5qcyc7XHJcbmltcG9ydCAnZWFzeS1waWUtY2hhcnQvZGlzdC9qcXVlcnkuZWFzeXBpZWNoYXJ0LmpzJztcclxuXHJcbmV4cG9ydCBjb25zdCByb3V0ZXMgPSBbXHJcbiAge3BhdGg6ICcnLCByZWRpcmVjdFRvOiAnc3RhdHMnLCBwYXRoTWF0Y2g6ICdmdWxsJ30sXHJcbiAge3BhdGg6ICdzdGF0cycsIGNvbXBvbmVudDogU3RhdHN9LFxyXG4gIHtwYXRoOiAnY2hhcnRzJywgY29tcG9uZW50OiBDaGFydHN9LFxyXG4gIHtwYXRoOiAncmVhbHRpbWUnLCBjb21wb25lbnQ6IFJlYWx0aW1lfSxcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAvLyBDb21wb25lbnRzIC8gRGlyZWN0aXZlcy8gUGlwZXNcclxuICAgIFN0YXRzLFxyXG4gICAgQ2hhcnRzLFxyXG4gICAgUmVhbHRpbWUsXHJcbiAgICBGbG90Q2hhcnRBbmltYXRvclxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBSaWNrc2hhd0NoYXJ0TW9kdWxlLFxyXG4gICAgUm91dGVyTW9kdWxlLmZvckNoaWxkKHJvdXRlcyksXHJcbiAgICBKcVNwYXJrbGluZU1vZHVsZSxcclxuICAgIEZsb3RDaGFydE1vZHVsZSxcclxuICAgIE52ZDNDaGFydE1vZHVsZSxcclxuICAgIE1vcnJpc0NoYXJ0TW9kdWxlLFxyXG4gICAgV2lkZ2V0TW9kdWxlXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3RhdGlzdGljc01vZHVsZSB7XHJcbiAgc3RhdGljIHJvdXRlcyA9IHJvdXRlcztcclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwL3N0YXRpc3RpY3Mvc3RhdGlzdGljcy5tb2R1bGUudHMiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./src/app/statistics/statistics.module.ts\n");

/***/ }),

/***/ "./src/app/statistics/stats/stats.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Stats; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n\r\n\r\nvar Stats = /** @class */ (function () {\r\n    function Stats() {\r\n    }\r\n    Stats = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __decorate */]([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: '[stats]',\r\n            template: __webpack_require__(\"./src/app/statistics/stats/stats.template.html\"),\r\n            styles: [__webpack_require__(\"./src/app/statistics/stats/stats.style.scss\")]\r\n        })\r\n    ], Stats);\r\n    return Stats;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL3N0YXRzL3N0YXRzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQTBDO0FBTzFDO0lBQUE7SUFFQSxDQUFDO0lBRlksS0FBSztRQUxqQixnRUFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFNBQVM7OztTQUdwQixDQUFDO09BQ1csS0FBSyxDQUVqQjtJQUFELFlBQUM7Q0FBQTtBQUZpQiIsImZpbGUiOiIuL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0cy9zdGF0cy5jb21wb25lbnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnW3N0YXRzXScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3N0YXRzLnRlbXBsYXRlLmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWyAnLi9zdGF0cy5zdHlsZS5zY3NzJyBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTdGF0cyB7XHJcblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0cy9zdGF0cy5jb21wb25lbnQudHMiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./src/app/statistics/stats/stats.component.ts\n");

/***/ }),

/***/ "./src/app/statistics/stats/stats.style.scss":
/***/ (function(module, exports) {

eval("module.exports = \".equal-height-stats > * {\\n  display: flex; }\\n  .equal-height-stats > * .widget {\\n    width: 100%; }\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vc3JjL2FwcC9zdGF0aXN0aWNzL3N0YXRzL3N0YXRzLnN0eWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkNBQTJDLGtCQUFrQixFQUFFLHFDQUFxQyxrQkFBa0IsRUFBRSIsImZpbGUiOiIuL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0cy9zdGF0cy5zdHlsZS5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIi5lcXVhbC1oZWlnaHQtc3RhdHMgPiAqIHtcXG4gIGRpc3BsYXk6IGZsZXg7IH1cXG4gIC5lcXVhbC1oZWlnaHQtc3RhdHMgPiAqIC53aWRnZXQge1xcbiAgICB3aWR0aDogMTAwJTsgfVxcblwiXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwL3N0YXRpc3RpY3Mvc3RhdHMvc3RhdHMuc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gLi9zcmMvYXBwL3N0YXRpc3RpY3Mvc3RhdHMvc3RhdHMuc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGNodW5rcyA9IDQiXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./src/app/statistics/stats/stats.style.scss\n");

/***/ }),

/***/ "./src/app/statistics/stats/stats.template.html":
/***/ (function(module, exports) {

eval("module.exports = \"<h2 class=\\\"page-title\\\">Basic Stats\\r\\n  <small>Tiles, bars and more</small>\\r\\n</h2>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"icon\\\">\\r\\n        <i class=\\\"fa fa-calendar\\\"></i>\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <strong>14</strong> meetings\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"big-text\\\">\\r\\n        3.28%\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <i class=\\\"fa fa-user\\\"></i>\\r\\n        User Growth\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"icon\\\">\\r\\n        <i class=\\\"fa fa-user\\\"></i>\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <strong>643</strong> customers\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"big-text\\\">\\r\\n        +512\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <i class=\\\"fa fa-comments\\\"></i>\\r\\n        Comments\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"icon\\\">\\r\\n        <i class=\\\"fa fa-shopping-cart\\\"></i>\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <strong>410</strong> orders\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n    <div class=\\\"box\\\">\\r\\n      <div class=\\\"big-text\\\">\\r\\n        6.42%\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        <i class=\\\"fa fa-arrow-right\\\"></i>\\r\\n        Traffic Growth\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row equal-height-stats\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <section widget class=\\\"widget\\\">\\r\\n      <header>\\r\\n        <h5>\\r\\n          <i class=\\\"fa fa-arrow-right\\\"></i>\\r\\n          Progressbars\\r\\n        </h5>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Simple one</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" style=\\\"width: 60%\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Styled ones</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 33%\\\" aria-valuenow=\\\"33\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-2\\\">\\r\\n          <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 52%\\\" aria-valuenow=\\\"52\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-2\\\">\\r\\n          <div class=\\\"progress-bar bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 43%\\\" aria-valuenow=\\\"43\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar bg-inverse\\\" role=\\\"progressbar\\\" style=\\\"width: 33%\\\" aria-valuenow=\\\"33\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <section widget class=\\\"widget\\\">\\r\\n      <header>\\r\\n        <h5>\\r\\n          <i class=\\\"fa fa-caret-right\\\"></i>\\r\\n          Small ones\\r\\n        </h5>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Colors</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar progress-sm bg-info\\\" role=\\\"progressbar\\\" style=\\\"width: 23%\\\" aria-valuenow=\\\"23\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-1\\\">\\r\\n          <div class=\\\"progress-bar progress-sm bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 76%\\\" aria-valuenow=\\\"76\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-1\\\">\\r\\n          <div class=\\\"progress-bar progress-sm bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 43%\\\" aria-valuenow=\\\"43\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-10\\\">\\r\\n          <div class=\\\"progress-bar progress-sm bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 53%\\\" aria-valuenow=\\\"53\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar progress-sm bg-inverse\\\" role=\\\"progressbar\\\" style=\\\"width: 29%\\\" aria-valuenow=\\\"29\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Default progressbar</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar progress-sm\\\" role=\\\"progressbar\\\" style=\\\"width: 60%\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <section widget class=\\\"widget\\\">\\r\\n      <header>\\r\\n        <h5>\\r\\n          <i class=\\\"fa fa-angle-right\\\"></i>\\r\\n          Some extensions\\r\\n        </h5>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">With embedded percentage</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" style=\\\"width: 79%\\\" aria-valuenow=\\\"79\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">79%</div>\\r\\n        </div>\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Active one</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar progress-bar-striped progress-bar-animated bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 51%\\\" aria-valuenow=\\\"51\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">51%</div>\\r\\n        </div>\\r\\n        <h5 class=\\\"mt-0 mb-xs weight-normal\\\">Inversed progress-bar</h5>\\r\\n        <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n          <div class=\\\"progress-bar bg-inverse\\\" role=\\\"progressbar\\\" style=\\\"width: 64%\\\" aria-valuenow=\\\"64\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">64%</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row justify-content-md-center\\\">\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <section widget class=\\\"widget\\\">\\r\\n      <header>\\r\\n        <h5>\\r\\n          <i class=\\\"fa fa-magnet\\\"></i>\\r\\n          Server Overview\\r\\n        </h5>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <ul class=\\\"server-stats\\\">\\r\\n          <li>\\r\\n            <div class=\\\"key float-right\\\">CPU</div>\\r\\n            <div class=\\\"stat\\\">\\r\\n              <div class=\\\"info\\\">60% / 37&deg;C / 3.3 Ghz</div>\\r\\n              <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n                <div class=\\\"progress-bar progress-sm\\\" role=\\\"progressbar\\\" style=\\\"width: 70%\\\" aria-valuenow=\\\"70\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"key float-right\\\">Mem</div>\\r\\n            <div class=\\\"stat\\\">\\r\\n              <div class=\\\"info\\\">29% / 4GB (16 GB)</div>\\r\\n              <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n                <div class=\\\"progress-bar progress-sm bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 29%\\\" aria-valuenow=\\\"29\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"key float-right\\\">LAN</div>\\r\\n            <div class=\\\"stat\\\">\\r\\n              <div class=\\\"info\\\">6 Mb/s <i class=\\\"fa fa-caret-down\\\"></i> &nbsp; 3 Mb/s <i class=\\\"fa fa-caret-up\\\"></i>\\r\\n              </div>\\r\\n              <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n                <div class=\\\"progress-bar progress-sm bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 48%\\\" aria-valuenow=\\\"48\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"key float-right\\\">Access</div>\\r\\n            <div class=\\\"stat\\\">\\r\\n              <div class=\\\"info\\\">17 Mb/s <i class=\\\"fa fa-caret-up\\\"></i> &nbsp; (+18%)</div>\\r\\n              <div class=\\\"progress bg-blue-light mt-0\\\">\\r\\n                <div class=\\\"progress-bar progress-sm bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 64%\\\" aria-valuenow=\\\"64\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <section widget class=\\\"widget widget-overview\\\">\\r\\n      <header>\\r\\n        <h5>\\r\\n          <i class=\\\"fa fa-lightbulb\\\"></i>\\r\\n          Stats Overview\\r\\n        </h5>\\r\\n      </header>\\r\\n      <div class=\\\"widget-body\\\">\\r\\n        <ul class=\\\"overall-stats\\\">\\r\\n          <li>\\r\\n            <div class=\\\"icon float-left\\\">\\r\\n              <i class=\\\"fa fa-user\\\"></i>\\r\\n            </div>\\r\\n            <span class=\\\"key\\\">Total Users</span>\\r\\n            <div class=\\\"value float-right\\\">\\r\\n              <span class=\\\"badge badge-pill badge-danger\\\">7 541</span>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"icon float-left\\\">\\r\\n              <i class=\\\"fa fa-shopping-cart\\\"></i>\\r\\n            </div>\\r\\n            <span class=\\\"key\\\">Total Orders</span>\\r\\n            <div class=\\\"value float-right\\\">\\r\\n              <span class=\\\"badge badge-pill badge-warning\\\">2 876</span>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"icon float-left\\\">\\r\\n              <i class=\\\"fa fa-desktop\\\"></i>\\r\\n            </div>\\r\\n            <span class=\\\"key\\\">Desktop</span>\\r\\n            <div class=\\\"value float-right\\\">\\r\\n              <span class=\\\"badge badge-pill badge-info\\\">68%</span>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <div class=\\\"icon float-left\\\">\\r\\n              <i class=\\\"fa fa-phone\\\"></i>\\r\\n            </div>\\r\\n            <span class=\\\"key\\\">Mobile</span>\\r\\n            <div class=\\\"value float-right\\\">\\r\\n              <span class=\\\"badge badge-pill badge-inverse\\\">32%</span>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n</div>\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/statistics/stats/stats.template.html\n");

/***/ })

});